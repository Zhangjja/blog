{"version":3,"sources":["utils/utils.js","utils/maxLength.js","components/ListHeader/index.js","components/PhotoBox/index.js","components/SelectAccount/index.js","components/StandardTable/index.js","components/ImageViewer/index.js","components/ListHeader/index.module.css","components/StandardTable/index.module.scss","components/ImageViewer/index.module.css","components/PhotoBox/index.module.scss","components/UFormRow/index.js","api/personnel.js","components/TabTableModal/index.js","api/binding.js","components/UFormRow/index.module.scss","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/regenerator-runtime/runtime-module.js","components/Avatar/index.module.css","../node_modules/exif-js/exif.js","components/BatchAddPeople/index.module.scss","../node_modules/lodash/groupBy.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_createBaseEach.js","pages/CommonPlatform/PersonnelManage/index.module.scss","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/ViewList/index.js","pages/CommonPlatform/PersonnelManage/VisitorList.js","utils/uploadFix.js","components/Avatar/index.js","components/BatchAddPeople/BatchUpload.js","components/BatchAddPeople/index.js","pages/CommonPlatform/PersonnelManage/EditForm.js","pages/CommonPlatform/PersonnelManage/BindEquipment/Search.js","pages/CommonPlatform/PersonnelManage/BindEquipment/index.js","pages/CommonPlatform/PersonnelManage/ViewForm.js","pages/CommonPlatform/PersonnelManage/index.js"],"names":["__webpack_require__","d","__webpack_exports__","parseDate","get_date","getPhotoUrl","fixUndefinedData","getDow","getUUID","base64Prefix","defaultPageCount","paginationOption","IP_REG","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","n","_address__WEBPACK_IMPORTED_MODULE_2__","strDate","moment","format","photos","getStorageServerAddress","Array","photo_url","obj","Object","keys","reduce","res","item","Date","now","Math","random","dataUrl","split","length","concat","showSizeChanger","showQuickJumper","defaultPageSize","maxLength","userName","deviceName","deviceToken","IP","port","devicePosition","accountName","organization","mark","versionNumber","description","versionName","idcardNumber","_ref","title","Title","buttonText","doAction","buttonDisabled","buttonHide","hasDivider","customButton","buttonType","rest","D_items_clound_plus_face_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","btnType","button","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","antd__WEBPACK_IMPORTED_MODULE_2__","type","onClick","disabled","assign","style","marginBottom","className","styles","total_header","antd__WEBPACK_IMPORTED_MODULE_3__","mbt10_5","_ref$clsName","clsName","photo","_ref$width","width","_ref$height","height","_ref$objectFit","objectFit","container","src","alt","img","onLoad","e","event","target","containerAspectRatio","naturalWidth","naturalHeight","loadImg","messages","Select","Option","defineMessages","all","id","defaultMessage","failedToGetData","select","SelectAccount","props","_this","D_items_clound_plus_face_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","D_items_clound_plus_face_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","D_items_clound_plus_face_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","loadSubAccounts","selectedOptions","targetOption","parent_id","account_id","loading","getAccountList","then","data","accounts","map","it","children","setState","acountOptions","D_items_clound_plus_face_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","state","triggerChange","value","option","onChange","initCascaderOptions","loginAccount","useInfo","loadState","root","account_name","isLeaf","role","role_id","sub","catch","err","message","error","_this2","page_size","Promise","resolve","reject","getAccounts","response","code","msg","intl","formatMessage","react__WEBPACK_IMPORTED_MODULE_6___default","antd__WEBPACK_IMPORTED_MODULE_9__","options","loadData","changeOnSelect","placeholder","fieldNames","label","React","Component","injectIntl","initTotalList","columns","totalList","forEach","column","needTotal","push","D_items_clound_plus_face_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","total","clear","selected","items","StandardTable","D_items_clound_plus_face_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","D_items_clound_plus_face_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_items_clound_plus_face_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","handleRowSelectChange","selectedRowKeys","selectedRows","needTotalList","sum","val","parseFloat","dataIndex","onSelectRow","handleTableChange","pagination","filters","sorter","cleanSelectedKeys","_this$state","_this$props","dataList","rowKey","selectable","showAlert","paginationProps","showTotal","rowSelection","getCheckboxProps","record","standardTable","tableAlert","antd__WEBPACK_IMPORTED_MODULE_7__","react__WEBPACK_IMPORTED_MODULE_6__","react_intl__WEBPACK_IMPORTED_MODULE_9__","fontWeight","marginLeft","key","render","showIcon","antd__WEBPACK_IMPORTED_MODULE_8__","dataSource","nextProps","PureComponent","defaultProps","loadFail","fixWrap","position","top","left","transform","ImageViewer","photoIndex","isOpen","imageUrl","onClose","isLoading","imagePadding","react__WEBPACK_IMPORTED_MODULE_5___default","react_image_lightbox__WEBPACK_IMPORTED_MODULE_8__","mainSrc","onCloseRequest","enableZoom","imageLoadErrorMessage","react_intl__WEBPACK_IMPORTED_MODULE_6__","wrapperClassName","imageViewer","imageTitle","module","exports","UFormRow","labelSpan","content","labelPosition","contentSpan","right","formItem","D_items_clound_plus_face_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","span","getPeoples","addPeople","updatePeople","deletePeople","batchDeletePeople","getPeopleInfo","batchAddPeople","approval","approvalVisitor","resetPwd","getVisitorList","deleteVisitors","_utils_fetch__WEBPACK_IMPORTED_MODULE_0__","apis","people","batchAdd","list","reset","visitors","fetch","get","params","model","formData","FormData","commonFormData","post","put","delete","people_id","ids","people_ids","append","TabPane","Tabs","selectedRowRequired","TabTableModal","selectedList","page_number","search_form","tabParams","formKey","onSearch","preventDefault","formRef","form","validateFields","values","_loadAsyncData","handleStandardTableChange","filtersArg","pageSize","current","saveFormRef","onTabChange","k","currIndex","p","operateOne","callback","bind","D_items_clound_plus_face_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","operateActions","warning","operateTwo","requestParams","initParams","responseKey","_this$state2","_this$state2$search_f","combineData","requiredKey","requiredParamKeyName","requestMethod","total_number","finally","console","log","visible","onCancel","confirmLoading","FormComponent","formComponent","totalLabel","_this$props$tabTitles","tabTitles","_this$props$operateLa","operateLabels","hasSearch","_this$state3","react__WEBPACK_IMPORTED_MODULE_7___default","antd__WEBPACK_IMPORTED_MODULE_11__","destroyOnClose","footer","defaultActiveKey","animated","tab","handleSearch","wrappedComponentRef","_ListHeader__WEBPACK_IMPORTED_MODULE_13__","antd__WEBPACK_IMPORTED_MODULE_12__","scroll","y","binding","getBoundEquipmentList","getBoundPeopleList","unbinding","equipment","g","self","Function","hadRuntime","regeneratorRuntime","getOwnPropertyNames","indexOf","oldRuntime","undefined","imgWrapper","btnDel","__WEBPACK_AMD_DEFINE_RESULT__","debug","EXIF","EXIFwrapped","ExifTags","Tags","36864","40960","40961","40962","40963","37121","37122","37500","37510","40964","36867","36868","37520","37521","37522","33434","33437","34850","34852","34855","34856","37377","37378","37379","37380","37381","37382","37383","37384","37385","37396","37386","41483","41484","41486","41487","41488","41492","41493","41495","41728","41729","41730","41985","41986","41987","41988","41989","41990","41991","41992","41993","41994","41995","41996","40965","42016","TiffTags","256","257","34665","34853","258","259","262","274","277","284","530","531","282","283","296","273","278","279","513","514","301","318","319","529","532","306","270","271","272","305","315","33432","GPSTags","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","IFD1Tags","StringValues","ExposureProgram","MeteringMode","255","LightSource","Flash","31","32","65","69","71","73","77","79","89","93","95","SensingMethod","SceneCaptureType","SceneType","CustomRendered","WhiteBalance","GainControl","Contrast","Saturation","Sharpness","SubjectDistanceRange","FileSource","Components","imageHasData","exifdata","getImageData","handleBinaryFile","binFile","findEXIFinJPEG","iptcdata","file","dataView","DataView","byteLength","getUint8","offset","isFieldSegmentStart","nameHeaderLength","startOffset","sectionLength","getUint16","readIPTCData","findIPTCinJPEG","isXmpEnabled","xmpdata","dom","DOMParser","getStringFromDB","xmpString","xmpEndIndex","indexOfXmp","substring","slice","domDocument","parseFromString","xml2Object","findXMPinJPEG","test","base64","contentType","match","replace","binary","atob","len","buffer","ArrayBuffer","view","Uint8Array","i","charCodeAt","base64ToArrayBuffer","fileReader","FileReader","onload","result","url","http","XMLHttpRequest","open","responseType","status","send","objectURLToBlob","blob","readAsArrayBuffer","Blob","File","marker","readEXIFData","IptcFieldMap","120","110","55","80","85","122","105","116","fieldValue","fieldName","dataSize","segmentType","segmentStartPos","getInt16","hasOwnProperty","readTags","tiffStart","dirStart","strings","bigEnd","entryOffset","tag","entries","tags","readTagValue","vals","numerator","denominator","numValues","getUint32","valueOffset","Number","getInt32","start","outstr","String","fromCharCode","exifData","gpsData","tiffOffset","firstIFDOffset","ExifIFDPointer","GPSInfoIFDPointer","IFD1OffsetPointer","getNextIFDOffset","thumbTags","JpegIFOffset","JpegIFByteCount","tOffset","tLength","readThumbnailImage","xml2json","xml","json","nodeType","attributes","j","attribute","nodeName","nodeValue","hasChildNodes","childNodes","child","old","idx","itemAtt","dataKey","dataValue","textContent","enableXmp","disableXmp","getData","Image","HTMLImageElement","complete","getTag","getIptcTag","getAllTags","getAllIptcTags","pretty","strPretty","readFromBinaryFile","apply","input","baseAssignValue","createAggregator","prototype","groupBy","arrayAggregator","baseAggregator","baseIteratee","isArray","setter","initializer","collection","iteratee","func","accumulator","array","index","baseEach","baseForOwn","createBaseEach","baseFor","object","isArrayLike","eachFunc","fromRight","iterable","tableList","tableListOperator","tableListForm","submitButtons","operatorLink","operatorWrap","wordBreak","statusWrap","asyncGeneratorStep","gen","_next","_throw","arg","info","done","ViewList","_this$props$columns","_this$props$dataList","react_default","modal","table","wordWrap","peopleName","mobilePhone","visitReason","visitTime","inviteTime","accepted","confirmPending","rejected","visitorList","index_es","text","Fragment","image","PhotoBox","thumbnail","start_time","end_time","badge","VisitorList","components_ViewList","dataURLtoFile","dataurl","filename","arr","mime","bstr","u8arr","lastModifiedDate","name","getOrientation","Exif","orient","uploadFix","rotateImg","direction","canvas","step","degree","PI","ctx","getContext","drawImage","rotate","compress","orientation","document","tCanvas","tctx","ratio","sqrt","fillStyle","fillRect","count","nw","nh","ndata","toDataURL","beforeUpload","size","Avatar","classCallCheck","possibleConstructorReturn","getPrototypeOf","customRequest","reader","needRotate","newFile","readAsDataURL","removeImage","stopPropagation","onRemove","uploadButton","icon","deletable","upload","accept","listType","showUploadList","action","es_button","shape","selectFiles","oriFileLen","BatchUpload","fileList","unSelectedFileList","selectedFileList","uploading","onCustomRequest","fileInfo","updateSelected","toConsumableArray","maxLen","files","onBeforeUpload","isNotImg","_ref2","isLt2M","_ref3","_ref4","showSelected","selectText","multiple","paddingLeft","paddingRight","spin","photoFormat","photoRequired","FormItem","Form","Item","formItemLayout","DatePicker","RangePicker","labelCol","xs","sm","wrapperCol","batchForm","create","_React$Component","_temp","_getPrototypeOf2","_len","arguments","args","_key","onOk","onCreate","onImageChange","v","inherits","createClass","getFieldDecorator","es_form","tooltip","rules","required","BatchAddPeople_BatchUpload","personnelName","mobilePhoneFormat","personnelNameRequired","EditForm","_class","locale","initialValue","EditForm_FormItem","people_name","components_Avatar","sourceAccount","search","SearchForm","onAccountChange","setFieldsValue","userInfo","onSubmit","layout","display","padding","alignItems","Search_FormItem","htmlType","deviceID","connectStatus","relateSuccess","relateError","cancelRelateSuccess","cancelRelateError","relateDevice","related","unrelated","relate","cancelRelate","relatedDeviceNumber","online","offline","BindEquipment","peopleId","equipment_ids","success","uuid","account_ids","Search","ViewForm","identifier","registered","approvalPending","approve","visitorNumber","operate","operateSuccess","operateError","resetPassword","resetConfirm","resetSuccess","resetError","edit","deleteSuccess","deleteError","batchAddSuccess","batchAddError","batchDelete","deleteConfirm","batchDeleteConfirm","batchDeleteSuccess","batchDeleteError","partFailError","failError","photoFormatError","add","update","failed","peopleList","confirmDelete","cancel","peopleDetail","PersonnelManage","href","showViewModal","showImage","onApprove","onOpenVisitorList","showSelectModal","popconfirm","onConfirm","defineProperty","showEditModal","onDelete","queryStrings","location","query","accountId","parentId","locked","showView","showBatch","peoples","errPeoples","isShowImage","imageViewUrl","batchKey","viewListDataSource","isVisitorListVisible","isEquipmentListVisible","selectedPeopleId","batchDeleteMode","getInitAccountIds","toggleBatchDelete","isDeleteMode","onBatchShow","batchFormData","filter","flag","onDeleteAll","handleFormReset","resetFields","fieldsValue","showAddForm","getInfo","objectSpread","saveBatchFormRef","batchFormRef","handleModal","stateProps","inviter_id","closeImage","doBatchAdd","fn","_callee","errDatas","errTypes","regenerator_default","wrap","_context","prev","next","err_people","Modal","maxHeight","overflowY","typemsg","ImageFile","stop","handleBatchCreate","imageList","handleCreate","editFormRef","telephone","idcard_number","method","handleSelectRows","rows","initAccountIds","cancelApiRequsets","_this3","_this4","row","gutter","md","lg","xl","col","PersonnelManage_FormItem","_this5","card","bordered","renderSimpleForm","ListHeader","marginRight","PersonnelManage_EditForm","BatchAddPeople","PersonnelManage_VisitorList","PersonnelManage_BindEquipment","isSelectVisible","PersonnelManage_ViewForm"],"mappings":"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","file":"static/js/7.96cae532.chunk.js","sourcesContent":["import moment from 'moment';\r\nimport qs from 'querystringify';\r\nimport { getStorageServerAddress } from './address'\r\n\r\nexport const numbers = length =>\r\n  Array.apply(null, { length: length }).map(Number.call, Number);\r\n\r\n// type: \"today\",\"three\",\"week\"\r\nexport const getDate = type => {\r\n  switch (type) {\r\n    case 'today':\r\n      let today = [\r\n        moment()\r\n          .startOf('day')\r\n          .format('YYYY-MM-DD HH:mm:ss'),\r\n        moment()\r\n          .endOf('day')\r\n          .format('YYYY-MM-DD HH:mm:ss')\r\n      ];\r\n      return today;\r\n    case 'three':\r\n      let three = [\r\n        moment()\r\n          .subtract(2, 'day')\r\n          .startOf('day')\r\n          .format('YYYY-MM-DD HH:mm:ss'),\r\n        moment()\r\n          .endOf('day')\r\n          .format('YYYY-MM-DD HH:mm:ss')\r\n      ];\r\n      return three;\r\n    case 'week':\r\n      let week = [\r\n        moment()\r\n          .subtract(6, 'day')\r\n          .startOf('day')\r\n          .format('YYYY-MM-DD HH:mm:ss'),\r\n        moment()\r\n          .endOf('day')\r\n          .format('YYYY-MM-DD HH:mm:ss')\r\n      ];\r\n      return week;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const parseDate = strDate => {\r\n  if (strDate) {\r\n    return moment(strDate).format('YYYY-MM-DD HH:mm:ss');\r\n  }\r\n\r\n  return null;\r\n\r\n};\r\n\r\n/**\r\n * 时间字符串转moment\r\n * @param {*} strDateTime \r\n */\r\nexport const dateTimeToMoment = strDateTime => {\r\n  if (strDateTime) {\r\n    return moment(strDateTime)\r\n  }\r\n}\r\n\r\nexport const parseDateTime = strDate => {\r\n  if (strDate) {\r\n    return moment(strDate, 'YYYY-MM-DD HH:mm:ss').valueOf()\r\n  }\r\n\r\n  return null;\r\n\r\n};\r\n\r\nexport const get_date = strDate => {\r\n  if (strDate) {\r\n    return moment(strDate).format('YYYY-MM-DD');\r\n  }\r\n\r\n  return null;\r\n\r\n};\r\n\r\nexport const get_time = strDate => {\r\n  if (strDate) {\r\n    return moment(strDate).format('HH:mm:ss');\r\n  }\r\n\r\n  return null;\r\n\r\n};\r\n\r\nexport const conbineNames = (arr, keys, keyProp, valueProp) => {\r\n  let conbinedNames = arr.reduce((allNames, current) => {\r\n\r\n    keys.forEach(key => {\r\n      if (current[keyProp] === key) {\r\n        allNames += ',' + current[valueProp];\r\n      }\r\n    });\r\n\r\n    return allNames;\r\n  }, '');\r\n\r\n  if (conbinedNames.length > 0) {\r\n    conbinedNames = conbinedNames.substring(1)\r\n  }\r\n\r\n  return conbinedNames;\r\n};\r\n\r\nexport function getPhotoUrl(photos) {\r\n  if (photos) {\r\n    let baseUrl = getStorageServerAddress()\r\n    let photoObj = {}\r\n    if (photos instanceof Array) {\r\n      photoObj = photos[0] || {}\r\n    } else {\r\n      photoObj = photos || {}\r\n    }\r\n\r\n    let fullName = baseUrl + \"/\" + photoObj.photo_url\r\n    return fullName;\r\n\r\n  }\r\n\r\n  return \"\"\r\n\r\n}\r\n\r\n/**\r\n *非必填项未填，则删除该字段\r\n *\r\n * @export\r\n * @param {Object} obj 要处理的表单\r\n * @returns 整理后的表单\r\n */\r\nexport function fixUndefinedData(obj) {\r\n  const keys = Object.keys(obj)\r\n  return keys.reduce((res, item) => {\r\n    if (typeof obj[item] !== 'undefined') {\r\n      res[item] = obj[item]\r\n    }\r\n    return res\r\n  }, {})\r\n}\r\n\r\nexport function getValueFromQuery(querystring, key) {\r\n  if (!(querystring && key)) {\r\n    return ''\r\n  }\r\n  return qs.parse(querystring)[key]\r\n}\r\n\r\nexport function parseQuery(querystring) {\r\n  if (!querystring) {\r\n    return {}\r\n  }\r\n  return qs.parse(querystring)\r\n}\r\n\r\nexport function getDow() {\r\n  return moment(Date.now())\r\n}\r\n\r\nexport function getUUID() {\r\n  return Date.now() + Math.random()\r\n}\r\n\r\nexport function base64Prefix(dataUrl) {\r\n  if (dataUrl.split(',').length === 1) {\r\n    dataUrl = `data:image/jpg;base64,${dataUrl}`\r\n  }\r\n  return dataUrl\r\n}\r\n\r\n// 分页\r\nexport const pageSizeOptions = ['30', '50', '80', '100']\r\n\r\nexport const defaultPageCount = 30\r\n\r\nexport const paginationOption = {\r\n  showSizeChanger: true,\r\n  showQuickJumper: true,\r\n  defaultPageSize: defaultPageCount,\r\n}\r\n\r\n\r\n// 正则\r\n\r\nexport const IDCARD_REG = /^[1-9]\\d{7}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}$|^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}([0-9]|X)$/i\r\n\r\nexport const PHONE_REG = /^\\d{6,20}$/\r\n\r\nexport const IP_REG = /(?=(\\b|\\D))(((\\d{1,2})|(1\\d{1,2})|(2[0-4]\\d)|(25[0-5]))\\.){3}((\\d{1,2})|(1\\d{1,2})|(2[0-4]\\d)|(25[0-5]))(?=(\\b|\\D))/\r\n\r\nexport const URL_REG = /(https?):\\/\\/[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[-A-Za-z0-9+&@#/%=~_|]/i\r\n\r\nexport const MAC_REG = /^[A-F0-9]{2}(-[A-F0-9]{2}){5}$|^[A-F0-9]{2}(:[A-F0-9]{2}){5}$/i\r\n\r\nexport const IPPORT_REG = /(?=(\\b|\\D))(((\\d{1,2})|(1\\d{1,2})|(2[0-4]\\d)|(25[0-5]))\\.){3}((\\d{1,2})|(1\\d{1,2})|(2[0-4]\\d)|(25[0-5]))(?=(\\b|\\D)):\\d{1,5}/\r\n\r\nexport const LETTER_NUM_REG = /^[0-9a-z]+$/i","const maxLength = {\r\n  userName: 30,\r\n  deviceName: 50,\r\n  deviceToken: 50,\r\n  IP: 15,\r\n  port: 5,\r\n  devicePosition: 100,\r\n  accountName: 30,\r\n  organization: 50,\r\n  mark: 50,\r\n  versionNumber: 20,\r\n  description: 50,\r\n  versionName: 20,\r\n  idcardNumber: 30,\r\n}\r\n\r\nexport default maxLength","import React from 'react';\r\nimport { Button, Divider } from 'antd';\r\nimport styles from './index.module.css';\r\n\r\nexport default ({title,Title, buttonText,doAction, buttonDisabled,buttonHide,hasDivider,customButton,buttonType, ...rest}) => {\r\n  let btnType = buttonType || 'primary'\r\n  const button = (customButton && (<div>{customButton}</div>)) ||\r\n    <Button type={btnType} onClick={doAction} disabled={buttonDisabled}>{buttonText}</Button>\r\n  return (\r\n  <div style={{ marginBottom: 5 }} {...rest}>\r\n    <header className={styles.total_header}>\r\n      <div>{Title ? <Title /> : title}</div>\r\n      {(!buttonHide) && button}\r\n    </header>\r\n    {hasDivider && <Divider className={styles.mbt10_5} />}\r\n  </div>\r\n)};\r\n","import React from 'react';\r\nimport styles from './index.module.scss';\r\n\r\nconst loadImg = (event, objectFit, width, height) => {\r\n  let target = event.target;\r\n  let containerAspectRatio = width / height;\r\n  let imgAspectRatio = target.naturalWidth / target.naturalHeight;\r\n\r\n  if (imgAspectRatio > containerAspectRatio) {\r\n    if (objectFit === 'cover') {\r\n      target.style.height = '100%';\r\n      target.style.width = 'auto';\r\n    } else {\r\n      // contain\r\n      target.style.width = '100%';\r\n      target.style.height = 'auto';\r\n    }\r\n  } else {\r\n    if (objectFit === 'cover') {\r\n      target.style.width = '100%';\r\n      target.style.height = 'auto';\r\n    } else {\r\n      // contain\r\n      target.style.height = '100%';\r\n      target.style.width = 'auto';\r\n    }\r\n  }\r\n};\r\n\r\nexport default ({\r\n  clsName = '',\r\n  photo,\r\n  width = 60,\r\n  height = 80,\r\n  objectFit = 'cover',\r\n  ...rest\r\n}) => (\r\n  <div\r\n    className={`${clsName} ${styles.container}`}\r\n    style={{ width, height }}\r\n    {...rest}\r\n  >\r\n    <img\r\n      src={photo}\r\n      alt=\"\"\r\n      className={styles.img}\r\n      onLoad={e => loadImg(e, objectFit, width, height)}\r\n    />\r\n  </div>\r\n);\r\n","\r\nimport React from 'react';\r\nimport { message, Select, Cascader } from 'antd';\r\nimport { injectIntl, FormattedMessage, defineMessages } from 'react-intl';\r\nimport { loadState } from '../../utils/localStorage';\r\nimport {getAccounts} from '../../api/account';\r\n\r\nconst Option = Select.Option;\r\n\r\nconst messages = defineMessages({\r\n  all: {\r\n    id: 'common.all',\r\n    defaultMessage: '全部'\r\n  },\r\n  failedToGetData: {\r\n    id: 'common.error.failedToGetData',\r\n    defaultMessage: '获取数据失败!'\r\n  },\r\n  select: {\r\n    id: 'common.select',\r\n    defaultMessage: '请选择'\r\n  }\r\n});\r\n\r\nclass SelectAccount extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      acountOptions: [],\r\n    };\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    const useInfo = loadState('userInfo', true) || {}\r\n    const loginAccount = useInfo.account_id;\r\n    // 如果初始值是空，触发change，赋初值为登录用户\r\n    this.initCascaderOptions(loginAccount);\r\n  }\r\n\r\n\r\n  loadSubAccounts = (selectedOptions) => {\r\n    const targetOption = selectedOptions[selectedOptions.length - 1];\r\n    const parent_id = targetOption.account_id\r\n    targetOption.loading = true;\r\n    this.getAccountList(parent_id).then((data) => {\r\n      targetOption.loading = false;\r\n      let accounts = data.accounts;\r\n      accounts = accounts.map((it) => {\r\n        return it;\r\n      })\r\n      targetOption.children = accounts;\r\n      this.setState({\r\n        acountOptions: [...this.state.acountOptions],\r\n      });\r\n    })\r\n  }\r\n\r\n  getAccountList(id) {\r\n    const data = {\r\n      account_id: id,\r\n      page_size: 99999,\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      getAccounts(data).then((response) => {\r\n        if (response.code === 1000) {\r\n          resolve(response.data)\r\n        } else {\r\n          reject(response.msg || this.props.intl.formatMessage(messages.failedToGetData));\r\n        }\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n  triggerChange = (value, option)  => {\r\n    const onChange = this.props.onChange;\r\n    if (onChange) {\r\n      onChange(value, option);\r\n    }\r\n  }\r\n\r\n  initCascaderOptions = (loginAccount) => {\r\n    const useInfo = loadState('userInfo', true) || {}\r\n    let root = {\r\n      account_name: useInfo.account_name,\r\n      account_id: useInfo.account_id,\r\n      isLeaf: useInfo.role.role_id === 3,\r\n      children: [],\r\n    }\r\n\r\n    this.getAccountList().then((data) => {\r\n      let accounts = data.accounts || []\r\n      accounts = accounts.map((it) => {\r\n        // isLeaf : 是否是叶子\r\n        it.isLeaf = it.role.role_id === 3\r\n        if (this.props.value.length === 3 && it.account_id === this.props.value[1]) {\r\n          this.getAccountList(it.account_id).then(data => {\r\n            it.children = data.accounts.map((sub) => {\r\n              sub.isLeaf = true;\r\n              return sub;\r\n            })\r\n            this.setState({\r\n              acountOptions: [root],\r\n            })\r\n          })\r\n        } \r\n        return it\r\n      })\r\n      root.children = accounts;\r\n      this.setState({\r\n        acountOptions: [root],\r\n      })\r\n    }).catch(err => {\r\n      message.error(err)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n    <Cascader\r\n    value={this.props.value || []}\r\n    options={this.state.acountOptions}\r\n    style={this.props.style}\r\n    onChange={this.triggerChange}\r\n    loadData={this.loadSubAccounts}\r\n    changeOnSelect\r\n    placeholder={this.props.intl.formatMessage(messages.select)}\r\n    fieldNames={{ label: 'account_name', value: 'account_id', children: 'children' }}/>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(SelectAccount);\r\n","import React, { PureComponent, Fragment } from 'react';\r\nimport { Table, Alert } from 'antd';\r\nimport { injectIntl, FormattedMessage, defineMessages } from 'react-intl';\r\nimport styles from './index.module.scss';\r\n\r\nfunction initTotalList(columns) {\r\n  const totalList = [];\r\n  columns.forEach(column => {\r\n    if (column.needTotal) {\r\n      totalList.push({ ...column, total: 0 });\r\n    }\r\n  });\r\n  return totalList;\r\n}\r\n\r\nconst messages = defineMessages({\r\n  total: {\r\n    id: 'common.total',\r\n    defaultMessage: '总计',\r\n  },\r\n  clear: {\r\n    id: 'common.clear',\r\n    defaultMessage: '清空',\r\n  },\r\n  selected: {\r\n    id: 'common.selected',\r\n    defaultMessage: '请选择',\r\n  },\r\n  items: {\r\n    id: 'common.items',\r\n    defaultMessage: '项',\r\n  }\r\n});\r\n\r\nclass StandardTable extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    const { columns } = props;\r\n    const needTotalList = initTotalList(columns);\r\n\r\n    this.state = {\r\n      selectedRowKeys: [],\r\n      needTotalList,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps) {\r\n    // clean state\r\n    if ((nextProps.selectedRows || []).length === 0) {\r\n      const needTotalList = initTotalList(nextProps.columns);\r\n      return {\r\n        selectedRowKeys: [],\r\n        needTotalList,\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  handleRowSelectChange = (selectedRowKeys, selectedRows) => {\r\n    let { needTotalList } = this.state;\r\n    needTotalList = needTotalList.map(item => ({\r\n      ...item,\r\n      total: selectedRows.reduce((sum, val) => sum + parseFloat(val[item.dataIndex], 10), 0),\r\n    }));\r\n    const { onSelectRow } = this.props;\r\n    if (onSelectRow) {\r\n      onSelectRow(selectedRows);\r\n    }\r\n\r\n    this.setState({ selectedRowKeys, needTotalList });\r\n  };\r\n\r\n  handleTableChange = (pagination, filters, sorter) => {\r\n    const { onChange } = this.props;\r\n    if (onChange) {\r\n      onChange(pagination, filters, sorter);\r\n    }\r\n  };\r\n\r\n  cleanSelectedKeys = () => {\r\n    this.handleRowSelectChange([], []);\r\n  };\r\n\r\n  render() {\r\n    const { selectedRowKeys, needTotalList } = this.state;\r\n    const {\r\n      dataList,\r\n      pagination,\r\n      loading,\r\n      columns,\r\n      rowKey,\r\n      selectable,\r\n      showAlert,\r\n    } = this.props;\r\n\r\n    const paginationProps = {\r\n      showSizeChanger: true,\r\n      showQuickJumper: true,\r\n      showTotal: total => `${this.props.intl.formatMessage(messages.total)} ${total} ${this.props.intl.formatMessage(messages.items)}`,\r\n      ...pagination,\r\n    };\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.handleRowSelectChange,\r\n      getCheckboxProps: record => ({\r\n        disabled: record.disabled,\r\n      }),\r\n    };\r\n\r\n    return (\r\n      <div className={styles.standardTable}>\r\n        {selectable && showAlert && <div className={styles.tableAlert}>\r\n          <Alert\r\n            message={\r\n              <Fragment>\r\n                <FormattedMessage {...messages.selected} /> <a style={{ fontWeight: 600 }}>{selectedRowKeys.length}</a> <FormattedMessage {...messages.items} />&nbsp;&nbsp;\r\n                {needTotalList.map(item => (\r\n                  <span style={{ marginLeft: 8 }} key={item.dataIndex}>\r\n                    {item.title}\r\n                    <FormattedMessage {...messages.total} />&nbsp;\r\n                    <span style={{ fontWeight: 600 }}>\r\n                      {item.render ? item.render(item.total) : item.total}\r\n                    </span>\r\n                  </span>\r\n                ))}\r\n                <a onClick={this.cleanSelectedKeys} style={{ marginLeft: 24 }}>\r\n                <FormattedMessage {...messages.clear} />\r\n                </a>\r\n              </Fragment>\r\n            }\r\n            type=\"info\"\r\n            showIcon\r\n          />\r\n        </div>}\r\n        <Table\r\n          loading={loading}\r\n          rowKey={rowKey || 'key'}\r\n          rowSelection={selectable ? rowSelection : null}\r\n          dataSource={dataList}\r\n          columns={columns}\r\n          pagination={paginationProps}\r\n          onChange={this.handleTableChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nStandardTable.defaultProps = {\r\n  selectable: true,\r\n  showAlert: true,\r\n}\r\n\r\nexport default injectIntl(StandardTable);\r\n","import React, {Component} from 'react';\r\nimport { injectIntl, FormattedMessage, defineMessages } from 'react-intl';\r\nimport {Spin} from 'antd'\r\nimport Lightbox from 'react-image-lightbox'\r\nimport 'react-image-lightbox/style.css';\r\n\r\nimport styles from './index.module.css';\r\n\r\nconst messages = defineMessages({\r\n  loadFail: {\r\n    id: 'component.ImageViewer.loadFail',\r\n    defaultMessage: '图片加载失败!'\r\n  },\r\n});\r\n\r\nconst fixWrap = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)'\r\n}\r\n\r\nclass ImageViewer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      photoIndex: 0,\r\n    };\r\n  }\r\n\r\n render() {\r\n  const {isOpen, imageUrl, onClose, isLoading, imagePadding} = this.props\r\n   return (\r\n    <div>\r\n      {isOpen && <div>\r\n        {imageUrl && (!isLoading) &&(<Lightbox\r\n          mainSrc={imageUrl}\r\n          onCloseRequest={onClose}\r\n          enableZoom={false}\r\n          imageLoadErrorMessage={<FormattedMessage {...messages.loadFail} />}\r\n          wrapperClassName={styles.imageViewer}\r\n          imagePadding={imagePadding}\r\n          imageTitle=\"\" />)}\r\n        {isLoading && <Spin style={fixWrap}/> }\r\n      </div>}\r\n    </div>\r\n   )\r\n }\r\n}\r\n\r\nImageViewer.defaultProps = {\r\n  imagePadding: 100\r\n}\r\n\r\nexport default injectIntl(ImageViewer)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mbt10_5\":\"ListHeader_mbt10_5__3iesS\",\"total_header\":\"ListHeader_total_header__itbu3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"standardTable\":\"StandardTable_standardTable__37lgC\",\"tableAlert\":\"StandardTable_tableAlert__3mUk-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageViewer\":\"ImageViewer_imageViewer__1C2gj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PhotoBox_container__1DsXi\",\"img\":\"PhotoBox_img__2P6Af\"};","import React from 'react';\r\nimport { Col, Row } from 'antd';\r\n\r\nimport styles from './index.module.scss';\r\n\r\nclass UFormRow extends React.Component {\r\n  render() {\r\n    const {labelSpan, title, content, data, labelPosition,style} = this.props\r\n\r\n    const contentSpan = {\r\n      top: 24,\r\n      right: 24-labelSpan,\r\n      left: ''\r\n    }[labelPosition]\r\n\r\n    return (\r\n      <Row className={styles.formItem} style={{...style}}>\r\n        <Col span={labelSpan} className={styles[labelPosition]}>{data.title || title}</Col>\r\n        <Col span={contentSpan}>{data.content || content}</Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n\r\nUFormRow.defaultProps = {\r\n  data: {},\r\n  labelSpan: 8,\r\n  title: '',\r\n  content: '',\r\n  labelPosition: 'left'\r\n}\r\n\r\nexport default UFormRow","import fetch from '../utils/fetch'\r\n\r\nconst apis = {\r\n  people: '/api/people',\r\n  batchAdd: '/api/people/batch',\r\n  list: '/api/people/list',\r\n  approval: '/api/people/approval',\r\n  approvalVisitor: '/api/people/approval/visitors',\r\n  reset: '/api/people/reset',\r\n  visitors: '/api/people/visitors',\r\n}\r\n\r\n\r\n/**\r\n *获取人员列表\r\n *\r\n * @export\r\n * @param {Object} data\r\n * @returns\r\n */\r\nexport function getPeoples(data) {\r\n  return fetch.get(apis.list, { params: data });\r\n}\r\n\r\n/**\r\n *添加人员,需上传图片，因此是提交formData\r\n *\r\n * @export\r\n * @param {Object} model\r\n * @returns\r\n */\r\nexport function addPeople(model) {\r\n  var formData = new FormData();\r\n  formData = commonFormData(formData, model);\r\n  return fetch.post(apis.people, formData);\r\n}\r\n\r\n/**\r\n *修改人员,需上传图片，因此是提交formData\r\n *\r\n * @export\r\n * @param {Object} model\r\n * @returns\r\n */\r\nexport function updatePeople(model) {\r\n  var formData = new FormData();\r\n  formData = commonFormData(formData, model);\r\n\r\n  return fetch.put(apis.people, formData);\r\n}\r\n\r\n/**\r\n *删除人员\r\n *\r\n * @export\r\n * @param {Array} data\r\n * @returns\r\n */\r\nexport function deletePeople(id) {\r\n  return fetch.delete(apis.people, {\r\n    data: {\r\n      people_id: id\r\n    }\r\n  });\r\n}\r\n\r\nexport function batchDeletePeople(ids) {\r\n  return fetch.delete(apis.list, {\r\n    data: {\r\n      people_ids: ids\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n *获取用户信息\r\n *\r\n * @export\r\n * @param {Number} id\r\n * @returns\r\n */\r\nexport function getPeopleInfo(id) {\r\n  return fetch.get(apis.people, {\r\n    params: {\r\n      people_id: id,\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * 批量添加人员\r\n *\r\n * @export\r\n * @param {*} formData\r\n * @returns\r\n */\r\nexport function batchAddPeople(formData) {\r\n  return fetch.post(apis.batchAdd, formData)\r\n}\r\n\r\n/**\r\n * 审批人员\r\n * @param {*} data \r\n */\r\nexport function approval(data) {\r\n  return fetch.post(apis.approval, data)\r\n}\r\n\r\n/**\r\n * 审批人员\r\n * @param {*} data \r\n */\r\nexport function approvalVisitor(data) {\r\n  return fetch.post(apis.approvalVisitor, data)\r\n}\r\n\r\n/**\r\n * 重置人员密码\r\n * @param {*} data \r\n */\r\nexport function resetPwd(data) {\r\n  return fetch.post(apis.reset, data)\r\n}\r\n\r\n// 获取访客列表\r\nexport function getVisitorList(data) {\r\n  return fetch.get(apis.visitors, { params: data });\r\n}\r\n\r\n// 批量删除访客\r\nexport function deleteVisitors(ids) {\r\n  return fetch.delete(apis.visitors, {\r\n    data: {\r\n      people_ids: ids\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n *遍历对象添加到formData中\r\n *\r\n * @param {FormData} formData\r\n * @param {Object} model\r\n * @returns {FormData} formData\r\n */\r\nfunction commonFormData(formData, model) {\r\n  const keys = Object.keys(model)\r\n  keys.forEach((it) => {\r\n    formData.append(it, model[it])\r\n  })\r\n  return formData;\r\n}\r\n\r\n","import React from 'react';\r\nimport { injectIntl, FormattedMessage, defineMessages } from 'react-intl';\r\nimport { Modal, message, Tabs, Table,} from 'antd';\r\nimport ListHeader from '../ListHeader'\r\n\r\nconst TabPane = Tabs.TabPane;\r\n\r\nconst messages = defineMessages({\r\n  failedToGetData: {\r\n    id: 'common.error.failedToGetData',\r\n    defaultMessage: '获取数据失败!',\r\n  },\r\n  selectedRowRequired: {\r\n    id: 'common.selectedRow.required',\r\n    defaultMessage: '请先选择要操作的数据!'\r\n  }\r\n});\r\n\r\n\r\nclass TabTableModal extends React.Component {\r\n\r\n  state = {\r\n    selectedRows: [],\r\n    selectedRowKeys: [],\r\n    loading: false,\r\n    list: [],\r\n    selectedList: [],\r\n    total: 0,\r\n    page_number: 1,\r\n    page_size: 10,\r\n    search_form: {},\r\n    tabParams:{},\r\n    formKey: Date.now(),\r\n  }\r\n\r\n  /**\r\n   *加载后请求第一个tab数据\r\n   *\r\n   * @memberof TabTableModal\r\n   */\r\n  componentDidMount() {\r\n    const tabParams = this.props.tabParams\r\n    if (tabParams.length) {\r\n      this.setState({\r\n        tabParams: tabParams[0]\r\n      }, this._loadAsyncData)\r\n    } else {\r\n      this._loadAsyncData()\r\n    }\r\n  }\r\n\r\n  // 加载列表数据\r\n  _loadAsyncData() {\r\n    const params = this.props.requestParams\r\n    const initParams = this.props.initParams || {}\r\n    const responseKey = this.props.responseKey\r\n    let { page_number, page_size, search_form = {}, tabParams } = this.state;\r\n    let combineData = {page_number, page_size, ...initParams, ...search_form, ...params, ...tabParams}\r\n    let requiredKey = this.props.requiredParamKeyName\r\n    if (requiredKey && !combineData[requiredKey]) {\r\n      console.log('lack of required param!')\r\n      return\r\n    }\r\n    this.setState({\r\n      loading: true\r\n    });\r\n    // params 接口额外要传递的参数\r\n    // search_form 表单参数\r\n    // tabParams tab切换要传递的参数\r\n    this.props.requestMethod(combineData).then(res => {\r\n      const data = res.data\r\n      if (res.code === 1000) {\r\n        let total = data.total_number || 0;\r\n        this.setState({\r\n          list: data[responseKey],\r\n          total,\r\n        })\r\n      } else {\r\n        message.error(res.msg || this.props.intl.formatMessage(messages.failedToGetData))\r\n      }\r\n    }).catch(err => {\r\n      message.error(this.props.intl.formatMessage(messages.failedToGetData))\r\n    }).finally(() => {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    })\r\n  }\r\n\r\n  // 存储已选数据\r\n  handleRowSelectChange = (selectedRowKeys, selectedRows) => {\r\n    this.setState({ selectedRowKeys, selectedRows});\r\n  };\r\n\r\n\r\n  onSearch = (e)=> {\r\n    e.preventDefault();\r\n    const form = this.formRef.props.form;\r\n    form.validateFields((err, values) => {\r\n      if (err) {\r\n          return;\r\n      }\r\n      this.setState({\r\n        page_number: 1,\r\n        search_form: values,\r\n      }, this._loadAsyncData)\r\n    });\r\n  }\r\n\r\n  // 表格跳页\r\n  handleStandardTableChange = (pagination, filtersArg, sorter) => {\r\n    let { page_number, page_size } = this.state;\r\n\r\n    if (page_size !== pagination.pageSize) {\r\n      // page size changed, then reset page number to 1\r\n      page_number = 1;\r\n    } else {\r\n      page_number = pagination.current;\r\n    }\r\n\r\n    page_size = pagination.pageSize;\r\n\r\n    this.setState(\r\n      {\r\n        page_number,\r\n        page_size\r\n      },\r\n      this._loadAsyncData\r\n    );\r\n  };\r\n\r\n  saveFormRef = (formRef) => {\r\n    this.formRef = formRef;\r\n  }\r\n\r\n  // 切换tab\r\n  onTabChange = (k) => {\r\n    // key值为'1'或者'2'\r\n    const currIndex = k -1\r\n    const tabParams = this.props.tabParams\r\n    if (tabParams.length) {\r\n      let p = tabParams[currIndex]\r\n      this.setState({\r\n        tabParams: p,\r\n        selectedRowKeys: [],\r\n        selectedRows: [],\r\n        page_number: 1,\r\n        search_form: [],\r\n        formKey: Date.now(),\r\n      }, this._loadAsyncData)\r\n    }\r\n  }\r\n\r\n  // 第一个tab的操作按钮事件\r\n  operateOne = () => {\r\n    if (!this.state.selectedRowKeys.length) {\r\n      message.warning(this.props.intl.formatMessage(messages.selectedRowRequired))\r\n      return\r\n    }\r\n    const callback = (function() {\r\n      this.setState({\r\n        selectedRowKeys: [],\r\n        selectedRows: [],\r\n      }, this._loadAsyncData)\r\n    }).bind(this)\r\n    this.props.operateActions[0](this.state.selectedRowKeys, callback)\r\n  }\r\n\r\n  // 第二个tab的操作按钮事件\r\n  operateTwo = () => {\r\n    if (!this.state.selectedRowKeys.length) {\r\n      message.warning(this.props.intl.formatMessage(messages.selectedRowRequired))\r\n      return\r\n    }\r\n    const callback = (function() {\r\n      this.setState({\r\n        selectedRowKeys: [],\r\n        selectedRows: [],\r\n      }, this._loadAsyncData)\r\n    }).bind(this)\r\n    this.props.operateActions[1](this.state.selectedRowKeys, callback)\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      visible,\r\n      onCancel,\r\n      title,\r\n      columns,\r\n      rowKey,\r\n      confirmLoading,\r\n      formComponent: FormComponent,\r\n      totalLabel,\r\n      tabTitles = ['Tab1','Tab2'],\r\n      operateLabels = [],\r\n    } = this.props;\r\n\r\n    const hasSearch = !!FormComponent\r\n    const {\r\n      loading,\r\n      selectedRowKeys,\r\n      total,\r\n      list,\r\n      page_number,\r\n      page_size,\r\n      formKey,\r\n    } = this.state;\r\n\r\n    const pagination = {\r\n      current: page_number,\r\n      pageSize: page_size,\r\n      total,\r\n      showQuickJumper: true,\r\n    };\r\n\r\n    const rowSelection = {\r\n      onChange: this.handleRowSelectChange,\r\n      selectedRowKeys: selectedRowKeys,\r\n      getCheckboxProps: record => ({\r\n        disabled: record.disabled,\r\n      }),\r\n    };\r\n    \r\n    return (\r\n      <Modal\r\n        visible={visible}\r\n        title={title}\r\n        onCancel={onCancel}\r\n        confirmLoading={confirmLoading}\r\n        width={920}\r\n        destroyOnClose={true}\r\n        footer={null}\r\n      >\r\n        <Tabs defaultActiveKey=\"1\" onChange={this.onTabChange} animated={false}>\r\n          <TabPane tab={tabTitles[0]} key=\"1\">\r\n            {hasSearch && <div style={{height: '60px'}}>\r\n              <FormComponent handleSearch={this.onSearch} wrappedComponentRef={this.saveFormRef} key={formKey}/>\r\n            </div>}\r\n\r\n            <ListHeader\r\n              title={`${totalLabel}${this.state.total}`}\r\n              buttonText={operateLabels[0]}\r\n              buttonType=\"default\"\r\n              doAction={this.operateOne}\r\n            />\r\n\r\n          </TabPane>\r\n          <TabPane tab={tabTitles[1]} key=\"2\">\r\n          {hasSearch && <div style={{height: '60px'}}>\r\n              <FormComponent handleSearch={this.onSearch} wrappedComponentRef={this.saveFormRef} key={formKey}/>\r\n            </div>}\r\n            <ListHeader\r\n              title=\"\"\r\n              buttonText={operateLabels[1]}\r\n              buttonType=\"default\"\r\n              doAction={this.operateTwo}\r\n            />\r\n\r\n          </TabPane>\r\n        </Tabs>\r\n        <Table\r\n                rowKey={rowKey}\r\n                loading={loading}\r\n                columns={columns}\r\n                dataSource={list}\r\n                onChange={this.handleStandardTableChange}\r\n                rowSelection={rowSelection}\r\n                pagination={pagination}\r\n                scroll={{ y: hasSearch ? 340 : 400 }}\r\n              />\r\n\r\n\r\n\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(TabTableModal);\r\n","import fetch from '../utils/fetch'\r\n\r\nconst apis = {\r\n  binding: '/api/binding',\r\n  equipment: '/api/binding/equipments',\r\n  people: '/api/binding/peoples',\r\n  unbinding: '/api/binding/untying',\r\n}\r\n\r\nexport function binding(data) {\r\n  return fetch.post(apis.binding, data)\r\n}\r\n\r\nexport function getBoundEquipmentList(data) {\r\n  return fetch.get(apis.equipment, {\r\n    params: data\r\n  })\r\n}\r\n\r\nexport function getBoundPeopleList(data) {\r\n  return fetch.get(apis.people, {\r\n    params: data\r\n  })\r\n}\r\n\r\nexport function unbinding(data) {\r\n  return fetch.post(apis.unbinding, data)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formItem\":\"UFormRow_formItem__1weu_\",\"right\":\"UFormRow_right__2MWFF\",\"left\":\"UFormRow_left__lE1I2\",\"top\":\"UFormRow_top__39LUh\"};","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = function () {\n  return this || typeof self === \"object\" && self;\n}() || Function(\"return this\")(); // Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\n\n\nvar hadRuntime = g.regeneratorRuntime && Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0; // Save the old regeneratorRuntime in case it needs to be restored later.\n\nvar oldRuntime = hadRuntime && g.regeneratorRuntime; // Force reevalutation of runtime.js.\n\ng.regeneratorRuntime = undefined;\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch (e) {\n    g.regeneratorRuntime = undefined;\n  }\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Avatar_img__2Lq9L\",\"imgWrapper\":\"Avatar_imgWrapper__kWP2G\",\"btnDel\":\"Avatar_btnDel__1-USr\"};","(function () {\n  var debug = false;\n  var root = this;\n\n  var EXIF = function EXIF(obj) {\n    if (obj instanceof EXIF) return obj;\n    if (!(this instanceof EXIF)) return new EXIF(obj);\n    this.EXIFwrapped = obj;\n  };\n\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = EXIF;\n    }\n\n    exports.EXIF = EXIF;\n  } else {\n    root.EXIF = EXIF;\n  }\n\n  var ExifTags = EXIF.Tags = {\n    // version tags\n    0x9000: \"ExifVersion\",\n    // EXIF version\n    0xA000: \"FlashpixVersion\",\n    // Flashpix format version\n    // colorspace tags\n    0xA001: \"ColorSpace\",\n    // Color space information tag\n    // image configuration\n    0xA002: \"PixelXDimension\",\n    // Valid width of meaningful image\n    0xA003: \"PixelYDimension\",\n    // Valid height of meaningful image\n    0x9101: \"ComponentsConfiguration\",\n    // Information about channels\n    0x9102: \"CompressedBitsPerPixel\",\n    // Compressed bits per pixel\n    // user information\n    0x927C: \"MakerNote\",\n    // Any desired information written by the manufacturer\n    0x9286: \"UserComment\",\n    // Comments by user\n    // related file\n    0xA004: \"RelatedSoundFile\",\n    // Name of related sound file\n    // date and time\n    0x9003: \"DateTimeOriginal\",\n    // Date and time when the original image was generated\n    0x9004: \"DateTimeDigitized\",\n    // Date and time when the image was stored digitally\n    0x9290: \"SubsecTime\",\n    // Fractions of seconds for DateTime\n    0x9291: \"SubsecTimeOriginal\",\n    // Fractions of seconds for DateTimeOriginal\n    0x9292: \"SubsecTimeDigitized\",\n    // Fractions of seconds for DateTimeDigitized\n    // picture-taking conditions\n    0x829A: \"ExposureTime\",\n    // Exposure time (in seconds)\n    0x829D: \"FNumber\",\n    // F number\n    0x8822: \"ExposureProgram\",\n    // Exposure program\n    0x8824: \"SpectralSensitivity\",\n    // Spectral sensitivity\n    0x8827: \"ISOSpeedRatings\",\n    // ISO speed rating\n    0x8828: \"OECF\",\n    // Optoelectric conversion factor\n    0x9201: \"ShutterSpeedValue\",\n    // Shutter speed\n    0x9202: \"ApertureValue\",\n    // Lens aperture\n    0x9203: \"BrightnessValue\",\n    // Value of brightness\n    0x9204: \"ExposureBias\",\n    // Exposure bias\n    0x9205: \"MaxApertureValue\",\n    // Smallest F number of lens\n    0x9206: \"SubjectDistance\",\n    // Distance to subject in meters\n    0x9207: \"MeteringMode\",\n    // Metering mode\n    0x9208: \"LightSource\",\n    // Kind of light source\n    0x9209: \"Flash\",\n    // Flash status\n    0x9214: \"SubjectArea\",\n    // Location and area of main subject\n    0x920A: \"FocalLength\",\n    // Focal length of the lens in mm\n    0xA20B: \"FlashEnergy\",\n    // Strobe energy in BCPS\n    0xA20C: \"SpatialFrequencyResponse\",\n    //\n    0xA20E: \"FocalPlaneXResolution\",\n    // Number of pixels in width direction per FocalPlaneResolutionUnit\n    0xA20F: \"FocalPlaneYResolution\",\n    // Number of pixels in height direction per FocalPlaneResolutionUnit\n    0xA210: \"FocalPlaneResolutionUnit\",\n    // Unit for measuring FocalPlaneXResolution and FocalPlaneYResolution\n    0xA214: \"SubjectLocation\",\n    // Location of subject in image\n    0xA215: \"ExposureIndex\",\n    // Exposure index selected on camera\n    0xA217: \"SensingMethod\",\n    // Image sensor type\n    0xA300: \"FileSource\",\n    // Image source (3 == DSC)\n    0xA301: \"SceneType\",\n    // Scene type (1 == directly photographed)\n    0xA302: \"CFAPattern\",\n    // Color filter array geometric pattern\n    0xA401: \"CustomRendered\",\n    // Special processing\n    0xA402: \"ExposureMode\",\n    // Exposure mode\n    0xA403: \"WhiteBalance\",\n    // 1 = auto white balance, 2 = manual\n    0xA404: \"DigitalZoomRation\",\n    // Digital zoom ratio\n    0xA405: \"FocalLengthIn35mmFilm\",\n    // Equivalent foacl length assuming 35mm film camera (in mm)\n    0xA406: \"SceneCaptureType\",\n    // Type of scene\n    0xA407: \"GainControl\",\n    // Degree of overall image gain adjustment\n    0xA408: \"Contrast\",\n    // Direction of contrast processing applied by camera\n    0xA409: \"Saturation\",\n    // Direction of saturation processing applied by camera\n    0xA40A: \"Sharpness\",\n    // Direction of sharpness processing applied by camera\n    0xA40B: \"DeviceSettingDescription\",\n    //\n    0xA40C: \"SubjectDistanceRange\",\n    // Distance to subject\n    // other tags\n    0xA005: \"InteroperabilityIFDPointer\",\n    0xA420: \"ImageUniqueID\" // Identifier assigned uniquely to each image\n\n  };\n  var TiffTags = EXIF.TiffTags = {\n    0x0100: \"ImageWidth\",\n    0x0101: \"ImageHeight\",\n    0x8769: \"ExifIFDPointer\",\n    0x8825: \"GPSInfoIFDPointer\",\n    0xA005: \"InteroperabilityIFDPointer\",\n    0x0102: \"BitsPerSample\",\n    0x0103: \"Compression\",\n    0x0106: \"PhotometricInterpretation\",\n    0x0112: \"Orientation\",\n    0x0115: \"SamplesPerPixel\",\n    0x011C: \"PlanarConfiguration\",\n    0x0212: \"YCbCrSubSampling\",\n    0x0213: \"YCbCrPositioning\",\n    0x011A: \"XResolution\",\n    0x011B: \"YResolution\",\n    0x0128: \"ResolutionUnit\",\n    0x0111: \"StripOffsets\",\n    0x0116: \"RowsPerStrip\",\n    0x0117: \"StripByteCounts\",\n    0x0201: \"JPEGInterchangeFormat\",\n    0x0202: \"JPEGInterchangeFormatLength\",\n    0x012D: \"TransferFunction\",\n    0x013E: \"WhitePoint\",\n    0x013F: \"PrimaryChromaticities\",\n    0x0211: \"YCbCrCoefficients\",\n    0x0214: \"ReferenceBlackWhite\",\n    0x0132: \"DateTime\",\n    0x010E: \"ImageDescription\",\n    0x010F: \"Make\",\n    0x0110: \"Model\",\n    0x0131: \"Software\",\n    0x013B: \"Artist\",\n    0x8298: \"Copyright\"\n  };\n  var GPSTags = EXIF.GPSTags = {\n    0x0000: \"GPSVersionID\",\n    0x0001: \"GPSLatitudeRef\",\n    0x0002: \"GPSLatitude\",\n    0x0003: \"GPSLongitudeRef\",\n    0x0004: \"GPSLongitude\",\n    0x0005: \"GPSAltitudeRef\",\n    0x0006: \"GPSAltitude\",\n    0x0007: \"GPSTimeStamp\",\n    0x0008: \"GPSSatellites\",\n    0x0009: \"GPSStatus\",\n    0x000A: \"GPSMeasureMode\",\n    0x000B: \"GPSDOP\",\n    0x000C: \"GPSSpeedRef\",\n    0x000D: \"GPSSpeed\",\n    0x000E: \"GPSTrackRef\",\n    0x000F: \"GPSTrack\",\n    0x0010: \"GPSImgDirectionRef\",\n    0x0011: \"GPSImgDirection\",\n    0x0012: \"GPSMapDatum\",\n    0x0013: \"GPSDestLatitudeRef\",\n    0x0014: \"GPSDestLatitude\",\n    0x0015: \"GPSDestLongitudeRef\",\n    0x0016: \"GPSDestLongitude\",\n    0x0017: \"GPSDestBearingRef\",\n    0x0018: \"GPSDestBearing\",\n    0x0019: \"GPSDestDistanceRef\",\n    0x001A: \"GPSDestDistance\",\n    0x001B: \"GPSProcessingMethod\",\n    0x001C: \"GPSAreaInformation\",\n    0x001D: \"GPSDateStamp\",\n    0x001E: \"GPSDifferential\"\n  }; // EXIF 2.3 Spec\n\n  var IFD1Tags = EXIF.IFD1Tags = {\n    0x0100: \"ImageWidth\",\n    0x0101: \"ImageHeight\",\n    0x0102: \"BitsPerSample\",\n    0x0103: \"Compression\",\n    0x0106: \"PhotometricInterpretation\",\n    0x0111: \"StripOffsets\",\n    0x0112: \"Orientation\",\n    0x0115: \"SamplesPerPixel\",\n    0x0116: \"RowsPerStrip\",\n    0x0117: \"StripByteCounts\",\n    0x011A: \"XResolution\",\n    0x011B: \"YResolution\",\n    0x011C: \"PlanarConfiguration\",\n    0x0128: \"ResolutionUnit\",\n    0x0201: \"JpegIFOffset\",\n    // When image format is JPEG, this value show offset to JPEG data stored.(aka \"ThumbnailOffset\" or \"JPEGInterchangeFormat\")\n    0x0202: \"JpegIFByteCount\",\n    // When image format is JPEG, this value shows data size of JPEG image (aka \"ThumbnailLength\" or \"JPEGInterchangeFormatLength\")\n    0x0211: \"YCbCrCoefficients\",\n    0x0212: \"YCbCrSubSampling\",\n    0x0213: \"YCbCrPositioning\",\n    0x0214: \"ReferenceBlackWhite\"\n  };\n  var StringValues = EXIF.StringValues = {\n    ExposureProgram: {\n      0: \"Not defined\",\n      1: \"Manual\",\n      2: \"Normal program\",\n      3: \"Aperture priority\",\n      4: \"Shutter priority\",\n      5: \"Creative program\",\n      6: \"Action program\",\n      7: \"Portrait mode\",\n      8: \"Landscape mode\"\n    },\n    MeteringMode: {\n      0: \"Unknown\",\n      1: \"Average\",\n      2: \"CenterWeightedAverage\",\n      3: \"Spot\",\n      4: \"MultiSpot\",\n      5: \"Pattern\",\n      6: \"Partial\",\n      255: \"Other\"\n    },\n    LightSource: {\n      0: \"Unknown\",\n      1: \"Daylight\",\n      2: \"Fluorescent\",\n      3: \"Tungsten (incandescent light)\",\n      4: \"Flash\",\n      9: \"Fine weather\",\n      10: \"Cloudy weather\",\n      11: \"Shade\",\n      12: \"Daylight fluorescent (D 5700 - 7100K)\",\n      13: \"Day white fluorescent (N 4600 - 5400K)\",\n      14: \"Cool white fluorescent (W 3900 - 4500K)\",\n      15: \"White fluorescent (WW 3200 - 3700K)\",\n      17: \"Standard light A\",\n      18: \"Standard light B\",\n      19: \"Standard light C\",\n      20: \"D55\",\n      21: \"D65\",\n      22: \"D75\",\n      23: \"D50\",\n      24: \"ISO studio tungsten\",\n      255: \"Other\"\n    },\n    Flash: {\n      0x0000: \"Flash did not fire\",\n      0x0001: \"Flash fired\",\n      0x0005: \"Strobe return light not detected\",\n      0x0007: \"Strobe return light detected\",\n      0x0009: \"Flash fired, compulsory flash mode\",\n      0x000D: \"Flash fired, compulsory flash mode, return light not detected\",\n      0x000F: \"Flash fired, compulsory flash mode, return light detected\",\n      0x0010: \"Flash did not fire, compulsory flash mode\",\n      0x0018: \"Flash did not fire, auto mode\",\n      0x0019: \"Flash fired, auto mode\",\n      0x001D: \"Flash fired, auto mode, return light not detected\",\n      0x001F: \"Flash fired, auto mode, return light detected\",\n      0x0020: \"No flash function\",\n      0x0041: \"Flash fired, red-eye reduction mode\",\n      0x0045: \"Flash fired, red-eye reduction mode, return light not detected\",\n      0x0047: \"Flash fired, red-eye reduction mode, return light detected\",\n      0x0049: \"Flash fired, compulsory flash mode, red-eye reduction mode\",\n      0x004D: \"Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected\",\n      0x004F: \"Flash fired, compulsory flash mode, red-eye reduction mode, return light detected\",\n      0x0059: \"Flash fired, auto mode, red-eye reduction mode\",\n      0x005D: \"Flash fired, auto mode, return light not detected, red-eye reduction mode\",\n      0x005F: \"Flash fired, auto mode, return light detected, red-eye reduction mode\"\n    },\n    SensingMethod: {\n      1: \"Not defined\",\n      2: \"One-chip color area sensor\",\n      3: \"Two-chip color area sensor\",\n      4: \"Three-chip color area sensor\",\n      5: \"Color sequential area sensor\",\n      7: \"Trilinear sensor\",\n      8: \"Color sequential linear sensor\"\n    },\n    SceneCaptureType: {\n      0: \"Standard\",\n      1: \"Landscape\",\n      2: \"Portrait\",\n      3: \"Night scene\"\n    },\n    SceneType: {\n      1: \"Directly photographed\"\n    },\n    CustomRendered: {\n      0: \"Normal process\",\n      1: \"Custom process\"\n    },\n    WhiteBalance: {\n      0: \"Auto white balance\",\n      1: \"Manual white balance\"\n    },\n    GainControl: {\n      0: \"None\",\n      1: \"Low gain up\",\n      2: \"High gain up\",\n      3: \"Low gain down\",\n      4: \"High gain down\"\n    },\n    Contrast: {\n      0: \"Normal\",\n      1: \"Soft\",\n      2: \"Hard\"\n    },\n    Saturation: {\n      0: \"Normal\",\n      1: \"Low saturation\",\n      2: \"High saturation\"\n    },\n    Sharpness: {\n      0: \"Normal\",\n      1: \"Soft\",\n      2: \"Hard\"\n    },\n    SubjectDistanceRange: {\n      0: \"Unknown\",\n      1: \"Macro\",\n      2: \"Close view\",\n      3: \"Distant view\"\n    },\n    FileSource: {\n      3: \"DSC\"\n    },\n    Components: {\n      0: \"\",\n      1: \"Y\",\n      2: \"Cb\",\n      3: \"Cr\",\n      4: \"R\",\n      5: \"G\",\n      6: \"B\"\n    }\n  };\n\n  function addEvent(element, event, handler) {\n    if (element.addEventListener) {\n      element.addEventListener(event, handler, false);\n    } else if (element.attachEvent) {\n      element.attachEvent(\"on\" + event, handler);\n    }\n  }\n\n  function imageHasData(img) {\n    return !!img.exifdata;\n  }\n\n  function base64ToArrayBuffer(base64, contentType) {\n    contentType = contentType || base64.match(/^data\\:([^\\;]+)\\;base64,/mi)[1] || ''; // e.g. 'data:image/jpeg;base64,...' => 'image/jpeg'\n\n    base64 = base64.replace(/^data\\:([^\\;]+)\\;base64,/gmi, '');\n    var binary = atob(base64);\n    var len = binary.length;\n    var buffer = new ArrayBuffer(len);\n    var view = new Uint8Array(buffer);\n\n    for (var i = 0; i < len; i++) {\n      view[i] = binary.charCodeAt(i);\n    }\n\n    return buffer;\n  }\n\n  function objectURLToBlob(url, callback) {\n    var http = new XMLHttpRequest();\n    http.open(\"GET\", url, true);\n    http.responseType = \"blob\";\n\n    http.onload = function (e) {\n      if (this.status == 200 || this.status === 0) {\n        callback(this.response);\n      }\n    };\n\n    http.send();\n  }\n\n  function getImageData(img, callback) {\n    function handleBinaryFile(binFile) {\n      var data = findEXIFinJPEG(binFile);\n      img.exifdata = data || {};\n      var iptcdata = findIPTCinJPEG(binFile);\n      img.iptcdata = iptcdata || {};\n\n      if (EXIF.isXmpEnabled) {\n        var xmpdata = findXMPinJPEG(binFile);\n        img.xmpdata = xmpdata || {};\n      }\n\n      if (callback) {\n        callback.call(img);\n      }\n    }\n\n    if (img.src) {\n      if (/^data\\:/i.test(img.src)) {\n        // Data URI\n        var arrayBuffer = base64ToArrayBuffer(img.src);\n        handleBinaryFile(arrayBuffer);\n      } else if (/^blob\\:/i.test(img.src)) {\n        // Object URL\n        var fileReader = new FileReader();\n\n        fileReader.onload = function (e) {\n          handleBinaryFile(e.target.result);\n        };\n\n        objectURLToBlob(img.src, function (blob) {\n          fileReader.readAsArrayBuffer(blob);\n        });\n      } else {\n        var http = new XMLHttpRequest();\n\n        http.onload = function () {\n          if (this.status == 200 || this.status === 0) {\n            handleBinaryFile(http.response);\n          } else {\n            throw \"Could not load image\";\n          }\n\n          http = null;\n        };\n\n        http.open(\"GET\", img.src, true);\n        http.responseType = \"arraybuffer\";\n        http.send(null);\n      }\n    } else if (self.FileReader && (img instanceof self.Blob || img instanceof self.File)) {\n      var fileReader = new FileReader();\n\n      fileReader.onload = function (e) {\n        if (debug) console.log(\"Got file of length \" + e.target.result.byteLength);\n        handleBinaryFile(e.target.result);\n      };\n\n      fileReader.readAsArrayBuffer(img);\n    }\n  }\n\n  function findEXIFinJPEG(file) {\n    var dataView = new DataView(file);\n    if (debug) console.log(\"Got file of length \" + file.byteLength);\n\n    if (dataView.getUint8(0) != 0xFF || dataView.getUint8(1) != 0xD8) {\n      if (debug) console.log(\"Not a valid JPEG\");\n      return false; // not a valid jpeg\n    }\n\n    var offset = 2,\n        length = file.byteLength,\n        marker;\n\n    while (offset < length) {\n      if (dataView.getUint8(offset) != 0xFF) {\n        if (debug) console.log(\"Not a valid marker at offset \" + offset + \", found: \" + dataView.getUint8(offset));\n        return false; // not a valid marker, something is wrong\n      }\n\n      marker = dataView.getUint8(offset + 1);\n      if (debug) console.log(marker); // we could implement handling for other markers here,\n      // but we're only looking for 0xFFE1 for EXIF data\n\n      if (marker == 225) {\n        if (debug) console.log(\"Found 0xFFE1 marker\");\n        return readEXIFData(dataView, offset + 4, dataView.getUint16(offset + 2) - 2); // offset += 2 + file.getShortAt(offset+2, true);\n      } else {\n        offset += 2 + dataView.getUint16(offset + 2);\n      }\n    }\n  }\n\n  function findIPTCinJPEG(file) {\n    var dataView = new DataView(file);\n    if (debug) console.log(\"Got file of length \" + file.byteLength);\n\n    if (dataView.getUint8(0) != 0xFF || dataView.getUint8(1) != 0xD8) {\n      if (debug) console.log(\"Not a valid JPEG\");\n      return false; // not a valid jpeg\n    }\n\n    var offset = 2,\n        length = file.byteLength;\n\n    var isFieldSegmentStart = function isFieldSegmentStart(dataView, offset) {\n      return dataView.getUint8(offset) === 0x38 && dataView.getUint8(offset + 1) === 0x42 && dataView.getUint8(offset + 2) === 0x49 && dataView.getUint8(offset + 3) === 0x4D && dataView.getUint8(offset + 4) === 0x04 && dataView.getUint8(offset + 5) === 0x04;\n    };\n\n    while (offset < length) {\n      if (isFieldSegmentStart(dataView, offset)) {\n        // Get the length of the name header (which is padded to an even number of bytes)\n        var nameHeaderLength = dataView.getUint8(offset + 7);\n        if (nameHeaderLength % 2 !== 0) nameHeaderLength += 1; // Check for pre photoshop 6 format\n\n        if (nameHeaderLength === 0) {\n          // Always 4\n          nameHeaderLength = 4;\n        }\n\n        var startOffset = offset + 8 + nameHeaderLength;\n        var sectionLength = dataView.getUint16(offset + 6 + nameHeaderLength);\n        return readIPTCData(file, startOffset, sectionLength);\n        break;\n      } // Not the marker, continue searching\n\n\n      offset++;\n    }\n  }\n\n  var IptcFieldMap = {\n    0x78: 'caption',\n    0x6E: 'credit',\n    0x19: 'keywords',\n    0x37: 'dateCreated',\n    0x50: 'byline',\n    0x55: 'bylineTitle',\n    0x7A: 'captionWriter',\n    0x69: 'headline',\n    0x74: 'copyright',\n    0x0F: 'category'\n  };\n\n  function readIPTCData(file, startOffset, sectionLength) {\n    var dataView = new DataView(file);\n    var data = {};\n    var fieldValue, fieldName, dataSize, segmentType, segmentSize;\n    var segmentStartPos = startOffset;\n\n    while (segmentStartPos < startOffset + sectionLength) {\n      if (dataView.getUint8(segmentStartPos) === 0x1C && dataView.getUint8(segmentStartPos + 1) === 0x02) {\n        segmentType = dataView.getUint8(segmentStartPos + 2);\n\n        if (segmentType in IptcFieldMap) {\n          dataSize = dataView.getInt16(segmentStartPos + 3);\n          segmentSize = dataSize + 5;\n          fieldName = IptcFieldMap[segmentType];\n          fieldValue = getStringFromDB(dataView, segmentStartPos + 5, dataSize); // Check if we already stored a value with this name\n\n          if (data.hasOwnProperty(fieldName)) {\n            // Value already stored with this name, create multivalue field\n            if (data[fieldName] instanceof Array) {\n              data[fieldName].push(fieldValue);\n            } else {\n              data[fieldName] = [data[fieldName], fieldValue];\n            }\n          } else {\n            data[fieldName] = fieldValue;\n          }\n        }\n      }\n\n      segmentStartPos++;\n    }\n\n    return data;\n  }\n\n  function readTags(file, tiffStart, dirStart, strings, bigEnd) {\n    var entries = file.getUint16(dirStart, !bigEnd),\n        tags = {},\n        entryOffset,\n        tag,\n        i;\n\n    for (i = 0; i < entries; i++) {\n      entryOffset = dirStart + i * 12 + 2;\n      tag = strings[file.getUint16(entryOffset, !bigEnd)];\n      if (!tag && debug) console.log(\"Unknown tag: \" + file.getUint16(entryOffset, !bigEnd));\n      tags[tag] = readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd);\n    }\n\n    return tags;\n  }\n\n  function readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd) {\n    var type = file.getUint16(entryOffset + 2, !bigEnd),\n        numValues = file.getUint32(entryOffset + 4, !bigEnd),\n        valueOffset = file.getUint32(entryOffset + 8, !bigEnd) + tiffStart,\n        offset,\n        vals,\n        val,\n        n,\n        numerator,\n        denominator;\n\n    switch (type) {\n      case 1: // byte, 8-bit unsigned int\n\n      case 7:\n        // undefined, 8-bit byte, value depending on field\n        if (numValues == 1) {\n          return file.getUint8(entryOffset + 8, !bigEnd);\n        } else {\n          offset = numValues > 4 ? valueOffset : entryOffset + 8;\n          vals = [];\n\n          for (n = 0; n < numValues; n++) {\n            vals[n] = file.getUint8(offset + n);\n          }\n\n          return vals;\n        }\n\n      case 2:\n        // ascii, 8-bit byte\n        offset = numValues > 4 ? valueOffset : entryOffset + 8;\n        return getStringFromDB(file, offset, numValues - 1);\n\n      case 3:\n        // short, 16 bit int\n        if (numValues == 1) {\n          return file.getUint16(entryOffset + 8, !bigEnd);\n        } else {\n          offset = numValues > 2 ? valueOffset : entryOffset + 8;\n          vals = [];\n\n          for (n = 0; n < numValues; n++) {\n            vals[n] = file.getUint16(offset + 2 * n, !bigEnd);\n          }\n\n          return vals;\n        }\n\n      case 4:\n        // long, 32 bit int\n        if (numValues == 1) {\n          return file.getUint32(entryOffset + 8, !bigEnd);\n        } else {\n          vals = [];\n\n          for (n = 0; n < numValues; n++) {\n            vals[n] = file.getUint32(valueOffset + 4 * n, !bigEnd);\n          }\n\n          return vals;\n        }\n\n      case 5:\n        // rational = two long values, first is numerator, second is denominator\n        if (numValues == 1) {\n          numerator = file.getUint32(valueOffset, !bigEnd);\n          denominator = file.getUint32(valueOffset + 4, !bigEnd);\n          val = new Number(numerator / denominator);\n          val.numerator = numerator;\n          val.denominator = denominator;\n          return val;\n        } else {\n          vals = [];\n\n          for (n = 0; n < numValues; n++) {\n            numerator = file.getUint32(valueOffset + 8 * n, !bigEnd);\n            denominator = file.getUint32(valueOffset + 4 + 8 * n, !bigEnd);\n            vals[n] = new Number(numerator / denominator);\n            vals[n].numerator = numerator;\n            vals[n].denominator = denominator;\n          }\n\n          return vals;\n        }\n\n      case 9:\n        // slong, 32 bit signed int\n        if (numValues == 1) {\n          return file.getInt32(entryOffset + 8, !bigEnd);\n        } else {\n          vals = [];\n\n          for (n = 0; n < numValues; n++) {\n            vals[n] = file.getInt32(valueOffset + 4 * n, !bigEnd);\n          }\n\n          return vals;\n        }\n\n      case 10:\n        // signed rational, two slongs, first is numerator, second is denominator\n        if (numValues == 1) {\n          return file.getInt32(valueOffset, !bigEnd) / file.getInt32(valueOffset + 4, !bigEnd);\n        } else {\n          vals = [];\n\n          for (n = 0; n < numValues; n++) {\n            vals[n] = file.getInt32(valueOffset + 8 * n, !bigEnd) / file.getInt32(valueOffset + 4 + 8 * n, !bigEnd);\n          }\n\n          return vals;\n        }\n\n    }\n  }\n  /**\n  * Given an IFD (Image File Directory) start offset\n  * returns an offset to next IFD or 0 if it's the last IFD.\n  */\n\n\n  function getNextIFDOffset(dataView, dirStart, bigEnd) {\n    //the first 2bytes means the number of directory entries contains in this IFD\n    var entries = dataView.getUint16(dirStart, !bigEnd); // After last directory entry, there is a 4bytes of data,\n    // it means an offset to next IFD.\n    // If its value is '0x00000000', it means this is the last IFD and there is no linked IFD.\n\n    return dataView.getUint32(dirStart + 2 + entries * 12, !bigEnd); // each entry is 12 bytes long\n  }\n\n  function readThumbnailImage(dataView, tiffStart, firstIFDOffset, bigEnd) {\n    // get the IFD1 offset\n    var IFD1OffsetPointer = getNextIFDOffset(dataView, tiffStart + firstIFDOffset, bigEnd);\n\n    if (!IFD1OffsetPointer) {\n      // console.log('******** IFD1Offset is empty, image thumb not found ********');\n      return {};\n    } else if (IFD1OffsetPointer > dataView.byteLength) {\n      // this should not happen\n      // console.log('******** IFD1Offset is outside the bounds of the DataView ********');\n      return {};\n    } // console.log('*******  thumbnail IFD offset (IFD1) is: %s', IFD1OffsetPointer);\n\n\n    var thumbTags = readTags(dataView, tiffStart, tiffStart + IFD1OffsetPointer, IFD1Tags, bigEnd); // EXIF 2.3 specification for JPEG format thumbnail\n    // If the value of Compression(0x0103) Tag in IFD1 is '6', thumbnail image format is JPEG.\n    // Most of Exif image uses JPEG format for thumbnail. In that case, you can get offset of thumbnail\n    // by JpegIFOffset(0x0201) Tag in IFD1, size of thumbnail by JpegIFByteCount(0x0202) Tag.\n    // Data format is ordinary JPEG format, starts from 0xFFD8 and ends by 0xFFD9. It seems that\n    // JPEG format and 160x120pixels of size are recommended thumbnail format for Exif2.1 or later.\n\n    if (thumbTags['Compression']) {\n      // console.log('Thumbnail image found!');\n      switch (thumbTags['Compression']) {\n        case 6:\n          // console.log('Thumbnail image format is JPEG');\n          if (thumbTags.JpegIFOffset && thumbTags.JpegIFByteCount) {\n            // extract the thumbnail\n            var tOffset = tiffStart + thumbTags.JpegIFOffset;\n            var tLength = thumbTags.JpegIFByteCount;\n            thumbTags['blob'] = new Blob([new Uint8Array(dataView.buffer, tOffset, tLength)], {\n              type: 'image/jpeg'\n            });\n          }\n\n          break;\n\n        case 1:\n          console.log(\"Thumbnail image format is TIFF, which is not implemented.\");\n          break;\n\n        default:\n          console.log(\"Unknown thumbnail image format '%s'\", thumbTags['Compression']);\n      }\n    } else if (thumbTags['PhotometricInterpretation'] == 2) {\n      console.log(\"Thumbnail image format is RGB, which is not implemented.\");\n    }\n\n    return thumbTags;\n  }\n\n  function getStringFromDB(buffer, start, length) {\n    var outstr = \"\";\n\n    for (n = start; n < start + length; n++) {\n      outstr += String.fromCharCode(buffer.getUint8(n));\n    }\n\n    return outstr;\n  }\n\n  function readEXIFData(file, start) {\n    if (getStringFromDB(file, start, 4) != \"Exif\") {\n      if (debug) console.log(\"Not valid EXIF data! \" + getStringFromDB(file, start, 4));\n      return false;\n    }\n\n    var bigEnd,\n        tags,\n        tag,\n        exifData,\n        gpsData,\n        tiffOffset = start + 6; // test for TIFF validity and endianness\n\n    if (file.getUint16(tiffOffset) == 0x4949) {\n      bigEnd = false;\n    } else if (file.getUint16(tiffOffset) == 0x4D4D) {\n      bigEnd = true;\n    } else {\n      if (debug) console.log(\"Not valid TIFF data! (no 0x4949 or 0x4D4D)\");\n      return false;\n    }\n\n    if (file.getUint16(tiffOffset + 2, !bigEnd) != 0x002A) {\n      if (debug) console.log(\"Not valid TIFF data! (no 0x002A)\");\n      return false;\n    }\n\n    var firstIFDOffset = file.getUint32(tiffOffset + 4, !bigEnd);\n\n    if (firstIFDOffset < 0x00000008) {\n      if (debug) console.log(\"Not valid TIFF data! (First offset less than 8)\", file.getUint32(tiffOffset + 4, !bigEnd));\n      return false;\n    }\n\n    tags = readTags(file, tiffOffset, tiffOffset + firstIFDOffset, TiffTags, bigEnd);\n\n    if (tags.ExifIFDPointer) {\n      exifData = readTags(file, tiffOffset, tiffOffset + tags.ExifIFDPointer, ExifTags, bigEnd);\n\n      for (tag in exifData) {\n        switch (tag) {\n          case \"LightSource\":\n          case \"Flash\":\n          case \"MeteringMode\":\n          case \"ExposureProgram\":\n          case \"SensingMethod\":\n          case \"SceneCaptureType\":\n          case \"SceneType\":\n          case \"CustomRendered\":\n          case \"WhiteBalance\":\n          case \"GainControl\":\n          case \"Contrast\":\n          case \"Saturation\":\n          case \"Sharpness\":\n          case \"SubjectDistanceRange\":\n          case \"FileSource\":\n            exifData[tag] = StringValues[tag][exifData[tag]];\n            break;\n\n          case \"ExifVersion\":\n          case \"FlashpixVersion\":\n            exifData[tag] = String.fromCharCode(exifData[tag][0], exifData[tag][1], exifData[tag][2], exifData[tag][3]);\n            break;\n\n          case \"ComponentsConfiguration\":\n            exifData[tag] = StringValues.Components[exifData[tag][0]] + StringValues.Components[exifData[tag][1]] + StringValues.Components[exifData[tag][2]] + StringValues.Components[exifData[tag][3]];\n            break;\n        }\n\n        tags[tag] = exifData[tag];\n      }\n    }\n\n    if (tags.GPSInfoIFDPointer) {\n      gpsData = readTags(file, tiffOffset, tiffOffset + tags.GPSInfoIFDPointer, GPSTags, bigEnd);\n\n      for (tag in gpsData) {\n        switch (tag) {\n          case \"GPSVersionID\":\n            gpsData[tag] = gpsData[tag][0] + \".\" + gpsData[tag][1] + \".\" + gpsData[tag][2] + \".\" + gpsData[tag][3];\n            break;\n        }\n\n        tags[tag] = gpsData[tag];\n      }\n    } // extract thumbnail\n\n\n    tags['thumbnail'] = readThumbnailImage(file, tiffOffset, firstIFDOffset, bigEnd);\n    return tags;\n  }\n\n  function findXMPinJPEG(file) {\n    if (!('DOMParser' in self)) {\n      // console.warn('XML parsing not supported without DOMParser');\n      return;\n    }\n\n    var dataView = new DataView(file);\n    if (debug) console.log(\"Got file of length \" + file.byteLength);\n\n    if (dataView.getUint8(0) != 0xFF || dataView.getUint8(1) != 0xD8) {\n      if (debug) console.log(\"Not a valid JPEG\");\n      return false; // not a valid jpeg\n    }\n\n    var offset = 2,\n        length = file.byteLength,\n        dom = new DOMParser();\n\n    while (offset < length - 4) {\n      if (getStringFromDB(dataView, offset, 4) == \"http\") {\n        var startOffset = offset - 1;\n        var sectionLength = dataView.getUint16(offset - 2) - 1;\n        var xmpString = getStringFromDB(dataView, startOffset, sectionLength);\n        var xmpEndIndex = xmpString.indexOf('xmpmeta>') + 8;\n        xmpString = xmpString.substring(xmpString.indexOf('<x:xmpmeta'), xmpEndIndex);\n        var indexOfXmp = xmpString.indexOf('x:xmpmeta') + 10; //Many custom written programs embed xmp/xml without any namespace. Following are some of them.\n        //Without these namespaces, XML is thought to be invalid by parsers\n\n        xmpString = xmpString.slice(0, indexOfXmp) + 'xmlns:Iptc4xmpCore=\"http://iptc.org/std/Iptc4xmpCore/1.0/xmlns/\" ' + 'xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" ' + 'xmlns:tiff=\"http://ns.adobe.com/tiff/1.0/\" ' + 'xmlns:plus=\"http://schemas.android.com/apk/lib/com.google.android.gms.plus\" ' + 'xmlns:ext=\"http://www.gettyimages.com/xsltExtension/1.0\" ' + 'xmlns:exif=\"http://ns.adobe.com/exif/1.0/\" ' + 'xmlns:stEvt=\"http://ns.adobe.com/xap/1.0/sType/ResourceEvent#\" ' + 'xmlns:stRef=\"http://ns.adobe.com/xap/1.0/sType/ResourceRef#\" ' + 'xmlns:crs=\"http://ns.adobe.com/camera-raw-settings/1.0/\" ' + 'xmlns:xapGImg=\"http://ns.adobe.com/xap/1.0/g/img/\" ' + 'xmlns:Iptc4xmpExt=\"http://iptc.org/std/Iptc4xmpExt/2008-02-29/\" ' + xmpString.slice(indexOfXmp);\n        var domDocument = dom.parseFromString(xmpString, 'text/xml');\n        return xml2Object(domDocument);\n      } else {\n        offset++;\n      }\n    }\n  }\n\n  function xml2json(xml) {\n    var json = {};\n\n    if (xml.nodeType == 1) {\n      // element node\n      if (xml.attributes.length > 0) {\n        json['@attributes'] = {};\n\n        for (var j = 0; j < xml.attributes.length; j++) {\n          var attribute = xml.attributes.item(j);\n          json['@attributes'][attribute.nodeName] = attribute.nodeValue;\n        }\n      }\n    } else if (xml.nodeType == 3) {\n      // text node\n      return xml.nodeValue;\n    } // deal with children\n\n\n    if (xml.hasChildNodes()) {\n      for (var i = 0; i < xml.childNodes.length; i++) {\n        var child = xml.childNodes.item(i);\n        var nodeName = child.nodeName;\n\n        if (json[nodeName] == null) {\n          json[nodeName] = xml2json(child);\n        } else {\n          if (json[nodeName].push == null) {\n            var old = json[nodeName];\n            json[nodeName] = [];\n            json[nodeName].push(old);\n          }\n\n          json[nodeName].push(xml2json(child));\n        }\n      }\n    }\n\n    return json;\n  }\n\n  function xml2Object(xml) {\n    try {\n      var obj = {};\n\n      if (xml.children.length > 0) {\n        for (var i = 0; i < xml.children.length; i++) {\n          var item = xml.children.item(i);\n          var attributes = item.attributes;\n\n          for (var idx in attributes) {\n            var itemAtt = attributes[idx];\n            var dataKey = itemAtt.nodeName;\n            var dataValue = itemAtt.nodeValue;\n\n            if (dataKey !== undefined) {\n              obj[dataKey] = dataValue;\n            }\n          }\n\n          var nodeName = item.nodeName;\n\n          if (typeof obj[nodeName] == \"undefined\") {\n            obj[nodeName] = xml2json(item);\n          } else {\n            if (typeof obj[nodeName].push == \"undefined\") {\n              var old = obj[nodeName];\n              obj[nodeName] = [];\n              obj[nodeName].push(old);\n            }\n\n            obj[nodeName].push(xml2json(item));\n          }\n        }\n      } else {\n        obj = xml.textContent;\n      }\n\n      return obj;\n    } catch (e) {\n      console.log(e.message);\n    }\n  }\n\n  EXIF.enableXmp = function () {\n    EXIF.isXmpEnabled = true;\n  };\n\n  EXIF.disableXmp = function () {\n    EXIF.isXmpEnabled = false;\n  };\n\n  EXIF.getData = function (img, callback) {\n    if ((self.Image && img instanceof self.Image || self.HTMLImageElement && img instanceof self.HTMLImageElement) && !img.complete) return false;\n\n    if (!imageHasData(img)) {\n      getImageData(img, callback);\n    } else {\n      if (callback) {\n        callback.call(img);\n      }\n    }\n\n    return true;\n  };\n\n  EXIF.getTag = function (img, tag) {\n    if (!imageHasData(img)) return;\n    return img.exifdata[tag];\n  };\n\n  EXIF.getIptcTag = function (img, tag) {\n    if (!imageHasData(img)) return;\n    return img.iptcdata[tag];\n  };\n\n  EXIF.getAllTags = function (img) {\n    if (!imageHasData(img)) return {};\n    var a,\n        data = img.exifdata,\n        tags = {};\n\n    for (a in data) {\n      if (data.hasOwnProperty(a)) {\n        tags[a] = data[a];\n      }\n    }\n\n    return tags;\n  };\n\n  EXIF.getAllIptcTags = function (img) {\n    if (!imageHasData(img)) return {};\n    var a,\n        data = img.iptcdata,\n        tags = {};\n\n    for (a in data) {\n      if (data.hasOwnProperty(a)) {\n        tags[a] = data[a];\n      }\n    }\n\n    return tags;\n  };\n\n  EXIF.pretty = function (img) {\n    if (!imageHasData(img)) return \"\";\n    var a,\n        data = img.exifdata,\n        strPretty = \"\";\n\n    for (a in data) {\n      if (data.hasOwnProperty(a)) {\n        if (typeof data[a] == \"object\") {\n          if (data[a] instanceof Number) {\n            strPretty += a + \" : \" + data[a] + \" [\" + data[a].numerator + \"/\" + data[a].denominator + \"]\\r\\n\";\n          } else {\n            strPretty += a + \" : [\" + data[a].length + \" values]\\r\\n\";\n          }\n        } else {\n          strPretty += a + \" : \" + data[a] + \"\\r\\n\";\n        }\n      }\n    }\n\n    return strPretty;\n  };\n\n  EXIF.readFromBinaryFile = function (file) {\n    return findEXIFinJPEG(file);\n  };\n\n  if (typeof define === 'function' && define.amd) {\n    define('exif-js', [], function () {\n      return EXIF;\n    });\n  }\n}).call(this);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"left\":\"BatchAddPeople_left__31Zkn\",\"input\":\"BatchAddPeople_input__8D0ax\"};","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\n\nvar groupBy = createAggregator(function (result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\nmodule.exports = groupBy;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableList\":\"PersonnelManage_tableList__TFimv\",\"tableListOperator\":\"PersonnelManage_tableListOperator__2vOEm\",\"tableListForm\":\"PersonnelManage_tableListForm__2xl0z\",\"submitButtons\":\"PersonnelManage_submitButtons__1sfwR\",\"operatorLink\":\"PersonnelManage_operatorLink__1Gnfm\",\"operatorWrap\":\"PersonnelManage_operatorWrap__Kvz1y\",\"wordBreak\":\"PersonnelManage_wordBreak__JSpk-\",\"statusWrap\":\"PersonnelManage_statusWrap__2mFqz\",\"reject\":\"PersonnelManage_reject__3KbrP\"};","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from 'react';\r\nimport { Modal, Table } from 'antd';\r\n\r\n\r\nclass ViewList extends React.Component {\r\n\r\n\r\n  render() {\r\n    const {\r\n      visible,\r\n      onCancel,\r\n      title,\r\n      columns = [],\r\n      rowKey,\r\n      dataList = []\r\n    } = this.props;\r\n\r\n\r\n\r\n    return (\r\n      <Modal\r\n        title={title}\r\n        onCancel={onCancel}\r\n        width={920}\r\n        visible={visible}\r\n        footer={null}\r\n        destroyOnClose={true}\r\n      >\r\n        <Table\r\n          rowKey={rowKey}\r\n          columns={columns}\r\n          dataSource={dataList}\r\n          onChange={this.handleStandardTableChange}\r\n          pagination={false}\r\n          scroll={{ y: 450 }}\r\n            />\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewList;\r\n","import React, {Component} from 'react';\r\nimport { Modal, Table,Badge } from 'antd';\r\n\r\nimport ViewList from '../../../components/ViewList'\r\nimport PhotoBox from '../../../components/PhotoBox'\r\nimport { injectIntl, FormattedMessage, defineMessages } from 'react-intl';\r\n\r\nimport {parseDate} from '../../../utils/utils';\r\n\r\nconst wordBreak = {wordBreak:'break-all', wordWrap:'break-word'}\r\n\r\nconst messages = defineMessages({\r\n  peopleName: {\r\n    id: 'personnel.name',\r\n    defaultMessage: '姓名',\r\n  },\r\n  photo: {\r\n    id: 'personnel.photo',\r\n    defaultMessage: '照片',\r\n  },\r\n  mobilePhone: {\r\n    id: 'personnel.mobilePhone',\r\n    defaultMessage: '手机',\r\n  },\r\n  visitReason: {\r\n    id: 'personnel.visitReason',\r\n    defaultMessage: '访问事由',\r\n  },\r\n  visitTime: {\r\n    id: 'personnel.visitTime',\r\n    defaultMessage: '访问时间',\r\n  },\r\n  inviteTime: {\r\n    id: 'personnel.inviteTime',\r\n    defaultMessage: '邀请时间',\r\n  },\r\n  status: {\r\n    id: 'common.status',\r\n    defaultMessage: '状态',\r\n  },\r\n  accepted: {\r\n    id:'common.accepted',\r\n    defaultMessage: '已接受'\r\n  },\r\n  confirmPending: {\r\n    id: 'common.confirmPending',\r\n    defaultMessage: '待确认'\r\n  },\r\n  rejected: {\r\n    id: 'common.rejected',\r\n    defaultMessage: '已拒绝'\r\n  },\r\n  visitorList: {\r\n    id: 'personnel.visitorList',\r\n    defaultMessage: '访客列表',\r\n  }\r\n})\r\n\r\nconst columns = [\r\n  {\r\n    title: <FormattedMessage {...messages.peopleName}/>,\r\n    dataIndex: 'people_name',\r\n    width: 100,\r\n    render: (text, record) =>\r\n    <React.Fragment>\r\n      <div style={wordBreak}>{text}</div>\r\n    </React.Fragment>\r\n  },\r\n  {\r\n    title: <FormattedMessage {...messages.photo} />,\r\n    dataIndex: 'image',\r\n    width: 100,\r\n    render: (text, record) =>\r\n    <React.Fragment>\r\n      {record.image && <PhotoBox photo={record.thumbnail} width={50} height={50}/>}\r\n    </React.Fragment>\r\n  },\r\n  {\r\n    title: <FormattedMessage {...messages.mobilePhone} />,\r\n    dataIndex: 'telephone',\r\n    width: 100,\r\n  },\r\n  {\r\n    title: <FormattedMessage {...messages.visitReason}/>,\r\n    dataIndex: 'reasons_for_access',\r\n    width: 100,\r\n    render: (text, record) =>\r\n    <React.Fragment>\r\n      <div style={wordBreak}>{text}</div>\r\n    </React.Fragment>\r\n  },\r\n  {\r\n    title: <FormattedMessage {...messages.visitTime}/>,\r\n    dataIndex: 'visit_time',\r\n    width: 148,\r\n    render: (text, record) =>\r\n    <React.Fragment>\r\n      {parseDate(record.start_time)} - {parseDate(record.end_time)}\r\n    </React.Fragment>\r\n  },\r\n  {\r\n    title: <FormattedMessage {...messages.inviteTime}/>,\r\n    dataIndex: 'inviter_time',\r\n    width: 100,\r\n    render: (text, record) =>\r\n    <React.Fragment>\r\n      {parseDate(text)}\r\n    </React.Fragment>\r\n  },\r\n  {\r\n    title: <FormattedMessage {...messages.status}/>,\r\n    width: 80,\r\n    dataIndex: 'inviter_status',\r\n    render: (text, record) =>\r\n    <React.Fragment>\r\n      <Badge status={['success','processing','error'][text - 1]} />\r\n      {[\r\n        <FormattedMessage {...messages.accepted}/>,\r\n        <FormattedMessage {...messages.confirmPending}/>,\r\n        <FormattedMessage {...messages.rejected}/>\r\n      ][text-1]}\r\n    </React.Fragment>\r\n  },\r\n]\r\n\r\nclass VisitorList extends Component {\r\n  state = {\r\n    title: <FormattedMessage {...messages.visitorList}/>,\r\n    rowKey: 'people_id'\r\n  }\r\n  render() {\r\n    const { visible, onCancel, dataList } = this.props\r\n    const {title, rowKey} = this.state\r\n\r\n    return (\r\n      <ViewList \r\n        visible={visible}\r\n        onCancel={onCancel}\r\n        title={title}\r\n        rowKey={rowKey}\r\n        columns={columns}\r\n        dataList={dataList}\r\n       />\r\n    )\r\n  }\r\n}\r\n\r\nexport default injectIntl(VisitorList)","import Exif from 'exif-js';\r\n\r\nconst uploadFix = {\r\n  rotateImg(img, direction, canvas) {\r\n    // 最小与最大旋转方向，图片旋转4次后回到原方向\r\n    const minStep = 0;\r\n    const maxStep = 3;\r\n    if (img == null) return;\r\n    // img的高度和宽度不能在img元素隐藏后获取，否则会出错\r\n    const height = img.height;\r\n    const width = img.width;\r\n    let step = 2;\r\n    if (step == null) {\r\n      step = minStep;\r\n    }\r\n    if (direction === 'right') {\r\n      step++;\r\n      // 旋转到原位置，即超过最大值\r\n      step > maxStep && (step = minStep);\r\n    } else if (direction === 'right2') {\r\n      step = 2;\r\n    } else {\r\n      step--;\r\n      step < minStep && (step = maxStep);\r\n    }\r\n    // 旋转角度以弧度值为参数\r\n    const degree = step * 90 * Math.PI / 180;\r\n    const ctx = canvas.getContext('2d');\r\n    switch (step) {\r\n      case 0:\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        ctx.drawImage(img, 0, 0);\r\n        break;\r\n      case 1:\r\n        canvas.width = height;\r\n        canvas.height = width;\r\n        ctx.rotate(degree);\r\n        ctx.drawImage(img, 0, -height);\r\n        break;\r\n      case 2:\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        ctx.rotate(degree);\r\n        ctx.drawImage(img, -width, -height);\r\n        break;\r\n      case 3:\r\n        canvas.width = height;\r\n        canvas.height = width;\r\n        ctx.rotate(degree);\r\n        ctx.drawImage(img, -width, 0);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  },\r\n  compress(img, orientation) {\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n    // 瓦片canvas\r\n    const tCanvas = document.createElement('canvas');\r\n    const tctx = tCanvas.getContext('2d');\r\n    let width = img.width;\r\n    let height = img.height;\r\n    // 如果图片大于四百万像素，计算压缩比并将大小压至400万以下\r\n    let ratio = width * height / 4000000;\r\n    if (ratio > 1) {\r\n      console.log('大于400万像素');\r\n      ratio = Math.sqrt(ratio);\r\n      width /= ratio;\r\n      height /= ratio;\r\n    } else {\r\n      ratio = 1;\r\n    }\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    // 铺底色\r\n    ctx.fillStyle = '#fff';\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    // 如果图片像素大于100万则使用瓦片绘制\r\n    let count = width * height / 1000000;\r\n    if (count > 1) {\r\n      console.log('超过100W像素');\r\n      // 计算要分成多少块瓦片\r\n      count = ~~(Math.sqrt(count) + 1);\r\n      // 计算每块瓦片的宽和高\r\n      const nw = ~~(width / count);\r\n      const nh = ~~(height / count);\r\n      tCanvas.width = nw;\r\n      tCanvas.height = nh;\r\n      for (let i = 0; i < count; i++) {\r\n        for (let j = 0; j < count; j++) {\r\n          tctx.drawImage(\r\n            img,\r\n            i * nw * ratio,\r\n            j * nh * ratio,\r\n            nw * ratio,\r\n            nh * ratio,\r\n            0,\r\n            0,\r\n            nw,\r\n            nh,\r\n          );\r\n          ctx.drawImage(tCanvas, i * nw, j * nh, nw, nh);\r\n        }\r\n      }\r\n    } else {\r\n      ctx.drawImage(img, 0, 0, width, height);\r\n    }\r\n    // 修复ios上传图片的时候 被旋转的问题\r\n    if (orientation !== '' && orientation !== 1) {\r\n      switch (orientation) {\r\n        // 需要顺时针（向左）90度旋转\r\n        case 6:\r\n          this.rotateImg(img, 'left', canvas);\r\n          break;\r\n        // 需要逆时针（向右）90度旋转\r\n        case 8:\r\n          this.rotateImg(img, 'right', canvas);\r\n          break;\r\n        // 需要180度旋转\r\n        case 3:\r\n          this.rotateImg(img, 'right2', canvas);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    // 进行最小压缩\r\n    const ndata = canvas.toDataURL('image/jpeg', 0.6);\r\n    tCanvas.width = tCanvas.height = canvas.width = canvas.height = 0;\r\n    return ndata;\r\n  },\r\n};\r\n\r\nexport function dataURLtoFile(dataurl, filename) {\r\n  const arr = dataurl.split(',');\r\n  const mime = arr[0].match(/:(.*?);/)[1];\r\n  const bstr = atob(arr[1]);\r\n  let n = bstr.length;\r\n  const u8arr = new Uint8Array(n);\r\n  while (n--) {\r\n    u8arr[n] = bstr.charCodeAt(n);\r\n  }\r\n  let res = null;\r\n  try{\r\n    res = new File([u8arr], filename, { type: mime })\r\n  } catch(e) {\r\n    res= new Blob([u8arr], { type: mime })\r\n    res.lastModifiedDate =new Date();\r\n    res.name = filename;\r\n  }\r\n  return res;\r\n}\r\n\r\nexport function getOrientation(file) {\r\n  return new Promise((resolve) => {\r\n    // 此处回调不能用箭头函数\r\n    Exif.getData(file, function getDataCallBack() {\r\n      const orient = Exif.getTag(this, 'Orientation');\r\n      resolve(orient);\r\n    });\r\n  });\r\n}\r\n\r\nexport function getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener('load', () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\nexport default uploadFix;\r\n","\r\nimport React from 'react';\r\nimport styles from './index.module.css';\r\nimport { Upload, Icon, message, Button } from 'antd';\r\nimport { getPhotoUrl } from '../../utils/utils';\r\nimport uploadFix, { dataURLtoFile, getOrientation, getBase64 } from '../../utils/uploadFix';\r\n\r\n\r\n\r\nfunction beforeUpload(file) {\r\n  const isNotImg = file.type !== 'image/jpeg' && file.type !== 'image/png';\r\n  if (isNotImg) {\r\n    message.error('只能上传JPG/PNG格式的图片文件!');\r\n    return false;\r\n  }\r\n\r\n  const isLt2M = file.size / 1024 / 1024 < 2;\r\n  if (!isLt2M) {\r\n    message.error('照片不能大于2MB!');\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nclass Avatar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const value = props.value || {};\r\n\r\n    this.state = {\r\n      photo_url: value.photo_url,\r\n      file: value.file\r\n    };\r\n  }\r\n\r\n  customRequest = obj => {\r\n    const file = obj.file;\r\n    // 获取旋转方向\r\n    getOrientation(file).then((orientation) => {\r\n      const reader = new FileReader();\r\n      const img = new Image();\r\n      // 处理ios图片翻转问题，orientation存在且不为1表示图片是翻转的\r\n      const needRotate = (orientation && orientation !== 1)\r\n      reader.onload = (e) => {\r\n        if (needRotate) {\r\n          img.src = e.target.result;\r\n          img.onload = () => {\r\n            // 压缩\r\n            const data = uploadFix.compress(img, orientation);\r\n            // base64tofile\r\n            const newFile = dataURLtoFile(data, file.name);\r\n            this.setState({\r\n              photo_url: data,\r\n              file: newFile\r\n            });\r\n            this.triggerChange({file: newFile})\r\n          };            \r\n        } else {\r\n          // 不需要翻转直接赋值\r\n          this.setState({\r\n            photo_url:  e.target.result,\r\n            file,\r\n          });\r\n          this.triggerChange({file: file})\r\n        }\r\n      };\r\n      reader.readAsDataURL(file);\r\n    });\r\n    return false;\r\n  };\r\n\r\n\r\n  triggerChange = (file)  => {\r\n    const onChange = this.props.onChange;\r\n    if (onChange) {\r\n      // onChange(Object.assign({}, this.state, photo_url));\r\n      // onChange({...this.state,file});\r\n      onChange(Object.assign({}, this.state, file));\r\n\r\n    }\r\n  }\r\n\r\n  // 移除图片\r\n  removeImage = (e) => {\r\n    e.stopPropagation();\r\n    this.setState({\r\n      photo_url: '',\r\n      file: ''      \r\n    }, this.props.onRemove)\r\n    // 设置新的value\r\n    this.triggerChange({\r\n      photo_url: '',\r\n      file: ''\r\n    })\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type={this.state.loading ? 'loading' : 'plus'} />\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    const { photo_url } = this.state;\r\n    const { deletable } = this.props;\r\n    let url = photo_url || ''\r\n\r\n    if (url) {\r\n      if (url.indexOf('data:image/') !== 0 && photo_url.indexOf('http') !== 0) {\r\n        url = getPhotoUrl({photo_url: url})\r\n        url += `?_=` + Date.now()\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Upload\r\n        name=\"avatar\"\r\n        accept=\"image/jpg, image/jpeg, image/png\"\r\n        listType=\"picture-card\"\r\n        className=\"avatar-uploader\"\r\n        showUploadList={false}\r\n        action=\"\"\r\n        beforeUpload={beforeUpload}\r\n        customRequest={this.customRequest}\r\n      >\r\n      <span className={styles.imgWrapper}>\r\n        {url ? <img src={url} alt=\"\" className={styles.img} /> : uploadButton}\r\n        {url && deletable ? <Button type=\"default\" shape=\"circle\" icon=\"delete\" size='small' className={styles.btnDel} onClick={this.removeImage}/> : null}\r\n        </span>\r\n      </Upload>\r\n    );\r\n  }\r\n}\r\n\r\nAvatar.defaultProps = {\r\n  onRemove: () => {}\r\n}\r\n\r\n\r\nexport default Avatar;\r\n","import React, {Component} from 'react';\r\nimport { Modal, Form, Input, DatePicker, Select,Tooltip,Icon, Upload, Button ,message, Card, Spin} from 'antd';\r\nimport { injectIntl, FormattedMessage, defineMessages } from 'react-intl';\r\nimport uploadFix, { dataURLtoFile, getOrientation, getBase64 } from '../../utils/uploadFix';\r\n\r\nconst messages = defineMessages({\r\n  selected: {\r\n    id: 'common.selected',\r\n    defaultMessage: '已选择'\r\n  },\r\n  selectFiles: {\r\n    id: 'personnel.selectFiles',\r\n    defaultMessage: '选择文件',\r\n  },\r\n  compress: {\r\n    id: 'common.compress',\r\n    defaultMessage: '正在压缩...',\r\n  },\r\n});\r\n\r\nlet oriFileList = []\r\nlet oriFileLen = 0\r\n\r\nclass BatchUpload extends Component {\r\n  \r\n  state = {\r\n    fileList: [],\r\n    unSelectedFileList: [],\r\n    selectedFileList: [],\r\n    uploading: false,\r\n  };\r\n\r\n  onCustomRequest = (obj) => {\r\n    const file = obj.file;\r\n    // 获取旋转方向\r\n    getOrientation(file).then((orientation) => {\r\n      const reader = new FileReader();\r\n      const img = new Image();\r\n      // 处理ios图片翻转问题，orientation存在且不为1表示图片是翻转的\r\n      const needRotate = (orientation && orientation !== 1)\r\n      reader.onload = (e) => {\r\n        if (needRotate) {\r\n          img.src = e.target.result;\r\n          img.onload = () => {\r\n            // 压缩\r\n            const data = uploadFix.compress(img, orientation);\r\n            // base64tofile\r\n            const newFile = dataURLtoFile(data, file.name);\r\n            const fileInfo = {\r\n              photo_url: data,\r\n              file: newFile\r\n            };\r\n            this.updateSelected(fileInfo);\r\n          };            \r\n        } else {\r\n          const fileInfo = {\r\n            photo_url:  e.target.result,\r\n            file,\r\n          }\r\n          this.updateSelected(fileInfo);\r\n        }\r\n      };\r\n      reader.readAsDataURL(file);\r\n    });\r\n    return false;\r\n  };\r\n  updateSelected = (fileInfo) => {\r\n    const selected = [...this.state.selectedFileList, fileInfo]\r\n    const maxLen = this.state.fileList.length\r\n    this.setState({\r\n      selectedFileList: selected,\r\n      uploading: selected.length < maxLen,\r\n    });\r\n    this.triggerChange({\r\n      selectedFileList: selected,\r\n      unSelectedFileList: this.state.unSelectedFileList,\r\n    });\r\n  };\r\n  triggerChange = (files)  => {\r\n    const onChange = this.props.onChange;\r\n    const {uploading} = this.state;\r\n    if (onChange) {\r\n      onChange(Object.assign({}, files, { uploading }));\r\n    }\r\n  };\r\n  onBeforeUpload = (file, fileList) => {\r\n    if (!oriFileLen) {\r\n      oriFileList = fileList\r\n      oriFileLen = oriFileList.length\r\n      this.setState(({ fileList }) => ({\r\n        fileList: [],\r\n        unSelectedFileList: [],\r\n        selectedFileList: [],\r\n        uploading: false,\r\n      }));\r\n    }\r\n    oriFileLen = oriFileLen - 1;\r\n    const isNotImg = file.type !== 'image/jpeg' && file.type !== 'image/png' && file.type !== 'image/jpg';\r\n    if (isNotImg) {\r\n      console.log('照片只支持JPEG/JPG/PNG格式!');\r\n      this.setState(({ unSelectedFileList }) => ({\r\n        unSelectedFileList: [...(unSelectedFileList || []), file],\r\n      }), () => {\r\n        this.triggerChange({\r\n          selectedFileList: this.state.selectedFileList,\r\n          unSelectedFileList: this.state.unSelectedFileList,\r\n        });\r\n      });\r\n    }\r\n\r\n    const isLt2M = file.size / 1024 / 1024  < 2;\r\n\r\n    if (!isLt2M) {\r\n      console.log('照片大小不能超过2M');\r\n      this.setState(({ unSelectedFileList }) => ({\r\n        unSelectedFileList: [...(unSelectedFileList || []), file],\r\n      }), () => {\r\n        this.triggerChange({\r\n          selectedFileList: this.state.selectedFileList,\r\n          unSelectedFileList: this.state.unSelectedFileList,\r\n        });\r\n      });\r\n    }\r\n    const res = (!isNotImg) && isLt2M\r\n    if (res) {\r\n      this.setState(({ fileList }) => ({\r\n        fileList: [...(fileList || []), file],\r\n      }));\r\n    }\r\n    return res\r\n  };\r\n\r\n  render() {\r\n    const {children, showSelected, selectText} = this.props\r\n    const uploading = this.state.selectedFileList.length < this.state.fileList.length\r\n    return(\r\n      <div>\r\n        <Upload\r\n          disabled={uploading}\r\n          name=\"upload\"\r\n          action=\"\" \r\n          accept=\"image/jpg, image/jpeg, image/png\" \r\n          multiple \r\n          showUploadList={false}\r\n          customRequest={this.onCustomRequest}\r\n          beforeUpload={this.onBeforeUpload}>\r\n            { children ? children : <Button style={{paddingLeft: '20px', paddingRight: '20px'}}>\r\n              <Icon type=\"upload\" />{ selectText ? selectText : <FormattedMessage {...messages.selectFiles}/>}\r\n            </Button>\r\n            }\r\n        </Upload>\r\n       {showSelected && <React.Fragment>\r\n          &nbsp;(<FormattedMessage {...messages.selected}/>&nbsp;{this.state.fileList.length + this.state.unSelectedFileList.length})\r\n       </React.Fragment>}\r\n       {uploading && <React.Fragment>&nbsp;<Spin size=\"small\"/><FormattedMessage {...messages.compress}/></React.Fragment>}{uploading}\r\n       \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nBatchUpload.defaultProps = {\r\n  showSelected: true,\r\n}\r\n\r\nexport default injectIntl(BatchUpload)","import React from 'react';\r\nimport { Modal, Form, Input, DatePicker, Select,Tooltip,Icon, Upload, Button ,message, Card} from 'antd';\r\nimport { injectIntl, FormattedMessage, defineMessages } from 'react-intl';\r\nimport Avatar from '../Avatar';\r\nimport BatchUpload from './BatchUpload'\r\n\r\nimport { PHONE_REG, IDCARD_REG, LETTER_NUM_REG } from '../../utils/utils'\r\n\r\nimport styles from './index.module.scss';\r\n\r\nconst messages = defineMessages({\r\n  photo: {\r\n    id: 'personnel.photo',\r\n    defaultMessage: '照片',\r\n  },\r\n  photoFormat: {\r\n    id: 'personnel.photo.format',\r\n    defaultMessage: '照片只支持JPG/JPEG/PNG格式，且每张大小不超过2M。完整命名格式为“姓名+手机号&证件号”，可根据需要支持“姓名”/\"姓名+手机号\"/\"姓名&证件号\"的命名格式。'\r\n  },\r\n  photoRequired: {\r\n    id: 'personnel.photo.required',\r\n    defaultMessage: '请选择照片!'\r\n  },\r\n  selectFiles: {\r\n    id: 'personnel.selectFiles',\r\n    defaultMessage: '选择文件',\r\n  }\r\n});\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 5 }\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 18 }\r\n  }\r\n};\r\n\r\nconst batchForm = Form.create()(\r\n  class extends React.Component {\r\n    state = {\r\n      uploading: false,\r\n    };\r\n    onOk = () => {\r\n      if (this.state.uploading) {\r\n        return false;\r\n      }\r\n      this.props.onCreate();\r\n    };\r\n    onImageChange = (v) => {\r\n      this.setState({\r\n        uploading: v.uploading,\r\n      });\r\n    };\r\n    render() {\r\n      const { visible, onCancel, onCreate, form, formData, confirmLoading } = this.props;\r\n      const { getFieldDecorator } = form;\r\n\r\n      let model = formData || {};\r\n    \r\n      \r\n      return (\r\n        <Modal\r\n          visible={visible}\r\n          title={model.title}\r\n          onCancel={onCancel}\r\n          onOk={this.onOk}\r\n          confirmLoading={confirmLoading}\r\n          width={500}\r\n          destroyOnClose={true}\r\n        >\r\n          <Form>\r\n              <FormItem {...formItemLayout} label={<span><Tooltip title={<FormattedMessage {...messages.photoFormat}/>}>\r\n                <Icon type=\"question-circle-o\" />\r\n              </Tooltip> <FormattedMessage {...messages.photo}/></span>}>\r\n              {getFieldDecorator('imageList', {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: <FormattedMessage {...messages.photoRequired}/>\r\n                  }\r\n                ]\r\n              })(\r\n                <BatchUpload onChange={this.onImageChange}/>\r\n              )}\r\n              </FormItem>\r\n              </Form>\r\n        </Modal>\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nexport default batchForm;\r\n","import React from 'react';\r\nimport { Modal, Form, Input, DatePicker, Tooltip,Icon } from 'antd';\r\nimport { injectIntl, FormattedMessage, defineMessages } from 'react-intl';\r\nimport Avatar from '../../../components/Avatar';\r\n\r\nimport { PHONE_REG, LETTER_NUM_REG } from '../../../utils/utils';\r\nimport maxLength from '../../../utils/maxLength'\r\n\r\n\r\nconst FormItem = Form.Item;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst messages = defineMessages({\r\n  personnelName: {\r\n    id: 'personnel.name',\r\n    defaultMessage: '姓名',\r\n  },\r\n  photo: {\r\n    id: 'personnel.photo',\r\n    defaultMessage: '照片',\r\n  },\r\n  mobilePhone: {\r\n    id: 'personnel.mobilePhone',\r\n    defaultMessage: '手机'\r\n  },\r\n  mobilePhoneFormat: {\r\n    id: 'personnel.mobilePhone.format',\r\n    defaultMessage: '联系电话为6-20位数字!'\r\n  },\r\n  personnelNameRequired: {\r\n    id: 'personnel.name.required',\r\n    defaultMessage: '请输入姓名!'\r\n  },\r\n  photoRequired: {\r\n    id: 'personnel.photo.required',\r\n    defaultMessage: '请选择照片!'\r\n  },\r\n  mark: {\r\n    id: 'common.mark',\r\n    defaultMessage: '备注',\r\n  },\r\n  idcardNumber: {\r\n    id: 'personnel.idcardNumber',\r\n    defaultMessage: '证件号',\r\n  },\r\n});\r\n\r\nconst EditForm = Form.create()(\r\n  class extends React.Component {\r\n\r\n    render() {\r\n      const { visible, onCancel, onCreate, form, formData, confirmLoading } = this.props;\r\n      const { getFieldDecorator } = form;\r\n      const locale = this.props.intl.locale;\r\n      const formItemLayout = {\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: locale === 'en' ? 7 : 4 }\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: locale === 'en' ? 17 : 18 }\r\n        }\r\n      };\r\n      let model = formData || {};\r\n      \r\n\r\n\r\n      return (\r\n        <Modal\r\n          visible={visible}\r\n          title={model.title}\r\n          onCancel={onCancel}\r\n          onOk={onCreate}\r\n          width={420}\r\n          destroyOnClose={true}\r\n          confirmLoading={confirmLoading}\r\n        >\r\n          <Form>\r\n            {getFieldDecorator('people_id', {\r\n              initialValue: model.people_id\r\n            })(<Input type=\"hidden\" />)}\r\n            <FormItem label={<FormattedMessage {...messages.personnelName} />} {...formItemLayout}>\r\n              {getFieldDecorator('people_name', {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: <FormattedMessage {...messages.personnelNameRequired} />\r\n                  }\r\n                ],\r\n                initialValue: model.people_name\r\n              })(<Input maxLength={maxLength.userName}/>)}\r\n            </FormItem>\r\n            <FormItem {...formItemLayout} label={<FormattedMessage {...messages.photo} />}>\r\n              {getFieldDecorator('image', {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: <FormattedMessage {...messages.photoRequired} />\r\n                  }\r\n                ],\r\n                initialValue: model.image && { photo_url: model.image }\r\n              })(<Avatar/>)}\r\n            </FormItem>\r\n            {/* <FormItem {...formItemLayout} label={<FormattedMessage {...messages.mobilePhone} />}>\r\n                {getFieldDecorator('telephone', {\r\n                  rules: [\r\n                    {\r\n                      pattern:  PHONE_REG,\r\n                      message: <FormattedMessage {...messages.mobilePhoneFormat} />\r\n                    }\r\n                  ],\r\n                  initialValue: model.telephone\r\n                })(<Input />)}\r\n              </FormItem>\r\n              <FormItem label={<FormattedMessage {...messages.idcardNumber} />} {...formItemLayout}>\r\n              {getFieldDecorator('idcard_number', {\r\n                initialValue: model.idcard_number\r\n              })(<Input maxLength={maxLength.idcardNumber}/>)}\r\n            </FormItem>\r\n            <FormItem label={<FormattedMessage {...messages.mark} />} {...formItemLayout}>\r\n              {getFieldDecorator('mark', {\r\n                initialValue: model.mark\r\n              })(<Input maxLength={maxLength.mark}/>)}\r\n            </FormItem> */}\r\n          </Form>\r\n        </Modal>\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nexport default injectIntl(EditForm);\r\n","import React from 'react';\r\nimport { Form, Input, Button, Select } from 'antd';\r\nimport { injectIntl, FormattedMessage, defineMessages } from 'react-intl';\r\nimport { loadState } from '../../../../utils/localStorage';\r\nimport maxLength from '../../../../utils/maxLength'\r\nimport SelectAccount from '../../../../components/SelectAccount'\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nconst messages = defineMessages({\r\n  sourceAccount: {\r\n    id: 'account.sourceAccount',\r\n    defaultMessage: '所属账户'\r\n  },\r\n  all: {\r\n    id: 'common.all',\r\n    defaultMessage: '全部',\r\n  },\r\n  search: {\r\n    id: 'common.search',\r\n    defaultMessage: '查询'\r\n  },\r\n  deviceName: {\r\n    id: 'device.deviceName',\r\n    defaultMessage: '设备名称'\r\n  },\r\n})\r\n\r\nconst SearchForm = Form.create()(\r\n  class extends React.Component {\r\n    state = {};\r\n\r\n    onAccountChange = (value) => {\r\n      const form = this.props.form\r\n      form.setFieldsValue({\r\n        account_id: value[value.length - 1]\r\n      })\r\n    }\r\n\r\n    render() {\r\n      const {\r\n        form,\r\n        formData,\r\n      } = this.props;\r\n      \r\n      const { getFieldDecorator } = form;\r\n\r\n      let model = formData || {};\r\n      const userInfo = loadState('userInfo', true);\r\n\r\n      return (\r\n        <Form onSubmit={this.props.handleSearch} layout=\"inline\" style={{display: 'flex', padding: '5px', alignItems: 'center'}}>\r\n            {(loadState('userInfo', true) || {}).role !== 3 && \r\n            <React.Fragment>\r\n              {getFieldDecorator('account_id', {\r\n                initialValue: userInfo.account_id,\r\n              })(<Input type=\"hidden\"/>)}\r\n              <FormItem label={<FormattedMessage {...messages.sourceAccount}/>}>\r\n                {getFieldDecorator('account_ids', {\r\n                  initialValue: [userInfo.account_id],\r\n                })(\r\n                  <SelectAccount onChange={this.onAccountChange}/>\r\n                )}\r\n              </FormItem>\r\n            </React.Fragment>}\r\n\r\n\r\n            <FormItem label={<FormattedMessage {...messages.deviceName}/>}>\r\n              {getFieldDecorator('equipment_name')(\r\n                <Input  maxLength={maxLength.deviceName}/>\r\n              )}\r\n            </FormItem>\r\n            <Button icon=\"search\" htmlType=\"submit\" type=\"primary\"><FormattedMessage {...messages.search}/></Button>\r\n        </Form>\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nexport default injectIntl(SearchForm);\r\n","import React, {Component} from 'react'\r\nimport TabTableModal from '../../../../components/TabTableModal'\r\nimport { injectIntl, FormattedMessage, defineMessages } from 'react-intl';\r\nimport { loadState } from '../../../../utils/localStorage';\r\n\r\nimport {\r\n  Badge,\r\n} from 'antd';\r\n\r\n\r\nimport {\r\n  binding,\r\n  unbinding,\r\n  getBoundEquipmentList\r\n} from '../../../../api/binding'\r\nimport { message } from 'antd';\r\n\r\nimport Search from './Search'\r\n\r\nconst wordBreak = {wordBreak:'break-all', wordWrap:'break-word'}\r\n\r\nconst messages = defineMessages({\r\n  deviceName: {\r\n    id: 'device.deviceName',\r\n    defaultMessage: '设备名称'\r\n  },\r\n  deviceID: {\r\n    id: 'device.deviceID',\r\n    defaultMessage: '设备ID'\r\n  },\r\n  connectStatus: {\r\n    id: 'device.connectStatus',\r\n    defaultMessage: '连接状态'\r\n  },\r\n  sourceAccount: {\r\n    id: 'account.sourceAccount',\r\n    defaultMessage: '所属账户'\r\n  },\r\n  relateSuccess: {\r\n    id: 'common.relate.success',\r\n    defaultMessage: '关联成功!'\r\n  },\r\n  relateError: {\r\n    id: 'common.relate.error',\r\n    defaultMessage: '关联失败!'\r\n  },\r\n  cancelRelateSuccess: {\r\n    id: 'common.cancelRelate.success',\r\n    defaultMessage: '取消关联成功!'\r\n  },\r\n  cancelRelateError: {\r\n    id: 'common.cancelRelate.error',\r\n    defaultMessage: '取消关联失败!'\r\n  },\r\n  relateDevice: {\r\n    id: 'device.relateDevice',\r\n    defaultMessage: '关联设备'\r\n  },\r\n  related: {\r\n    id: 'common.related',\r\n    defaultMessage: '已关联'\r\n  },\r\n  unrelated: {\r\n    id: 'common.unrelated',\r\n    defaultMessage: '未关联'\r\n  },\r\n  relate: {\r\n    id: 'common.relate',\r\n    defaultMessage: '关联'\r\n  },\r\n  cancelRelate: {\r\n    id: 'common.cancelRelate',\r\n    defaultMessage: '取消关联'\r\n  },\r\n  relatedDeviceNumber: {\r\n    id: 'device.relatedDeviceNumber',\r\n    defaultMessage: '关联设备数'\r\n  },\r\n  online: {\r\n    id: 'common.online',\r\n    defaultMessage: '在线'\r\n  },\r\n  offline: {\r\n    id: 'common.offline',\r\n    defaultMessage: '离线'\r\n  },\r\n})\r\n\r\nconst columns = [\r\n  {\r\n    title: <FormattedMessage {...messages.deviceName}/>,\r\n    dataIndex: 'equipment_name',\r\n    width: 100,\r\n    render: (text, record) =>\r\n    <React.Fragment>\r\n      <div style={wordBreak}>{text}</div>\r\n    </React.Fragment>\r\n  },\r\n  // 物理ID\r\n  {\r\n    title: <FormattedMessage {...messages.deviceID}/>,\r\n    dataIndex: 'equipment_id',\r\n    width: 100,\r\n  },\r\n  {\r\n    title: <FormattedMessage {...messages.connectStatus}/>,\r\n    dataIndex: 'status',\r\n    width: 100,\r\n    render: (text,record) => (\r\n      <React.Fragment>\r\n        <Badge status={['success','error'][text - 1]} />\r\n        {[<FormattedMessage {...messages.online} />, <FormattedMessage {...messages.offline} />][text-1]}\r\n      </React.Fragment>\r\n    )\r\n  },\r\n  {\r\n    title: <FormattedMessage {...messages.sourceAccount}/>,\r\n    dataIndex: 'account_name',\r\n    width: 100,\r\n    render: (text, record) =>\r\n    <React.Fragment>\r\n      <div style={wordBreak}>{text}</div>\r\n    </React.Fragment>\r\n  },\r\n]\r\n\r\nclass BindEquipment extends Component {\r\n  // 关联设备\r\n  binding = (data, callback) => {\r\n    binding({\r\n      people_ids: [this.props.peopleId],\r\n      equipment_ids: data\r\n    }).then((res) => {\r\n      if (res.code === 1000) {\r\n        message.success(this.props.intl.formatMessage(messages.relateSuccess))\r\n        // 执行回调重新加载列表\r\n        callback && callback()\r\n      } else {\r\n        message.error(res.msg || this.props.intl.formatMessage(messages.relateError))\r\n      }\r\n    }).catch(e => {\r\n      console.log(e)\r\n    })\r\n  }\r\n\r\n  // 取消关联设备\r\n  unbinding = (data, callback) => {\r\n    unbinding({\r\n      people_ids: [this.props.peopleId],\r\n      equipment_ids: data\r\n    }).then((res) => {\r\n      if (res.code === 1000) {\r\n        message.success(this.props.intl.formatMessage(messages.cancelRelateSuccess))\r\n        // 执行回调重新加载列表\r\n        callback && callback()\r\n      } else {\r\n        message.error(res.msg || this.props.intl.formatMessage(messages.cancelRelateError))\r\n      }\r\n    }).catch(e => {\r\n      console.log(e)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      visible,\r\n      onCancel,\r\n      uuid,\r\n      peopleId\r\n    } = this.props\r\n\r\n    const userInfo = loadState('userInfo', true);\r\n    const role = userInfo.role;\r\n    const account_id = userInfo.account_id;\r\n    const initParams = {\r\n      account_id: account_id,\r\n      account_ids: [account_id],\r\n    }\r\n\r\n    return (\r\n      <TabTableModal\r\n        title={<FormattedMessage {...messages.relateDevice}/>}\r\n        tabTitles={[<FormattedMessage {...messages.related}/>,<FormattedMessage {...messages.unrelated}/>]}\r\n        tabParams={[{binding: 1},{binding: 0}]}\r\n        visible={visible} \r\n        onCancel={onCancel}\r\n        columns={columns}\r\n        key={uuid}\r\n        responseKey=\"equipments\"\r\n        rowKey=\"equipment_id\"\r\n        totalLabel={`${this.props.intl.formatMessage(messages.relatedDeviceNumber)}：`}\r\n        operateLabels={[<FormattedMessage {...messages.cancelRelate}/>,<FormattedMessage {...messages.relate}/>]}\r\n        operateActions={[this.unbinding, this.binding]}\r\n        requestMethod={getBoundEquipmentList}\r\n        requestParams={{people_id: peopleId}}\r\n        initParams = {initParams}\r\n        requiredParamKeyName=\"people_id\"\r\n        formComponent={Search}/>\r\n    )\r\n  }\r\n}\r\n\r\nexport default injectIntl(BindEquipment)","import React from 'react';\r\nimport { Modal } from 'antd';\r\n\r\nimport PhotoBox from '../../../components/PhotoBox';\r\nimport UFormRow from '../../../components/UFormRow'\r\n\r\nimport { injectIntl, FormattedMessage, defineMessages } from 'react-intl';\r\n\r\n\r\nconst messages = defineMessages({\r\n  personnelName: {\r\n    id: 'personnel.name',\r\n    defaultMessage: '姓名',\r\n  },\r\n  mobilePhone: {\r\n    id: 'personnel.mobilePhone',\r\n    defaultMessage: '手机',\r\n  },\r\n  photo: {\r\n    id: 'personnel.photo',\r\n    defaultMessage: '照片',\r\n  },\r\n  mark: {\r\n    id: 'common.mark',\r\n    defaultMessage: '备注',\r\n  },\r\n  idcardNumber: {\r\n    id: 'personnel.idcardNumber',\r\n    defaultMessage: '证件号',\r\n  },\r\n})\r\n\r\nclass ViewForm extends React.Component {\r\n    state = {}\r\n\r\n    render() {\r\n      const {\r\n        visible,\r\n        onCancel,\r\n        formData,\r\n      } = this.props;\r\n      \r\n      const data = formData || {};\r\n\r\n      const list = [\r\n        {\r\n          title: `${this.props.intl.formatMessage(messages.personnelName)}：`,\r\n          content: data.people_name,\r\n        },\r\n        {\r\n          title: `${this.props.intl.formatMessage(messages.photo)}：`,\r\n          content: <PhotoBox photo={data.thumbnail} width={130} height={130}/>\r\n        },\r\n        // {\r\n        //   title: `${this.props.intl.formatMessage(messages.mobilePhone)}：`,\r\n        //   content: data.telephone,\r\n        // },\r\n        // {\r\n        //   title: `${this.props.intl.formatMessage(messages.idcardNumber)}：`,\r\n        //   content: data.idcard_number,\r\n        // },\r\n        ];\r\n\r\n      return (\r\n        <Modal\r\n          visible={visible}\r\n          title={data.title}\r\n          onCancel={onCancel}\r\n          width={400}\r\n          footer={null}\r\n          destroyOnClose={true}\r\n        >\r\n        <div>    \r\n          {list.map(it => (\r\n            <UFormRow \r\n              labelSpan={6} \r\n              title={it.title} \r\n              content={it.content} \r\n              key={it.title} \r\n              labelPosition=\"right\"/>\r\n          ))}\r\n        </div>\r\n        </Modal>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default injectIntl(ViewForm);\r\n","import React from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  message,\r\n  Divider,\r\n  Popconfirm,\r\n  Menu,\r\n  Dropdown,\r\n  Icon,\r\n  Select,\r\n  Modal,\r\n  Cascader,\r\n  Badge,\r\n} from 'antd';\r\nimport { injectIntl, FormattedMessage, defineMessages } from 'react-intl';\r\n\r\nimport StandardTable from '../../../components/StandardTable';\r\nimport PhotoBox from '../../../components/PhotoBox'\r\nimport ImageViewer from '../../../components/ImageViewer'\r\nimport ListHeader from '../../../components/ListHeader'\r\nimport SelectAccount from '../../../components/SelectAccount'\r\n\r\nimport VisitorList from './VisitorList'\r\n// import EquipmentList from './EquipmentList'\r\nimport BatchForm from '../../../components/BatchAddPeople'\r\nimport EditForm from './EditForm'\r\nimport BindEquipment from './BindEquipment'\r\nimport ViewForm from './ViewForm'\r\n\r\n\r\nimport {\r\n  getPeoples,\r\n  getPeopleInfo,\r\n  addPeople,\r\n  updatePeople,\r\n  deletePeople,\r\n  batchDeletePeople,\r\n  batchAddPeople,\r\n  resetPwd,\r\n  approval,\r\n  getVisitorList,\r\n} from '../../../api/personnel';\r\n\r\nimport { defaultPageCount, fixUndefinedData, parseDate, dateTimeToMoment } from '../../../utils/utils';\r\nimport { cancelApiRequsets } from '../../../utils/fetch';\r\nimport { loadState } from '../../../utils/localStorage';\r\nimport maxLength from '../../../utils/maxLength'\r\nimport groupBy from 'lodash/groupBy'\r\n\r\nimport styles from './index.module.scss';\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nconst messages = defineMessages({\r\n  personnelName: {\r\n    id: 'personnel.name',\r\n    defaultMessage: '姓名',\r\n  },\r\n  photo: {\r\n    id: 'personnel.photo',\r\n    defaultMessage: '照片',\r\n  },\r\n  mobilePhone: {\r\n    id: 'personnel.mobilePhone',\r\n    defaultMessage: '手机'\r\n  },\r\n  identifier: {\r\n    id: 'common.identifier',\r\n    defaultMessage: '编号'\r\n  },\r\n  sourceAccount: {\r\n    id: 'account.sourceAccount',\r\n    defaultMessage: '所属账户'\r\n  },\r\n  status: {\r\n    id: 'common.status',\r\n    defaultMessage: '状态',\r\n  },\r\n  registered: {\r\n    id:'common.registered',\r\n    defaultMessage: '已注册'\r\n  },\r\n  rejected: {\r\n    id: 'common.rejected',\r\n    defaultMessage: '已拒绝'\r\n  },\r\n  approvalPending: {\r\n    id: 'common.approvalPending',\r\n    defaultMessage: '待审批'\r\n  },\r\n  approve: {\r\n    id: 'common.approve',\r\n    defaultMessage: '同意'\r\n  },\r\n  reject: {\r\n    id: 'common.reject',\r\n    defaultMessage: '拒绝'\r\n  },\r\n  visitorNumber: {\r\n    id: 'personnel.visitorNumber',\r\n    defaultMessage: '访客数'\r\n  },\r\n  operate: {\r\n    id: 'common.operate',\r\n    defaultMessage: '操作'\r\n  },\r\n  operateSuccess: {\r\n    id: 'common.operate.success',\r\n    defaultMessage: '操作成功!'\r\n  },\r\n  operateError: {\r\n    id: 'common.operate.error',\r\n    defaultMessage: '操作失败!'\r\n  },\r\n  relateDevice: {\r\n    id: 'device.relateDevice',\r\n    defaultMessage: '关联设备'\r\n  },\r\n  resetPassword: {\r\n    id: 'account.resetPassword',\r\n    defaultMessage: '密码重置',\r\n  },\r\n  resetConfirm: {\r\n    id: 'common.reset.confirm',\r\n    defaultMessage: '确定重置吗?'\r\n  },\r\n  resetSuccess: {\r\n    id: 'common.reset.success',\r\n    defaultMessage: '重置成功!',\r\n  },\r\n  resetError: {\r\n    id: 'common.reset.error',\r\n    defaultMessage: '重置失败了!',\r\n  },\r\n  edit: {\r\n    id: 'common.edit',\r\n    defaultMessage: '编辑',\r\n  },\r\n  search: {\r\n    id: 'common.search',\r\n    defaultMessage: '查询',\r\n  },\r\n  reset: {\r\n    id: 'common.reset',\r\n    defaultMessage: '重置'\r\n  },\r\n  all: {\r\n    id: 'common.all',\r\n    defaultMessage: '全部'\r\n  },\r\n  delete: {\r\n    id: 'common.delete',\r\n    defaultMessage: '删除',\r\n  },\r\n  deleteSuccess: {\r\n    id: 'common.delete.success',\r\n    defaultMessage: '删除成功!'\r\n  },\r\n  deleteError: {\r\n    id: 'common.delete.error',\r\n    defaultMessage: '删除失败了!',\r\n  },\r\n  failedToGetData: {\r\n    id: 'common.error.failedToGetData',\r\n    defaultMessage: '获取数据失败!'\r\n  },\r\n  batchAdd: {\r\n    id: 'common.batchAdd',\r\n    defaultMessage: '批量添加',\r\n  },\r\n  batchAddSuccess: {\r\n    id: 'common.batchAdd.success',\r\n    defaultMessage: '批量添加成功!'\r\n  },\r\n  batchAddError: {\r\n    id: 'common.batchAdd.error',\r\n    defaultMessage: '批量添加失败!'\r\n  },\r\n  batchDelete: {\r\n    id: 'common.batchDelete',\r\n    defaultMessage: '批量删除',\r\n  },\r\n  deleteConfirm: {\r\n    id: 'common.delete.confirm',\r\n    defaultMessage: '确定删除吗?'\r\n  },\r\n  batchDeleteConfirm: {\r\n    id: 'common.batchDelete.confirm',\r\n    defaultMessage: '确定批量删除吗?'\r\n  },\r\n  batchDeleteSuccess: {\r\n    id: 'common.batchDelete.success',\r\n    defaultMessage: '批量删除成功!'\r\n  },\r\n  batchDeleteError: {\r\n    id: 'common.batchDelete.error',\r\n    defaultMessage: '批量删除失败!'\r\n  },\r\n  addPeople: {\r\n    id: 'personnel.addPeople',\r\n    defaultMessage: '添加人员',\r\n  },\r\n  updatePeople: {\r\n    id: 'personnel.updatePeople',\r\n    defaultMessage: '更新人员',\r\n  },\r\n  photoFormat: {\r\n    id: 'personnel.photo.format',\r\n    defaultMessage: '照片名即为姓名，若要加上“手机”，照片名格式为“姓名+手机号”，照片只支持JPG/JPEG/PNG格式，且每张大小不超过2M!'\r\n  },\r\n  partFailError: {\r\n    id: 'personnel.addError.partFail',\r\n    defaultMessage: '添加人员部分失败，原因如下!'\r\n  },\r\n  failError: {\r\n    id:'personnel.addError.fail',\r\n    defaultMessage: '添加人员失败，原因如下!'\r\n  },\r\n  photoFormatError: {\r\n    id: 'personnel.addError.photoFormat',\r\n    defaultMessage: '照片格式不符或大小超过限制',\r\n  },\r\n  add: {\r\n    id: 'common.add',\r\n    defaultMessage: '添加',\r\n  },\r\n  update: {\r\n    id: 'common.update',\r\n    defaultMessage: '更新',\r\n  },\r\n  success: {\r\n    id: 'common.success',\r\n    defaultMessage: '成功!'\r\n  },\r\n  failed: {\r\n    id: 'common.failed',\r\n    defaultMessage: '失败了!'\r\n  },\r\n  peopleList: {\r\n    id: 'personnel.peopleList',\r\n    defaultMessage: '人员列表'\r\n  },\r\n  confirmDelete: {\r\n    id: 'common.confirmDelete',\r\n    defaultMessage: '确认删除'\r\n  },\r\n  cancel: {\r\n    id: 'common.cancel',\r\n    defaultMessage: '取消'\r\n  },\r\n  idcardNumber: {\r\n    id: 'personnel.idcardNumber',\r\n    defaultMessage: '证件号'\r\n  },\r\n  peopleDetail: {\r\n    id: 'personnel.details',\r\n    defaultMessage: '人员详情',\r\n  },\r\n})\r\nclass PersonnelManage extends React.Component {\r\n  columns = [\r\n    {\r\n      title: <FormattedMessage {...messages.personnelName}/>,\r\n      dataIndex: 'people_name',\r\n      render: (text, record) => (\r\n        <React.Fragment>\r\n          <a className={styles.wordBreak} href=\"javascript:;\" onClick={() => this.showViewModal(record)}>{text}</a>\r\n        </React.Fragment>\r\n      )\r\n    },\r\n    {\r\n      title: <FormattedMessage {...messages.photo}/>,\r\n      dataIndex: 'image',\r\n      render: (text, record) =>\r\n        <React.Fragment>\r\n          {record.image && <PhotoBox photo={record.thumbnail} width={50} height={50} onClick={() => {this.showImage(text)}}/>}\r\n        </React.Fragment>\r\n    },\r\n    // {\r\n    //   title: <FormattedMessage {...messages.mobilePhone}/>,\r\n    //   dataIndex: 'telephone'\r\n    // },\r\n    // {\r\n    //   title: <FormattedMessage {...messages.idcardNumber}/>,\r\n    //   dataIndex: 'idcard_number'\r\n    // },\r\n    {\r\n      title: <FormattedMessage {...messages.identifier}/>,\r\n      dataIndex: 'people_id'\r\n    },\r\n    {\r\n      title: <FormattedMessage {...messages.sourceAccount}/>,\r\n      dataIndex: 'account_name',\r\n      render: (text, record) => (\r\n        <React.Fragment>\r\n          <span className={styles.wordBreak}>{text}</span>\r\n        </React.Fragment>\r\n      )\r\n    },\r\n    {\r\n      title: <FormattedMessage {...messages.status}/>,\r\n      dataIndex: 'approval',\r\n      render: (text, record) => (\r\n        <React.Fragment>\r\n          <Badge status={['success','processing','error'][text - 1]} />\r\n          {[\r\n            <FormattedMessage {...messages.registered}/>,\r\n            <FormattedMessage {...messages.approvalPending}/>,\r\n            <FormattedMessage {...messages.rejected}/>][text - 1]}\r\n          {text === 2 && <div className={styles.statusWrap}>\r\n            <Button size=\"small\" onClick={() => this.onApprove(record.people_id, true)}>\r\n              <FormattedMessage {...messages.approve}/>\r\n            </Button>\r\n            <Button size=\"small\" type=\"danger\" className={styles.reject} onClick={() => this.onApprove(record.people_id, false)}>\r\n              <FormattedMessage {...messages.reject}/>\r\n            </Button>\r\n          </div>}\r\n        </React.Fragment>\r\n      ),\r\n    },{\r\n      title: <FormattedMessage {...messages.visitorNumber}/>,\r\n      dataIndex: 'visitor_number',\r\n      render: (text, record) => (\r\n        <React.Fragment>\r\n          <a href=\"javascript:;\" onClick={() =>this.onOpenVisitorList(record)}>{text}</a>\r\n        </React.Fragment>\r\n      ),\r\n    },\r\n    // {\r\n    //   title: '关联设备数',\r\n    //   dataIndex: 'equipment_number',\r\n    //   render: (text, record) => (\r\n    //     <React.Fragment>\r\n    //       <a href=\"javascript:;\" onClick={this.onOpenEquipmentList}>{text}</a>\r\n    //     </React.Fragment>\r\n    //   ),\r\n    // },\r\n    {\r\n      title: <FormattedMessage {...messages.operate}/>,\r\n      dataIndex: 'operate',\r\n      render: (text, record) => (\r\n      <div className={styles.operatorWrap}>\r\n        {record.approval === 1 && <React.Fragment>\r\n          \r\n          \r\n            <a href=\"javascript:;\" className={styles.operatorLink} onClick={() =>this.showSelectModal(record.people_id)}>\r\n              <FormattedMessage {...messages.relateDevice}/>\r\n            </a>\r\n            <Popconfirm\r\n              title={<FormattedMessage {...messages.resetConfirm}/>}\r\n              onConfirm={() => this.resetPwd(record.people_id)}\r\n              className={styles.operatorLink}\r\n            >\r\n              <a href=\"javascript:;\"><FormattedMessage {...messages.resetPassword}/></a>\r\n            </Popconfirm>\r\n            <a href=\"javascript:;\" onClick={() => this.showEditModal(record)} className={styles.operatorLink} className={styles.operatorLink}>\r\n            <FormattedMessage {...messages.edit}/>\r\n            </a>\r\n            <Popconfirm\r\n              title={<FormattedMessage {...messages.deleteConfirm}/>}\r\n              onConfirm={() => this.onDelete(record.people_id)}\r\n              className={styles.operatorLink}\r\n            >\r\n              <a href=\"javascript:;\"><FormattedMessage {...messages.delete}/></a>\r\n            </Popconfirm>\r\n          \r\n        </React.Fragment>}\r\n        {record.approval === 3 && <React.Fragment>\r\n          <Popconfirm\r\n              title={<FormattedMessage {...messages.deleteConfirm}/>}\r\n              onConfirm={() => this.onDelete(record.people_id)}\r\n              className={styles.operatorLink}\r\n            >\r\n              <a href=\"javascript:;\"><FormattedMessage {...messages.delete}/></a>\r\n            </Popconfirm>\r\n        </React.Fragment>}\r\n        </div>\r\n      )\r\n    }\r\n  ];\r\n  queryStrings = this.props.location.query || {}\r\n  accountId = this.queryStrings.account_id || ''\r\n  parentId = this.queryStrings.parent_id || ''\r\n\r\n  state = {\r\n    selectedRows: [],\r\n    loading: false,\r\n    confirmLoading: false,\r\n    locked: false,\r\n    visible: false,\r\n    // 是否显示详情\r\n    showView: false,\r\n    // 是否显示批量添加弹窗\r\n    showBatch: false,\r\n    peoples: [],\r\n    // 批量上传时上传错误的人员\r\n    errPeoples: [],\r\n    // 批量上传成功次数\r\n    batchAddSuccess: 0,\r\n    // 是否显示大图预览\r\n    isShowImage: false,\r\n    // 大图url\r\n    imageViewUrl: '',\r\n    // 表格搜索框表单\r\n    search_form: {},\r\n    uuid: Date.now(),\r\n    batchKey: Date.now() + Math.random(),\r\n    total: 0,\r\n    page_number: 1,\r\n    page_size: defaultPageCount,\r\n    // 查看列表\r\n    viewListDataSource: [],\r\n    isVisitorListVisible: false,\r\n    isEquipmentListVisible: false,\r\n    // 绑定设备列表\r\n    selectedPeopleId: '',\r\n    batchDeleteMode: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const initAccountIds = this.getInitAccountIds();\r\n    const form = this.props.form;\r\n    const accountId =initAccountIds.slice(-1)[0]\r\n    this.setState({\r\n      search_form: {\r\n        account_ids: initAccountIds,\r\n        account_id: accountId,\r\n      }\r\n    });\r\n    form.setFieldsValue({\r\n      account_ids: initAccountIds,\r\n      account_id: accountId,\r\n    }, () => {\r\n      this._loadAsyncData();\r\n    })\r\n  }\r\n\r\n  onAccountChange = (value) => {\r\n    const form = this.props.form\r\n    form.setFieldsValue({\r\n      account_id: value[value.length - 1]\r\n    })\r\n  }\r\n\r\n  getInitAccountIds = () => {\r\n    const userInfo = loadState('userInfo', true);\r\n    const role = userInfo.role;\r\n    const account_id = userInfo.account_id;\r\n    let res = [account_id];\r\n    // 当前是admin,连接中存在accountId,说明是admin查看子账号的人数/设备数\r\n    if (role === 1 && this.accountId) {\r\n      if (this.parentId) {\r\n        res.push(Number(this.parentId))\r\n      }\r\n      res.push(this.accountId)\r\n    }\r\n    return res\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    cancelApiRequsets();\r\n  }\r\n\r\n  _loadAsyncData() {\r\n    this.setState({\r\n      loading: true\r\n    });\r\n\r\n    let { page_number, page_size, search_form = {} } = this.state;\r\n    let peoples = [];\r\n\r\n    getPeoples({ page_number, page_size, ...search_form })\r\n      .then(response => {\r\n        let data = response.data;\r\n        if (response.code === 1000) {\r\n          peoples = data.peoples || [];\r\n          let total = data.total_number || 0;\r\n          this.setState({\r\n            peoples,\r\n            total,\r\n            selectedRows: []\r\n\r\n          });\r\n        } else {\r\n          this.setState({\r\n            peoples: [],\r\n            selectedRows: []\r\n          });\r\n          message.error(response.msg || this.props.intl.formatMessage(messages.failedToGetData));\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      })\r\n      .finally(() => {\r\n        this.setState({\r\n          loading: false\r\n        });\r\n      });\r\n  }\r\n\r\n  toggleBatchDelete = (isDeleteMode) => {\r\n    // 是否批量删除模式\r\n    if (!isDeleteMode) {\r\n      // 点击取消，删除已选的项\r\n      this.setState({\r\n        selectedRows: []\r\n      })\r\n    }\r\n    this.setState({\r\n      batchDeleteMode: !this.state.batchDeleteMode\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 获取人员详情\r\n   * @param {Number} id\r\n   */\r\n  getInfo(id) {\r\n    return new Promise((resolve, reject) => {\r\n      getPeopleInfo(id).then((response) => {\r\n        if (response.code === 1000) {\r\n          resolve(response.data)\r\n        } else {\r\n          reject(response.msg || this.props.intl.formatMessage(messages.failedToGetData))\r\n        }\r\n      }).catch((e) => {\r\n        reject(this.props.intl.formatMessage(messages.failedToGetData))\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 重置密码\r\n   *\r\n   * @memberof PersonnelManage\r\n   */\r\n  resetPwd = (id) => {\r\n    resetPwd({\r\n      people_id: id\r\n    }).then((res) => {\r\n      if (res.code === 1000) {\r\n        message.success(this.props.intl.formatMessage(messages.resetSuccess))\r\n      } else {\r\n        message.error(res.msg || this.props.intl.formatMessage(messages.resetError))\r\n      }\r\n    }).catch(e => {\r\n      message.error(this.props.intl.formatMessage(messages.resetError))\r\n      console.log(e)\r\n    })\r\n  }\r\n\r\n\r\n  /**\r\n   * 打开批量添加弹窗\r\n   */\r\n  onBatchShow = () => {\r\n    let batchFormData = {\r\n      title: <FormattedMessage {...messages.batchAdd}/>,\r\n    }\r\n    this.setState({\r\n      showBatch: true,\r\n      batchFormData,\r\n      batchKey: Date.now(),\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 删除人员\r\n   * @param {Number} 人员id\r\n   */\r\n  onDelete = id => {\r\n    deletePeople(id)\r\n      .then(res => {\r\n        if (res.code === 1000) {\r\n          message.success(this.props.intl.formatMessage(messages.deleteSuccess));\r\n          this.setState({\r\n            selectedRows: this.state.selectedRows.filter((it) => it.people_id !== id)\r\n          })\r\n          this._loadAsyncData();\r\n        } else {\r\n          message.error(res.msg || this.props.intl.formatMessage(messages.deleteError));\r\n        }\r\n      })\r\n      .catch(error => {\r\n        // handle error\r\n        message.error(this.props.intl.formatMessage(messages.deleteError));\r\n      });\r\n  };\r\n\r\n  onApprove = (people_id, flag) => {\r\n    approval({\r\n      people_id,\r\n      approval: flag,\r\n    }).then((res) => {\r\n      if (res.code === 1000) {\r\n        message.success(this.props.intl.formatMessage(messages.operateSuccess))\r\n        this._loadAsyncData()\r\n      } else {\r\n        message.error(this.props.intl.formatMessage(messages.operateError))\r\n      }\r\n    }).catch(e => {\r\n      message.error(this.props.intl.formatMessage(messages.operateError))\r\n      console.log(e)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 批量删除人员\r\n   */\r\n  onDeleteAll = () => {\r\n    if (this.state.selectedRows) {\r\n      const ids = this.state.selectedRows.reduce((res, item) => {\r\n        res.push(item.people_id)\r\n        return res\r\n      }, [])\r\n      batchDeletePeople(ids).then((res) => {\r\n        if (res.code === 1000) {\r\n          message.success(this.props.intl.formatMessage(messages.batchDeleteSuccess));\r\n          this.setState({\r\n            selectedRows: []\r\n          })\r\n          this._loadAsyncData();\r\n        } else {\r\n          message.error(res.msg || this.props.intl.formatMessage(messages.batchDeleteError));\r\n        }\r\n      })\r\n      .catch(error => {\r\n        // handle error\r\n        message.error(this.props.intl.formatMessage(messages.batchDeleteError));\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 处理分页变化\r\n   */\r\n  handleStandardTableChange = (pagination, filtersArg, sorter) => {\r\n    let { page_number, page_size } = this.state;\r\n\r\n    if (page_size !== pagination.pageSize) {\r\n      // page size changed, then reset page number to 1\r\n      page_number = 1;\r\n    } else {\r\n      page_number = pagination.current;\r\n    }\r\n\r\n    page_size = pagination.pageSize;\r\n\r\n    this.setState(\r\n      {\r\n        page_number,\r\n        page_size\r\n      },\r\n      this._loadAsyncData\r\n    );\r\n  };\r\n\r\n  /**\r\n   * 重置搜索\r\n   */\r\n  handleFormReset = () => {\r\n    const { form } = this.props;\r\n    form.resetFields();\r\n    this.setState(\r\n      {\r\n        page_number: 1,\r\n        search_form: {}\r\n      },\r\n      this._loadAsyncData\r\n    );\r\n  };\r\n\r\n  /**\r\n   * 点击搜索\r\n   * @param {Object} e 事件对象\r\n   */\r\n  handleSearch = e => {\r\n    e.preventDefault();\r\n\r\n    const { form } = this.props;\r\n\r\n    form.validateFields((err, fieldsValue) => {\r\n      if (err) return;\r\n\r\n      this.setState(\r\n        {\r\n          page_number: 1,\r\n          search_form: fieldsValue\r\n        },\r\n        this._loadAsyncData\r\n      );\r\n    });\r\n  };\r\n\r\n  /**\r\n   * 打开添加人员弹窗\r\n   */\r\n  showAddForm = () => {\r\n    let formData = {\r\n      title: <FormattedMessage {...messages.addPeople}/>,\r\n    };\r\n\r\n    this.setState({ visible: true, formData });\r\n  };\r\n\r\n  /**\r\n   * 打开编辑人员弹窗\r\n   */\r\n  showEditModal = record => {\r\n    if (this.state.locked) {\r\n      return\r\n    }\r\n    this.setState({\r\n      locked: true\r\n    })\r\n    this.getInfo(record.people_id).then((data) => {\r\n      const people = data\r\n\r\n      let formData = {\r\n        title: <FormattedMessage {...messages.updatePeople}/>,\r\n        ...people\r\n      };\r\n  \r\n      this.setState({ visible: true, formData, locked: false });\r\n    }).catch(err => {\r\n      message.error(err);\r\n      this.setState({\r\n        locked: false,\r\n      })\r\n    })\r\n  };\r\n\r\n  /**\r\n   * 设置添加/编辑弹窗的引用\r\n   * @param {Object} formRef 添加/编辑人员组件\r\n   */\r\n  saveFormRef = (formRef, key) => {\r\n    this[key] = formRef;\r\n  };\r\n\r\n  \r\n\r\n  /**\r\n   * 设置批量添加人员组件的引用\r\n   * @param {Object} formRef 批量添加人员\r\n   */\r\n  saveBatchFormRef = formRef => {\r\n    this.batchFormRef = formRef;\r\n  };\r\n\r\n  handleModal = (stateProps, flag) => {\r\n    this.setState({\r\n      [stateProps]: flag\r\n    })\r\n  }\r\n\r\n  // onOpenEquipmentList = () => {\r\n  //   let viewListDataSource = []\r\n  //   this.setState({\r\n  //     viewListDataSource,\r\n  //   })\r\n  //   this.handleModal('isEquipmentListVisible', true)  \r\n  // }\r\n\r\n  onOpenVisitorList = (record) => {\r\n    let viewListDataSource = []\r\n    getVisitorList({ page_number: 1, page_size: 9999, inviter_id: record.people_id})\r\n    .then(response => {\r\n      let data = response.data;\r\n      if (response.code === 1000) {\r\n        viewListDataSource = data.peoples || [];\r\n        this.setState({\r\n          viewListDataSource,\r\n        });\r\n        this.handleModal('isVisitorListVisible', true)\r\n      } else {\r\n        this.setState({\r\n          viewListDataSource: []\r\n        });\r\n        message.error(response.msg || this.props.intl.formatMessage(messages.failedToGetData));\r\n      }\r\n    })\r\n    .catch(e => {\r\n      console.log(e);\r\n      message.error(this.props.intl.formatMessage(messages.failedToGetData));\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 打开大图预览弹窗\r\n   * @param {String} url 大图Url\r\n   */\r\n  showImage = (url) => {\r\n    this.setState({\r\n      isShowImage: true,\r\n      imageViewUrl: url,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 关闭大图预览弹窗\r\n   */\r\n  closeImage = () => {\r\n    this.setState({\r\n      isShowImage: false,\r\n      imageViewUrl: '',\r\n    })\r\n  }\r\n\r\n  doBatchAdd = async (selectedFileList, unSelectedFileList) => {\r\n    const len = selectedFileList.length;\r\n    this.setState({\r\n      errPeoples: [],\r\n      batchAddSuccess: 0,\r\n    });\r\n    for(let i =0; i<len; i++) {\r\n      const formData = new FormData();\r\n      const file = selectedFileList[i]\r\n      formData.append('[]image', file.file);\r\n      await batchAddPeople(formData).then((res) => {\r\n        if (res.code === 1000) {\r\n          this.setState({\r\n            batchAddSuccess: this.state.batchAddSuccess + 1\r\n          })\r\n        } else if (res.code === 10301) {\r\n          this.setState({\r\n            errPeoples: [...this.state.errPeoples, ...res.data.err_people]\r\n          })\r\n        } else {\r\n          console.log('error')\r\n        }\r\n      }).catch(e => {\r\n        console.log('catch', e)\r\n      })\r\n    }\r\n    // 后端返回错误或部分文件格式不符\r\n    if (this.state.errPeoples.length || unSelectedFileList.length) {\r\n      let errDatas = groupBy(this.state.errPeoples, 'Errmsg')\r\n      let errTypes = Object.keys(errDatas)\r\n      const title = this.state.batchAddSuccess !== 0 ? \r\n        this.props.intl.formatMessage(messages.partFailError) :\r\n        this.props.intl.formatMessage(messages.failError);\r\n      Modal.info({\r\n        title,\r\n        content: (\r\n          <React.Fragment>\r\n            <div style={{maxHeight: '280px', overflowY: 'auto'}}>\r\n            {unSelectedFileList.length ? <div><FormattedMessage {...messages.photoFormatError}/>:</div> : null}\r\n            {unSelectedFileList.map((item) =>(<div key={item.name}>{item.name}</div>))}\r\n            {errTypes.map((typemsg) => (<div key={typemsg}>\r\n              <div>{typemsg}：</div>\r\n              <React.Fragment>{errDatas[typemsg].map((it) => (<div key={it.ImageFile}>{it.ImageFile}</div>))}</React.Fragment>\r\n            </div>))}\r\n            </div>\r\n          </React.Fragment>\r\n        ),\r\n        onOk() {},\r\n      });\r\n      this.setState({\r\n        showBatch: false,\r\n        confirmLoading: false,\r\n      },this.handleFormReset)\r\n      // 完全成功\r\n    } else if (this.state.batchAddSuccess === len) {\r\n      message.success(this.props.intl.formatMessage(messages.batchAddSuccess))\r\n      this.setState({\r\n        showBatch: false,\r\n        confirmLoading: false,\r\n      },this.handleFormReset)\r\n      // 完全失败\r\n    } else {\r\n      message.error(this.props.intl.formatMessage(messages.batchAddError))\r\n      this.setState({\r\n        confirmLoading: false,\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 处理批量添加确定按钮事件\r\n   */\r\n  handleBatchCreate = () => {\r\n    const form = this.batchFormRef.props.form;\r\n    \r\n    form.validateFields((err, values) => {\r\n      if (err) {\r\n        return;\r\n      }\r\n      const { imageList } = values;\r\n      const { selectedFileList, unSelectedFileList } = imageList;\r\n      // const formData = new FormData();\r\n\r\n      if(!selectedFileList.length) {\r\n        message.warning(this.props.intl.formatMessage(messages.photoFormatError));\r\n        return;\r\n      }\r\n\r\n      this.setState({\r\n        confirmLoading: true,\r\n      })\r\n\r\n      this.doBatchAdd(selectedFileList, unSelectedFileList);\r\n    });\r\n  };\r\n\r\n      /**\r\n   * 打开详情弹窗\r\n   * @param {Object} record 识别记录详情\r\n   */\r\n  showViewModal = (record) => {\r\n    if (this.state.locked) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      locked: true\r\n    })\r\n    this.getInfo(record.people_id).then((data) => {\r\n      const people = data\r\n\r\n      let formData = {\r\n        title: <FormattedMessage {...messages.peopleDetail}/>,\r\n        ...people\r\n      };\r\n  \r\n      this.setState({ showView: true, formData, locked: false });\r\n    }).catch(err => {\r\n      message.error(err);\r\n      this.setState({\r\n        locked: false,\r\n      })\r\n    })\r\n  };\r\n\r\n\r\n  /**\r\n   * 处理添加/编辑人员点击事件\r\n   */\r\n  handleCreate = () => {\r\n    const form = this.editFormRef.props.form;\r\n\r\n    form.validateFields((err, values) => {\r\n      if (err) {\r\n        return;\r\n      }\r\n      const _image = values['image'] || {};\r\n      const image = _image.file;\r\n      const {people_id, people_name, telephone, idcard_number, mark } = values\r\n\r\n\r\n      let fieldsValue = fixUndefinedData({\r\n        image,\r\n        people_id,\r\n        people_name,\r\n        telephone,\r\n        idcard_number,\r\n        mark,\r\n      });\r\n\r\n      const method = fieldsValue.people_id ? updatePeople: addPeople\r\n      const msg = fieldsValue.people_id ? this.props.intl.formatMessage(messages.update) : this.props.intl.formatMessage(messages.add)\r\n      this.setState({\r\n        confirmLoading: true,\r\n      });\r\n      method(fieldsValue)\r\n        .then(res => {\r\n          if (res.code === 1000) {\r\n            message.success(`${msg}${this.props.intl.formatMessage(messages.success)}`);\r\n            if(fieldsValue.people_id) {\r\n              this._loadAsyncData();\r\n            } else {\r\n              this.handleFormReset()\r\n            }\r\n            this.setState({\r\n              visible: false,\r\n            })\r\n            form.resetFields();\r\n          } else {\r\n            message.error(res.msg || `${msg}${this.props.intl.formatMessage(messages.failed)}`);\r\n          }\r\n          this.setState({\r\n            confirmLoading: false,\r\n          });\r\n        })\r\n        .catch(error => {\r\n          // handle error\r\n          message.error(`${msg}${this.props.intl.formatMessage(messages.failed)}`);\r\n          this.setState({\r\n            confirmLoading: false,\r\n          });\r\n        })\r\n    });\r\n  };\r\n\r\n\r\n  /**\r\n   * 处理表格选择事件\r\n   * @param {Array[Object]} 已选择的列表项\r\n   */\r\n  handleSelectRows = rows => {\r\n    this.setState({\r\n      selectedRows: rows\r\n    });\r\n  };\r\n\r\n  showSelectModal = (people_id) => {\r\n    this.setState({\r\n      selectedPeopleId: people_id,\r\n      uuid: Date.now(),\r\n    })\r\n    this.handleModal('isSelectVisible', true)\r\n  }\r\n\r\n\r\n  renderSimpleForm() {\r\n    const {\r\n      form: { getFieldDecorator }\r\n    } = this.props;\r\n\r\n    return (\r\n      <Form onSubmit={this.handleSearch} layout=\"inline\">\r\n        <Row gutter={{ md: 8, lg: 24, xl: 48 }}>\r\n          {(loadState('userInfo', true) || {}).role !== 3 && <Col md={8} sm={24}>\r\n          {getFieldDecorator('account_id')(<Input type=\"hidden\"/>)}\r\n          <FormItem label={<FormattedMessage {...messages.sourceAccount}/>}>\r\n          {getFieldDecorator('account_ids')(\r\n            <SelectAccount onChange={this.onAccountChange}/>\r\n             )}\r\n          </FormItem>\r\n          </Col>}\r\n          <Col md={8} sm={24}>\r\n            <FormItem label={<FormattedMessage {...messages.personnelName}/>}>\r\n              {getFieldDecorator('people_name')(\r\n                <Input  maxLength={maxLength.userName}/>\r\n              )}\r\n            </FormItem>\r\n          </Col>\r\n          {/* <Col md={8} sm={24}>\r\n            <FormItem label={<FormattedMessage {...messages.idcardNumber}/>}>\r\n              {getFieldDecorator('idcard_number')(\r\n                <Input  maxLength={maxLength.idcardNumber}/>\r\n              )}\r\n            </FormItem>\r\n          </Col> */}\r\n          <Col md={8} sm={24}>\r\n            <span className={styles.submitButtons}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n              <FormattedMessage {...messages.search}/>\r\n              </Button>\r\n              <Button style={{ marginLeft: 8 }} onClick={this.handleFormReset}>\r\n              <FormattedMessage {...messages.reset}/>\r\n              </Button>\r\n            </span>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      loading,\r\n      selectedRows,\r\n      peoples,\r\n      total,\r\n      visible,\r\n      formData,\r\n      batchFormData,\r\n      page_number,\r\n      page_size,\r\n      confirmLoading,\r\n    } = this.state;\r\n\r\n    const pagination = {\r\n      current: page_number,\r\n      pageSize: page_size,\r\n      total,\r\n    };\r\n\r\n    return (\r\n      <React.Fragment>\r\n\r\n        <Card bordered={false}>\r\n          <div className={styles.tableList}>\r\n            <div className={styles.tableListForm}>\r\n              {this.renderSimpleForm()}\r\n            </div>\r\n            <ListHeader\r\n              title={<FormattedMessage {...messages.peopleList}/>}\r\n              customButton={\r\n                <React.Fragment>\r\n                  {this.state.batchDeleteMode ? <React.Fragment>\r\n                    <Button onClick={() => this.toggleBatchDelete(false)} style={{marginRight: 5}}>\r\n                      <FormattedMessage {...messages.cancel}/>\r\n                    </Button>\r\n                    {selectedRows.length <= 0 ? \r\n                     <Button disabled><FormattedMessage {...messages.confirmDelete}/></Button>:\r\n                     <Popconfirm\r\n                        title={<FormattedMessage {...messages.batchDeleteConfirm}/>}\r\n                        onConfirm={() => this.onDeleteAll()}>\r\n                         <Button><FormattedMessage {...messages.confirmDelete}/></Button>\r\n                      </Popconfirm>\r\n                    }\r\n                  </React.Fragment> : <React.Fragment>\r\n                    <Button type=\"default\" onClick={this.showAddForm} style={{marginRight: 5}}>\r\n                      <FormattedMessage {...messages.addPeople}/>\r\n                    </Button>\r\n                    <Button type=\"default\" onClick={this.onBatchShow} style={{marginRight: 5}}>\r\n                      <FormattedMessage {...messages.batchAdd}/>\r\n                    </Button>\r\n                    <Button onClick={() =>this.toggleBatchDelete(true)} >\r\n                      <FormattedMessage {...messages.batchDelete}/>\r\n                    </Button>\r\n                  </React.Fragment>}\r\n                </React.Fragment>\r\n              }\r\n              style={{ marginBottom: 5 }}\r\n          />\r\n\r\n            <StandardTable\r\n              rowKey=\"people_id\"\r\n              selectedRows={selectedRows}\r\n              selectable={this.state.batchDeleteMode}\r\n              showAlert={false}\r\n              pagination={pagination}\r\n              loading={loading}\r\n              dataList={peoples}\r\n              columns={this.columns}\r\n              onSelectRow={this.handleSelectRows}\r\n              onChange={this.handleStandardTableChange}\r\n            />\r\n          </div>\r\n        </Card>\r\n\r\n        <EditForm\r\n          wrappedComponentRef={(formRef) => this.saveFormRef(formRef, 'editFormRef')}\r\n          visible={visible}\r\n          onCancel={() => this.handleModal('visible', false)}\r\n          onCreate={this.handleCreate}\r\n          formData={formData}\r\n          confirmLoading={confirmLoading}\r\n        />\r\n        \r\n        <BatchForm\r\n          wrappedComponentRef={this.saveBatchFormRef}\r\n          visible={this.state.showBatch}\r\n          onCancel={() => this.handleModal('showBatch', false)}\r\n          onCreate={this.handleBatchCreate}\r\n          formData={this.state.batchFormData}\r\n          key={this.state.batchKey}\r\n          confirmLoading={confirmLoading}\r\n        />\r\n\r\n       \r\n\r\n        <ImageViewer imageUrl={this.state.imageViewUrl} isOpen={this.state.isShowImage} onClose={this.closeImage}></ImageViewer>\r\n\r\n          <VisitorList  \r\n            visible={this.state.isVisitorListVisible}\r\n            onCancel={() => this.handleModal('isVisitorListVisible', false)}\r\n            dataList={this.state.viewListDataSource} />\r\n\r\n          {/* <EquipmentList\r\n            visible={this.state.isEquipmentListVisible}\r\n            onCancel={() => this.handleModal('isEquipmentListVisible', false)}\r\n            dataList={this.state.viewListDataSource} /> */}\r\n\r\n\r\n          <BindEquipment \r\n            visible={this.state.isSelectVisible}\r\n            onCancel={() => this.handleModal('isSelectVisible', false)}\r\n            uuid={this.state.uuid}\r\n            peopleId={this.state.selectedPeopleId}\r\n          />\r\n\r\n          <ViewForm\r\n            visible={this.state.showView}\r\n            onCancel={() => this.handleModal('showView', false)}\r\n            formData={this.state.formData}\r\n          /> \r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(Form.create()(PersonnelManage));\r\n"],"sourceRoot":""}