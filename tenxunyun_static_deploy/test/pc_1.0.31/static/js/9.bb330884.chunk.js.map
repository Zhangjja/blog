{"version":3,"sources":["utils/utils.js","utils/maxLength.js","components/ListHeader/index.js","components/PhotoBox/index.js","components/SelectAccount/index.js","components/StandardTable/index.js","components/ImageViewer/index.js","components/ListHeader/index.module.css","components/StandardTable/index.module.scss","components/ImageViewer/index.module.css","components/PhotoBox/index.module.scss","components/UFormRow/index.js","components/UFormRow/index.module.scss","pages/CommonPlatform/Record/index.module.scss","pages/CommonPlatform/Record/PersonnelRecord/ViewForm.js","api/record.js","pages/CommonPlatform/Record/PersonnelRecord/index.js","pages/CommonPlatform/Record/VisitorRecord/ViewForm.js","pages/CommonPlatform/Record/VisitorRecord/index.js","pages/CommonPlatform/Record/index.js"],"names":["__webpack_require__","d","__webpack_exports__","parseDate","get_date","getPhotoUrl","fixUndefinedData","getDow","getUUID","base64Prefix","defaultPageCount","paginationOption","IP_REG","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","n","_address__WEBPACK_IMPORTED_MODULE_2__","strDate","moment","format","photos","getStorageServerAddress","Array","photo_url","obj","Object","keys","reduce","res","item","Date","now","Math","random","dataUrl","split","length","concat","showSizeChanger","showQuickJumper","defaultPageSize","maxLength","userName","deviceName","deviceToken","IP","port","devicePosition","accountName","organization","mark","versionNumber","description","versionName","idcardNumber","_ref","title","Title","buttonText","doAction","buttonDisabled","buttonHide","hasDivider","customButton","buttonType","rest","D_items_clound_plus_face_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","btnType","button","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","antd__WEBPACK_IMPORTED_MODULE_2__","type","onClick","disabled","assign","style","marginBottom","className","styles","total_header","antd__WEBPACK_IMPORTED_MODULE_3__","mbt10_5","_ref$clsName","clsName","photo","_ref$width","width","_ref$height","height","_ref$objectFit","objectFit","container","src","alt","img","onLoad","e","event","target","containerAspectRatio","naturalWidth","naturalHeight","loadImg","messages","Select","Option","defineMessages","all","id","defaultMessage","failedToGetData","select","SelectAccount","props","_this","D_items_clound_plus_face_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","D_items_clound_plus_face_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","D_items_clound_plus_face_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","loadSubAccounts","selectedOptions","targetOption","parent_id","account_id","loading","getAccountList","then","data","accounts","map","it","children","setState","acountOptions","D_items_clound_plus_face_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","state","triggerChange","value","option","onChange","initCascaderOptions","loginAccount","useInfo","loadState","root","account_name","isLeaf","role","role_id","sub","catch","err","message","error","_this2","page_size","Promise","resolve","reject","getAccounts","response","code","msg","intl","formatMessage","react__WEBPACK_IMPORTED_MODULE_6___default","antd__WEBPACK_IMPORTED_MODULE_9__","options","loadData","changeOnSelect","placeholder","fieldNames","label","React","Component","injectIntl","initTotalList","columns","totalList","forEach","column","needTotal","push","D_items_clound_plus_face_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","total","clear","selected","items","StandardTable","D_items_clound_plus_face_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","D_items_clound_plus_face_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_items_clound_plus_face_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","handleRowSelectChange","selectedRowKeys","selectedRows","needTotalList","sum","val","parseFloat","dataIndex","onSelectRow","handleTableChange","pagination","filters","sorter","cleanSelectedKeys","_this$state","_this$props","dataList","rowKey","selectable","showAlert","paginationProps","showTotal","rowSelection","getCheckboxProps","record","standardTable","tableAlert","antd__WEBPACK_IMPORTED_MODULE_7__","react__WEBPACK_IMPORTED_MODULE_6__","react_intl__WEBPACK_IMPORTED_MODULE_9__","fontWeight","marginLeft","key","render","showIcon","antd__WEBPACK_IMPORTED_MODULE_8__","dataSource","nextProps","PureComponent","defaultProps","loadFail","fixWrap","position","top","left","transform","ImageViewer","photoIndex","isOpen","imageUrl","onClose","isLoading","imagePadding","react__WEBPACK_IMPORTED_MODULE_5___default","react_image_lightbox__WEBPACK_IMPORTED_MODULE_8__","mainSrc","onCloseRequest","enableZoom","imageLoadErrorMessage","react_intl__WEBPACK_IMPORTED_MODULE_6__","wrapperClassName","imageViewer","imageTitle","module","exports","UFormRow","labelSpan","content","labelPosition","contentSpan","right","formItem","D_items_clound_plus_face_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","span","tableList","tableListOperator","tableListForm","submitButtons","operatorLink","operatorWrap","wordBreak","personnelName","personnelIdentifier","sourceAccount","recognizeTime","deviceID","deviceIP","devicePort","mobilePhone","ViewForm","visible","onCancel","formData","list","recognition_time","people_name","telephone","idcard_number","people_id","equipment_name","equipment_id","ip","react_default","modal","footer","destroyOnClose","display","alignItems","background","PhotoBox","search_image","margin","score","toFixed","image","locale","borderBottom","apis","export","getRecordInfo","fetch","get","params","record_id","getRecordList","deleteRecords","ids","delete","record_ids","exportRecords","FormItem","Form","Item","RangePicker","DatePicker","timeRange","search","reset","personnelPhoto","capturePhoto","confirmDelete","cancel","batchDelete","batchDeleteConfirm","batchDeleteSuccess","batchDeleteError","operate","detail","recognizeRecord","recognizeDetail","exportSuccess","exportError","close","clickToDownload","exportWaiting","PersonnelRecord","index_es","text","Fragment","showImage","thumbnail","href","showViewModal","confirmLoading","locked","showView","records","isShowImage","imageViewUrl","search_form","page_number","batchDeleteMode","exporting","filepath","onAccountChange","form","setFieldsValue","getInitAccountIds","userInfo","accountId","parentId","Number","handleModal","stateProps","flag","defineProperty","toggleBatchDelete","isDeleteMode","onDeleteAll","success","_loadAsyncData","handleStandardTableChange","filtersArg","pageSize","current","handleFormReset","resetFields","objectSpread","handleSearch","preventDefault","validateFields","fieldsValue","date","begin","valueOf","end","searchData","url","closeImage","handleSelectRows","rows","onExport","exportExcel","cb","Modal","info","okText","paddingTop","onOk","console","log","initAccountIds","slice","account_ids","cancelApiRequsets","_this3","_this$state2","_this$state2$search_f","total_number","finally","getFieldDecorator","es_form","onSubmit","layout","row","gutter","md","lg","xl","col","sm","input","disabledDate","isAfter","es_button","htmlType","_this4","_this$state3","exportMessage","paddingBottom","es_alert","renderSimpleForm","ListHeader","marginRight","popconfirm","onConfirm","PersonnelRecord_ViewForm","create","visitReason","reasons_for_access","visitorPhoto","VisitorRecord","VisitorRecord_FormItem","VisitorRecord_RangePicker","VisitorRecord_ViewForm","TabPane","Tabs","personnel","visitor","Record","personnelKey","visitorKey","onTabChange","curr","card","bordered","tabs","defaultActiveKey","animated","tab","Record_PersonnelRecord","Record_VisitorRecord"],"mappings":"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","file":"static/js/9.bb330884.chunk.js","sourcesContent":["import moment from 'moment';\r\nimport qs from 'querystringify';\r\nimport { getStorageServerAddress } from './address'\r\n\r\nexport const numbers = length =>\r\n  Array.apply(null, { length: length }).map(Number.call, Number);\r\n\r\n// type: \"today\",\"three\",\"week\"\r\nexport const getDate = type => {\r\n  switch (type) {\r\n    case 'today':\r\n      let today = [\r\n        moment()\r\n          .startOf('day')\r\n          .format('YYYY-MM-DD HH:mm:ss'),\r\n        moment()\r\n          .endOf('day')\r\n          .format('YYYY-MM-DD HH:mm:ss')\r\n      ];\r\n      return today;\r\n    case 'three':\r\n      let three = [\r\n        moment()\r\n          .subtract(2, 'day')\r\n          .startOf('day')\r\n          .format('YYYY-MM-DD HH:mm:ss'),\r\n        moment()\r\n          .endOf('day')\r\n          .format('YYYY-MM-DD HH:mm:ss')\r\n      ];\r\n      return three;\r\n    case 'week':\r\n      let week = [\r\n        moment()\r\n          .subtract(6, 'day')\r\n          .startOf('day')\r\n          .format('YYYY-MM-DD HH:mm:ss'),\r\n        moment()\r\n          .endOf('day')\r\n          .format('YYYY-MM-DD HH:mm:ss')\r\n      ];\r\n      return week;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const parseDate = strDate => {\r\n  if (strDate) {\r\n    return moment(strDate).format('YYYY-MM-DD HH:mm:ss');\r\n  }\r\n\r\n  return null;\r\n\r\n};\r\n\r\n/**\r\n * 时间字符串转moment\r\n * @param {*} strDateTime \r\n */\r\nexport const dateTimeToMoment = strDateTime => {\r\n  if (strDateTime) {\r\n    return moment(strDateTime)\r\n  }\r\n}\r\n\r\nexport const parseDateTime = strDate => {\r\n  if (strDate) {\r\n    return moment(strDate, 'YYYY-MM-DD HH:mm:ss').valueOf()\r\n  }\r\n\r\n  return null;\r\n\r\n};\r\n\r\nexport const get_date = strDate => {\r\n  if (strDate) {\r\n    return moment(strDate).format('YYYY-MM-DD');\r\n  }\r\n\r\n  return null;\r\n\r\n};\r\n\r\nexport const get_time = strDate => {\r\n  if (strDate) {\r\n    return moment(strDate).format('HH:mm:ss');\r\n  }\r\n\r\n  return null;\r\n\r\n};\r\n\r\nexport const conbineNames = (arr, keys, keyProp, valueProp) => {\r\n  let conbinedNames = arr.reduce((allNames, current) => {\r\n\r\n    keys.forEach(key => {\r\n      if (current[keyProp] === key) {\r\n        allNames += ',' + current[valueProp];\r\n      }\r\n    });\r\n\r\n    return allNames;\r\n  }, '');\r\n\r\n  if (conbinedNames.length > 0) {\r\n    conbinedNames = conbinedNames.substring(1)\r\n  }\r\n\r\n  return conbinedNames;\r\n};\r\n\r\nexport function getPhotoUrl(photos) {\r\n  if (photos) {\r\n    let baseUrl = getStorageServerAddress()\r\n    let photoObj = {}\r\n    if (photos instanceof Array) {\r\n      photoObj = photos[0] || {}\r\n    } else {\r\n      photoObj = photos || {}\r\n    }\r\n\r\n    let fullName = baseUrl + \"/\" + photoObj.photo_url\r\n    return fullName;\r\n\r\n  }\r\n\r\n  return \"\"\r\n\r\n}\r\n\r\n/**\r\n *非必填项未填，则删除该字段\r\n *\r\n * @export\r\n * @param {Object} obj 要处理的表单\r\n * @returns 整理后的表单\r\n */\r\nexport function fixUndefinedData(obj) {\r\n  const keys = Object.keys(obj)\r\n  return keys.reduce((res, item) => {\r\n    if (typeof obj[item] !== 'undefined') {\r\n      res[item] = obj[item]\r\n    }\r\n    return res\r\n  }, {})\r\n}\r\n\r\nexport function getValueFromQuery(querystring, key) {\r\n  if (!(querystring && key)) {\r\n    return ''\r\n  }\r\n  return qs.parse(querystring)[key]\r\n}\r\n\r\nexport function parseQuery(querystring) {\r\n  if (!querystring) {\r\n    return {}\r\n  }\r\n  return qs.parse(querystring)\r\n}\r\n\r\nexport function getDow() {\r\n  return moment(Date.now())\r\n}\r\n\r\nexport function getUUID() {\r\n  return Date.now() + Math.random()\r\n}\r\n\r\nexport function base64Prefix(dataUrl) {\r\n  if (dataUrl.split(',').length === 1) {\r\n    dataUrl = `data:image/jpg;base64,${dataUrl}`\r\n  }\r\n  return dataUrl\r\n}\r\n\r\n// 分页\r\nexport const pageSizeOptions = ['30', '50', '80', '100']\r\n\r\nexport const defaultPageCount = 30\r\n\r\nexport const paginationOption = {\r\n  showSizeChanger: true,\r\n  showQuickJumper: true,\r\n  defaultPageSize: defaultPageCount,\r\n}\r\n\r\n\r\n// 正则\r\n\r\nexport const IDCARD_REG = /^[1-9]\\d{7}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}$|^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}([0-9]|X)$/i\r\n\r\nexport const PHONE_REG = /^\\d{6,20}$/\r\n\r\nexport const IP_REG = /(?=(\\b|\\D))(((\\d{1,2})|(1\\d{1,2})|(2[0-4]\\d)|(25[0-5]))\\.){3}((\\d{1,2})|(1\\d{1,2})|(2[0-4]\\d)|(25[0-5]))(?=(\\b|\\D))/\r\n\r\nexport const URL_REG = /(https?):\\/\\/[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[-A-Za-z0-9+&@#/%=~_|]/i\r\n\r\nexport const MAC_REG = /^[A-F0-9]{2}(-[A-F0-9]{2}){5}$|^[A-F0-9]{2}(:[A-F0-9]{2}){5}$/i\r\n\r\nexport const IPPORT_REG = /(?=(\\b|\\D))(((\\d{1,2})|(1\\d{1,2})|(2[0-4]\\d)|(25[0-5]))\\.){3}((\\d{1,2})|(1\\d{1,2})|(2[0-4]\\d)|(25[0-5]))(?=(\\b|\\D)):\\d{1,5}/\r\n\r\nexport const LETTER_NUM_REG = /^[0-9a-z]+$/i","const maxLength = {\r\n  userName: 30,\r\n  deviceName: 50,\r\n  deviceToken: 50,\r\n  IP: 15,\r\n  port: 5,\r\n  devicePosition: 100,\r\n  accountName: 30,\r\n  organization: 50,\r\n  mark: 50,\r\n  versionNumber: 20,\r\n  description: 50,\r\n  versionName: 20,\r\n  idcardNumber: 30,\r\n}\r\n\r\nexport default maxLength","import React from 'react';\r\nimport { Button, Divider } from 'antd';\r\nimport styles from './index.module.css';\r\n\r\nexport default ({title,Title, buttonText,doAction, buttonDisabled,buttonHide,hasDivider,customButton,buttonType, ...rest}) => {\r\n  let btnType = buttonType || 'primary'\r\n  const button = (customButton && (<div>{customButton}</div>)) ||\r\n    <Button type={btnType} onClick={doAction} disabled={buttonDisabled}>{buttonText}</Button>\r\n  return (\r\n  <div style={{ marginBottom: 5 }} {...rest}>\r\n    <header className={styles.total_header}>\r\n      <div>{Title ? <Title /> : title}</div>\r\n      {(!buttonHide) && button}\r\n    </header>\r\n    {hasDivider && <Divider className={styles.mbt10_5} />}\r\n  </div>\r\n)};\r\n","import React from 'react';\r\nimport styles from './index.module.scss';\r\n\r\nconst loadImg = (event, objectFit, width, height) => {\r\n  let target = event.target;\r\n  let containerAspectRatio = width / height;\r\n  let imgAspectRatio = target.naturalWidth / target.naturalHeight;\r\n\r\n  if (imgAspectRatio > containerAspectRatio) {\r\n    if (objectFit === 'cover') {\r\n      target.style.height = '100%';\r\n      target.style.width = 'auto';\r\n    } else {\r\n      // contain\r\n      target.style.width = '100%';\r\n      target.style.height = 'auto';\r\n    }\r\n  } else {\r\n    if (objectFit === 'cover') {\r\n      target.style.width = '100%';\r\n      target.style.height = 'auto';\r\n    } else {\r\n      // contain\r\n      target.style.height = '100%';\r\n      target.style.width = 'auto';\r\n    }\r\n  }\r\n};\r\n\r\nexport default ({\r\n  clsName = '',\r\n  photo,\r\n  width = 60,\r\n  height = 80,\r\n  objectFit = 'cover',\r\n  ...rest\r\n}) => (\r\n  <div\r\n    className={`${clsName} ${styles.container}`}\r\n    style={{ width, height }}\r\n    {...rest}\r\n  >\r\n    <img\r\n      src={photo}\r\n      alt=\"\"\r\n      className={styles.img}\r\n      onLoad={e => loadImg(e, objectFit, width, height)}\r\n    />\r\n  </div>\r\n);\r\n","\r\nimport React from 'react';\r\nimport { message, Select, Cascader } from 'antd';\r\nimport { injectIntl, FormattedMessage, defineMessages } from 'react-intl';\r\nimport { loadState } from '../../utils/localStorage';\r\nimport {getAccounts} from '../../api/account';\r\n\r\nconst Option = Select.Option;\r\n\r\nconst messages = defineMessages({\r\n  all: {\r\n    id: 'common.all',\r\n    defaultMessage: '全部'\r\n  },\r\n  failedToGetData: {\r\n    id: 'common.error.failedToGetData',\r\n    defaultMessage: '获取数据失败!'\r\n  },\r\n  select: {\r\n    id: 'common.select',\r\n    defaultMessage: '请选择'\r\n  }\r\n});\r\n\r\nclass SelectAccount extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      acountOptions: [],\r\n    };\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    const useInfo = loadState('userInfo', true) || {}\r\n    const loginAccount = useInfo.account_id;\r\n    // 如果初始值是空，触发change，赋初值为登录用户\r\n    this.initCascaderOptions(loginAccount);\r\n  }\r\n\r\n\r\n  loadSubAccounts = (selectedOptions) => {\r\n    const targetOption = selectedOptions[selectedOptions.length - 1];\r\n    const parent_id = targetOption.account_id\r\n    targetOption.loading = true;\r\n    this.getAccountList(parent_id).then((data) => {\r\n      targetOption.loading = false;\r\n      let accounts = data.accounts;\r\n      accounts = accounts.map((it) => {\r\n        return it;\r\n      })\r\n      targetOption.children = accounts;\r\n      this.setState({\r\n        acountOptions: [...this.state.acountOptions],\r\n      });\r\n    })\r\n  }\r\n\r\n  getAccountList(id) {\r\n    const data = {\r\n      account_id: id,\r\n      page_size: 99999,\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      getAccounts(data).then((response) => {\r\n        if (response.code === 1000) {\r\n          resolve(response.data)\r\n        } else {\r\n          reject(response.msg || this.props.intl.formatMessage(messages.failedToGetData));\r\n        }\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n  triggerChange = (value, option)  => {\r\n    const onChange = this.props.onChange;\r\n    if (onChange) {\r\n      onChange(value, option);\r\n    }\r\n  }\r\n\r\n  initCascaderOptions = (loginAccount) => {\r\n    const useInfo = loadState('userInfo', true) || {}\r\n    let root = {\r\n      account_name: useInfo.account_name,\r\n      account_id: useInfo.account_id,\r\n      isLeaf: useInfo.role.role_id === 3,\r\n      children: [],\r\n    }\r\n\r\n    this.getAccountList().then((data) => {\r\n      let accounts = data.accounts || []\r\n      accounts = accounts.map((it) => {\r\n        // isLeaf : 是否是叶子\r\n        it.isLeaf = it.role.role_id === 3\r\n        if (this.props.value.length === 3 && it.account_id === this.props.value[1]) {\r\n          this.getAccountList(it.account_id).then(data => {\r\n            it.children = data.accounts.map((sub) => {\r\n              sub.isLeaf = true;\r\n              return sub;\r\n            })\r\n            this.setState({\r\n              acountOptions: [root],\r\n            })\r\n          })\r\n        } \r\n        return it\r\n      })\r\n      root.children = accounts;\r\n      this.setState({\r\n        acountOptions: [root],\r\n      })\r\n    }).catch(err => {\r\n      message.error(err)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n    <Cascader\r\n    value={this.props.value || []}\r\n    options={this.state.acountOptions}\r\n    style={this.props.style}\r\n    onChange={this.triggerChange}\r\n    loadData={this.loadSubAccounts}\r\n    changeOnSelect\r\n    placeholder={this.props.intl.formatMessage(messages.select)}\r\n    fieldNames={{ label: 'account_name', value: 'account_id', children: 'children' }}/>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(SelectAccount);\r\n","import React, { PureComponent, Fragment } from 'react';\r\nimport { Table, Alert } from 'antd';\r\nimport { injectIntl, FormattedMessage, defineMessages } from 'react-intl';\r\nimport styles from './index.module.scss';\r\n\r\nfunction initTotalList(columns) {\r\n  const totalList = [];\r\n  columns.forEach(column => {\r\n    if (column.needTotal) {\r\n      totalList.push({ ...column, total: 0 });\r\n    }\r\n  });\r\n  return totalList;\r\n}\r\n\r\nconst messages = defineMessages({\r\n  total: {\r\n    id: 'common.total',\r\n    defaultMessage: '总计',\r\n  },\r\n  clear: {\r\n    id: 'common.clear',\r\n    defaultMessage: '清空',\r\n  },\r\n  selected: {\r\n    id: 'common.selected',\r\n    defaultMessage: '请选择',\r\n  },\r\n  items: {\r\n    id: 'common.items',\r\n    defaultMessage: '项',\r\n  }\r\n});\r\n\r\nclass StandardTable extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    const { columns } = props;\r\n    const needTotalList = initTotalList(columns);\r\n\r\n    this.state = {\r\n      selectedRowKeys: [],\r\n      needTotalList,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps) {\r\n    // clean state\r\n    if ((nextProps.selectedRows || []).length === 0) {\r\n      const needTotalList = initTotalList(nextProps.columns);\r\n      return {\r\n        selectedRowKeys: [],\r\n        needTotalList,\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  handleRowSelectChange = (selectedRowKeys, selectedRows) => {\r\n    let { needTotalList } = this.state;\r\n    needTotalList = needTotalList.map(item => ({\r\n      ...item,\r\n      total: selectedRows.reduce((sum, val) => sum + parseFloat(val[item.dataIndex], 10), 0),\r\n    }));\r\n    const { onSelectRow } = this.props;\r\n    if (onSelectRow) {\r\n      onSelectRow(selectedRows);\r\n    }\r\n\r\n    this.setState({ selectedRowKeys, needTotalList });\r\n  };\r\n\r\n  handleTableChange = (pagination, filters, sorter) => {\r\n    const { onChange } = this.props;\r\n    if (onChange) {\r\n      onChange(pagination, filters, sorter);\r\n    }\r\n  };\r\n\r\n  cleanSelectedKeys = () => {\r\n    this.handleRowSelectChange([], []);\r\n  };\r\n\r\n  render() {\r\n    const { selectedRowKeys, needTotalList } = this.state;\r\n    const {\r\n      dataList,\r\n      pagination,\r\n      loading,\r\n      columns,\r\n      rowKey,\r\n      selectable,\r\n      showAlert,\r\n    } = this.props;\r\n\r\n    const paginationProps = {\r\n      showSizeChanger: true,\r\n      showQuickJumper: true,\r\n      showTotal: total => `${this.props.intl.formatMessage(messages.total)} ${total} ${this.props.intl.formatMessage(messages.items)}`,\r\n      ...pagination,\r\n    };\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.handleRowSelectChange,\r\n      getCheckboxProps: record => ({\r\n        disabled: record.disabled,\r\n      }),\r\n    };\r\n\r\n    return (\r\n      <div className={styles.standardTable}>\r\n        {selectable && showAlert && <div className={styles.tableAlert}>\r\n          <Alert\r\n            message={\r\n              <Fragment>\r\n                <FormattedMessage {...messages.selected} /> <a style={{ fontWeight: 600 }}>{selectedRowKeys.length}</a> <FormattedMessage {...messages.items} />&nbsp;&nbsp;\r\n                {needTotalList.map(item => (\r\n                  <span style={{ marginLeft: 8 }} key={item.dataIndex}>\r\n                    {item.title}\r\n                    <FormattedMessage {...messages.total} />&nbsp;\r\n                    <span style={{ fontWeight: 600 }}>\r\n                      {item.render ? item.render(item.total) : item.total}\r\n                    </span>\r\n                  </span>\r\n                ))}\r\n                <a onClick={this.cleanSelectedKeys} style={{ marginLeft: 24 }}>\r\n                <FormattedMessage {...messages.clear} />\r\n                </a>\r\n              </Fragment>\r\n            }\r\n            type=\"info\"\r\n            showIcon\r\n          />\r\n        </div>}\r\n        <Table\r\n          loading={loading}\r\n          rowKey={rowKey || 'key'}\r\n          rowSelection={selectable ? rowSelection : null}\r\n          dataSource={dataList}\r\n          columns={columns}\r\n          pagination={paginationProps}\r\n          onChange={this.handleTableChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nStandardTable.defaultProps = {\r\n  selectable: true,\r\n  showAlert: true,\r\n}\r\n\r\nexport default injectIntl(StandardTable);\r\n","import React, {Component} from 'react';\r\nimport { injectIntl, FormattedMessage, defineMessages } from 'react-intl';\r\nimport {Spin} from 'antd'\r\nimport Lightbox from 'react-image-lightbox'\r\nimport 'react-image-lightbox/style.css';\r\n\r\nimport styles from './index.module.css';\r\n\r\nconst messages = defineMessages({\r\n  loadFail: {\r\n    id: 'component.ImageViewer.loadFail',\r\n    defaultMessage: '图片加载失败!'\r\n  },\r\n});\r\n\r\nconst fixWrap = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)'\r\n}\r\n\r\nclass ImageViewer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      photoIndex: 0,\r\n    };\r\n  }\r\n\r\n render() {\r\n  const {isOpen, imageUrl, onClose, isLoading, imagePadding} = this.props\r\n   return (\r\n    <div>\r\n      {isOpen && <div>\r\n        {imageUrl && (!isLoading) &&(<Lightbox\r\n          mainSrc={imageUrl}\r\n          onCloseRequest={onClose}\r\n          enableZoom={false}\r\n          imageLoadErrorMessage={<FormattedMessage {...messages.loadFail} />}\r\n          wrapperClassName={styles.imageViewer}\r\n          imagePadding={imagePadding}\r\n          imageTitle=\"\" />)}\r\n        {isLoading && <Spin style={fixWrap}/> }\r\n      </div>}\r\n    </div>\r\n   )\r\n }\r\n}\r\n\r\nImageViewer.defaultProps = {\r\n  imagePadding: 100\r\n}\r\n\r\nexport default injectIntl(ImageViewer)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mbt10_5\":\"ListHeader_mbt10_5__3iesS\",\"total_header\":\"ListHeader_total_header__itbu3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"standardTable\":\"StandardTable_standardTable__37lgC\",\"tableAlert\":\"StandardTable_tableAlert__3mUk-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageViewer\":\"ImageViewer_imageViewer__1C2gj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PhotoBox_container__1DsXi\",\"img\":\"PhotoBox_img__2P6Af\"};","import React from 'react';\r\nimport { Col, Row } from 'antd';\r\n\r\nimport styles from './index.module.scss';\r\n\r\nclass UFormRow extends React.Component {\r\n  render() {\r\n    const {labelSpan, title, content, data, labelPosition,style} = this.props\r\n\r\n    const contentSpan = {\r\n      top: 24,\r\n      right: 24-labelSpan,\r\n      left: ''\r\n    }[labelPosition]\r\n\r\n    return (\r\n      <Row className={styles.formItem} style={{...style}}>\r\n        <Col span={labelSpan} className={styles[labelPosition]}>{data.title || title}</Col>\r\n        <Col span={contentSpan}>{data.content || content}</Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n\r\nUFormRow.defaultProps = {\r\n  data: {},\r\n  labelSpan: 8,\r\n  title: '',\r\n  content: '',\r\n  labelPosition: 'left'\r\n}\r\n\r\nexport default UFormRow","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formItem\":\"UFormRow_formItem__1weu_\",\"right\":\"UFormRow_right__2MWFF\",\"left\":\"UFormRow_left__lE1I2\",\"top\":\"UFormRow_top__39LUh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableList\":\"Record_tableList__1rBTl\",\"tableListOperator\":\"Record_tableListOperator__34Uej\",\"tableListForm\":\"Record_tableListForm__38euT\",\"submitButtons\":\"Record_submitButtons__23AW6\",\"operatorLink\":\"Record_operatorLink__31TKg\",\"operatorWrap\":\"Record_operatorWrap__j63zj\",\"wordBreak\":\"Record_wordBreak__20oYm\"};","import React from 'react';\r\nimport { Modal } from 'antd';\r\n\r\nimport PhotoBox from '../../../../components/PhotoBox';\r\nimport UFormRow from '../../../../components/UFormRow'\r\n\r\nimport { injectIntl, FormattedMessage, defineMessages } from 'react-intl';\r\n\r\nimport { parseDate } from '../../../../utils/utils'\r\n\r\nconst messages = defineMessages({\r\n  personnelName: {\r\n    id: 'personnel.name',\r\n    defaultMessage: '姓名',\r\n  },\r\n  personnelIdentifier: {\r\n    id: 'personnel.personnelIdentifier',\r\n    defaultMessage: '人员编号'\r\n  },\r\n  sourceAccount: {\r\n    id: 'account.sourceAccount',\r\n    defaultMessage: '所属账户'\r\n  },\r\n  recognizeTime: {\r\n    id: 'recognize.time',\r\n    defaultMessage: '识别时间',\r\n  },\r\n  deviceName: {\r\n    id: 'device.deviceName',\r\n    defaultMessage: '设备名称',\r\n  },\r\n  deviceID: {\r\n    id: 'device.deviceID',\r\n    defaultMessage: '设备ID',\r\n  },\r\n  deviceIP: {\r\n    id: 'device.deviceIP',\r\n    defaultMessage: '设备IP',\r\n  },\r\n  devicePort: {\r\n    id: 'device.devicePort',\r\n    defaultMessage: '设备端口',\r\n  },\r\n  mobilePhone: {\r\n    id: 'personnel.mobilePhone',\r\n    defaultMessage: '手机',\r\n  },\r\n  idcardNumber: {\r\n    id: 'personnel.idcardNumber',\r\n    defaultMessage: '证件号',\r\n  },\r\n})\r\n\r\nclass ViewForm extends React.Component {\r\n    state = {}\r\n\r\n    render() {\r\n      const {\r\n        visible,\r\n        onCancel,\r\n        formData,\r\n      } = this.props;\r\n      \r\n      const data = formData || {};\r\n\r\n      const list = [\r\n        {\r\n          title: `${this.props.intl.formatMessage(messages.recognizeTime)}：`,\r\n          content: parseDate(data.recognition_time),\r\n        },\r\n        {\r\n          title: `${this.props.intl.formatMessage(messages.sourceAccount)}：`,\r\n          content: data.account_name,\r\n        },\r\n        {\r\n          title: `${this.props.intl.formatMessage(messages.personnelName)}：`,\r\n          content: data.people_name,\r\n        },\r\n        {\r\n          title: `${this.props.intl.formatMessage(messages.mobilePhone)}：`,\r\n          content: data.telephone,\r\n        },\r\n        {\r\n          title: `${this.props.intl.formatMessage(messages.idcardNumber)}：`,\r\n          content: data.idcard_number,\r\n        },\r\n        {\r\n          title: `${this.props.intl.formatMessage(messages.personnelIdentifier)}：`,\r\n          content: data.people_id,\r\n        },\r\n        {\r\n          title: `${this.props.intl.formatMessage(messages.deviceName)}：`,\r\n          content: data.equipment_name,\r\n        },\r\n        {\r\n          title: `${this.props.intl.formatMessage(messages.deviceID)}：`,\r\n          content: data.equipment_id,\r\n        },\r\n        {\r\n          title: `${this.props.intl.formatMessage(messages.deviceIP)}：`,\r\n          content: data.ip,\r\n        },\r\n        {\r\n          title: `${this.props.intl.formatMessage(messages.devicePort)}：`,\r\n          content: data.port,\r\n        },\r\n        ];\r\n\r\n      return (\r\n        <Modal\r\n          visible={visible}\r\n          title={data.title}\r\n          onCancel={onCancel}\r\n          width={460}\r\n          footer={null}\r\n          destroyOnClose={true}\r\n        >\r\n        <div>\r\n          <div >\r\n\r\n            <div style={{display: 'flex', marginBottom: 16, alignItems: 'center'}}>\r\n              <div style={{background: '#f8f8f8'}}>\r\n                <PhotoBox photo={data.search_image} width={130} height={130}/>\r\n              </div>\r\n              <span style={{margin: '0 10px'}}>{(data.score || 0).toFixed(2)}</span>\r\n              <div>\r\n                <div style={{background: '#f8f8f8'}}><PhotoBox photo={data.image} width={130} height={130}/></div>\r\n              </div>         \r\n            </div>\r\n\r\n          </div>\r\n          {list.map(it => (\r\n            <UFormRow \r\n              labelSpan={this.props.intl.locale === 'en' ? 8 : 5} \r\n              title={it.title} \r\n              content={it.content} \r\n              key={it.title} \r\n              labelPosition=\"right\" \r\n              style={{borderBottom: '1px solid #eee'}}/>\r\n          ))}\r\n        </div>\r\n        </Modal>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default injectIntl(ViewForm);\r\n","import fetch from '../utils/fetch'\r\n\r\nconst apis = {\r\n  list: '/api/recognition/list',\r\n  record: '/api/recognition',\r\n  export: '/api/recognition/export',\r\n}\r\n\r\nexport function getRecordInfo(id) {\r\n  return fetch.get(apis.record, {\r\n    params: {\r\n      record_id: id,\r\n    }\r\n  });\r\n}\r\n\r\nexport function getRecordList(data) {\r\n  return fetch.get(apis.list, {\r\n    params: data\r\n  });\r\n}\r\n\r\nexport function deleteRecords(ids) {\r\n  return fetch.delete(apis.record, {\r\n    data: {\r\n      record_ids: ids\r\n    }\r\n  })\r\n}\r\n\r\nexport function exportRecords(data) {\r\n  return fetch.get(apis.export, {\r\n    params: data\r\n  })\r\n}","import React, {Component} from 'react'\r\nimport { injectIntl, FormattedMessage, defineMessages } from 'react-intl';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  message,\r\n  Popconfirm,\r\n  Menu,\r\n  Dropdown,\r\n  Icon,\r\n  Select,\r\n  DatePicker,\r\n  Badge,\r\n  Modal,\r\n  Alert,\r\n} from 'antd';\r\n\r\nimport StandardTable from '../../../../components/StandardTable';\r\nimport PhotoBox from '../../../../components/PhotoBox'\r\nimport ImageViewer from '../../../../components/ImageViewer'\r\nimport ListHeader from '../../../../components/ListHeader'\r\nimport SelectAccount from '../../../../components/SelectAccount';\r\n\r\nimport ViewForm from './ViewForm'\r\n\r\nimport {\r\n  getRecordInfo,\r\n  getRecordList,\r\n  deleteRecords,\r\n  exportRecords,\r\n} from '../../../../api/record';\r\n\r\nimport { defaultPageCount, fixUndefinedData, parseDate, dateTimeToMoment,getDow, get_date} from '../../../../utils/utils';\r\nimport { cancelApiRequsets } from '../../../../utils/fetch';\r\nimport { loadState } from '../../../../utils/localStorage';\r\nimport maxLength from '../../../../utils/maxLength'\r\n\r\nimport styles from '../index.module.scss';\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nconst { RangePicker } = DatePicker;\r\n\r\n\r\nconst messages = defineMessages({\r\n  personnelName: {\r\n    id: 'personnel.name',\r\n    defaultMessage: '姓名',\r\n  },\r\n  timeRange: {\r\n    id: 'common.timeRange',\r\n    defaultMessage: '时间段'\r\n  },\r\n  deviceName: {\r\n    id: 'device.deviceName',\r\n    defaultMessage: '设备名称'\r\n  },\r\n  sourceAccount: {\r\n    id: 'account.sourceAccount',\r\n    defaultMessage: '所属账户'\r\n  },\r\n  search: {\r\n    id: 'common.search',\r\n    defaultMessage: '查询',\r\n  },\r\n  reset: {\r\n    id: 'common.reset',\r\n    defaultMessage: '重置'\r\n  },\r\n  all: {\r\n    id: 'common.all',\r\n    defaultMessage: '全部'\r\n  },\r\n  personnelPhoto: {\r\n    id: 'personnel.personnelPhoto',\r\n    defaultMessage: '人员照片',\r\n  },\r\n  capturePhoto: {\r\n    id: 'recognize.capturePhoto',\r\n    defaultMessage: '抓拍照片',\r\n  },\r\n  recognizeTime: {\r\n    id: 'recognize.time',\r\n    defaultMessage: '识别时间',\r\n  },\r\n  failedToGetData: {\r\n    id: 'common.error.failedToGetData',\r\n    defaultMessage: '获取数据失败!'\r\n  },\r\n  confirmDelete: {\r\n    id: 'common.confirmDelete',\r\n    defaultMessage: '确认删除'\r\n  },\r\n  cancel: {\r\n    id: 'common.cancel',\r\n    defaultMessage: '取消'\r\n  },\r\n  batchDelete: {\r\n    id: 'common.batchDelete',\r\n    defaultMessage: '批量删除',\r\n  },\r\n  batchDeleteConfirm: {\r\n    id: 'common.batchDelete.confirm',\r\n    defaultMessage: '确定批量删除吗?'\r\n  },\r\n  batchDeleteSuccess: {\r\n    id: 'common.batchDelete.success',\r\n    defaultMessage: '批量删除成功!'\r\n  },\r\n  batchDeleteError: {\r\n    id: 'common.batchDelete.error',\r\n    defaultMessage: '批量删除失败!'\r\n  },\r\n  operate: {\r\n    id: 'common.operate',\r\n    defaultMessage: '操作'\r\n  },\r\n  detail: {\r\n    id: 'common.detail',\r\n    defaultMessage: '详情'\r\n  },\r\n  recognizeRecord: {\r\n    id: 'menu.recognizeRecord',\r\n    defaultMessage:'识别记录'\r\n  },\r\n  export: {\r\n    id: 'common.export',\r\n    defaultMessage: '导出'\r\n  },\r\n  recognizeDetail: {\r\n    id: 'recognize.detail',\r\n    defaultMessage: '识别详情'\r\n  },\r\n  exportSuccess: {\r\n    id: 'common.export.success',\r\n    defaultMessage: '导出成功!'\r\n  },\r\n  exportError: {\r\n    id: 'common.export.error',\r\n    defaultMessage: '导出失败!'\r\n  },\r\n  close: {\r\n    id: 'common.close',\r\n    defaultMessage: '关闭'\r\n  },\r\n  clickToDownload: {\r\n    id: 'common.clickToDownload',\r\n    defaultMessage: '点击下载'\r\n  },\r\n  exportWaiting: {\r\n    id: 'common.exportWaiting',\r\n    defaultMessage: '正在导出，请稍后...'\r\n  },\r\n})\r\n\r\nclass PersonnelRecord extends Component {\r\n\r\n  columns = [\r\n    {\r\n      title: <FormattedMessage {...messages.personnelName}/>,\r\n      dataIndex: 'people_name',\r\n      render: (text, record) => (\r\n        <React.Fragment>\r\n          <span className={styles.wordBreak}>{text}</span>\r\n        </React.Fragment>\r\n      )\r\n    },\r\n    {\r\n      title: <FormattedMessage {...messages.capturePhoto}/>,\r\n      dataIndex: 'search_image',\r\n      render: (text, record) => (\r\n        <React.Fragment>\r\n          <PhotoBox photo={text} width={50} height={50} onClick={() => this.showImage(text)}/>\r\n        </React.Fragment>\r\n      )\r\n    },\r\n    {\r\n      title: <FormattedMessage {...messages.personnelPhoto}/>,\r\n      dataIndex: 'image',\r\n      render: (text, record) =>\r\n        <React.Fragment>\r\n          {record.image && <PhotoBox photo={record.thumbnail} width={50} height={50} onClick={() => {this.showImage(text)}}/>}\r\n        </React.Fragment>\r\n    },\r\n    {\r\n      title: <FormattedMessage {...messages.deviceName}/>,\r\n      dataIndex: 'equipment_name',\r\n      render: (text, record) => (\r\n        <React.Fragment>\r\n          <span className={styles.wordBreak}>{text}</span>\r\n        </React.Fragment>\r\n      )\r\n    },\r\n    {\r\n      title: <FormattedMessage {...messages.recognizeTime}/>,\r\n      dataIndex: 'recognition_time',\r\n      render: (text, record) =>\r\n        <React.Fragment>\r\n          {parseDate(text)}\r\n        </React.Fragment>\r\n    },\r\n    {\r\n      title: <FormattedMessage {...messages.sourceAccount}/>,\r\n      dataIndex: 'account_name',\r\n      render: (text, record) => (\r\n        <React.Fragment>\r\n          <span className={styles.wordBreak}>{text}</span>\r\n        </React.Fragment>\r\n      )\r\n    },\r\n    {\r\n      title: <FormattedMessage {...messages.operate}/>,\r\n      dataIndex: 'operate',\r\n      render: (text, record) => (\r\n        <React.Fragment>\r\n          <a href=\"javascript:;\" onClick={() => this.showViewModal(record)}>\r\n            <FormattedMessage {...messages.detail}/>\r\n          </a>\r\n        </React.Fragment>\r\n      )\r\n    },\r\n  ];\r\n\r\n  state = {\r\n    selectedRows: [],\r\n    loading: false,\r\n    confirmLoading: false,\r\n    locked: false,\r\n    showView: false,\r\n    records: [],\r\n    // 是否显示大图预览\r\n    isShowImage: false,\r\n    // 大图url\r\n    imageViewUrl: '',\r\n    // 表格搜索框表单\r\n    search_form: {},\r\n    total: 0,\r\n    page_number: 1,\r\n    page_size: defaultPageCount,\r\n    batchDeleteMode: false,\r\n    exporting: false,\r\n    filepath: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._loadAsyncData();\r\n    const initAccountIds = this.getInitAccountIds();\r\n    const form = this.props.form;\r\n    const accountId =initAccountIds.slice(-1)[0]\r\n    this.setState({\r\n      search_form: {\r\n        account_ids: initAccountIds,\r\n        account_id: accountId,\r\n      }\r\n    });\r\n    form.setFieldsValue({\r\n      account_ids: initAccountIds,\r\n      account_id: accountId,\r\n    }, () => {\r\n      this._loadAsyncData();\r\n    })\r\n  }\r\n\r\n  onAccountChange = (value) => {\r\n    const form = this.props.form\r\n    form.setFieldsValue({\r\n      account_id: value[value.length - 1]\r\n    })\r\n  }\r\n\r\n  getInitAccountIds = () => {\r\n    const userInfo = loadState('userInfo', true);\r\n    const role = userInfo.role;\r\n    const account_id = userInfo.account_id;\r\n    let res = [account_id];\r\n    // 当前是admin,连接中存在accountId,说明是admin查看子账号的人数/设备数\r\n    if (role === 1 && this.accountId) {\r\n      if (this.parentId) {\r\n        res.push(Number(this.parentId))\r\n      }\r\n      res.push(this.accountId)\r\n    }\r\n    return res\r\n  }\r\n\r\n\r\n  componentWillUnmount() {\r\n    cancelApiRequsets();\r\n  }\r\n\r\n  _loadAsyncData() {\r\n    this.setState({\r\n      loading: true\r\n    });\r\n\r\n    let { page_number, page_size, search_form = {} } = this.state;\r\n    let records = [];\r\n\r\n    getRecordList({ page_number, page_size, flag: 1, ...search_form })\r\n      .then(response => {\r\n        let data = response.data;\r\n        if (response.code === 1000) {\r\n          records = data.records || [];\r\n          let total = data.total_number || 0;\r\n          this.setState({\r\n            records,\r\n            total,\r\n            selectedRows: []\r\n          });\r\n        } else {\r\n          this.setState({\r\n            records: [],\r\n            selectedRows: []\r\n          });\r\n          message.error(response.msg || this.props.intl.formatMessage(messages.failedToGetData));\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      })\r\n      .finally(() => {\r\n        this.setState({\r\n          loading: false\r\n        });\r\n      });\r\n  }\r\n\r\n  handleModal = (stateProps, flag) => {\r\n    this.setState({\r\n      [stateProps]: flag\r\n    })\r\n  }\r\n\r\n  toggleBatchDelete = (isDeleteMode) => {\r\n    // 是否批量删除模式\r\n    if (!isDeleteMode) {\r\n      // 点击取消，删除已选的项\r\n      this.setState({\r\n        selectedRows: []\r\n      })\r\n    }\r\n    this.setState({\r\n      batchDeleteMode: !this.state.batchDeleteMode\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 批量删除人员\r\n   */\r\n  onDeleteAll = () => {\r\n    if (this.state.selectedRows) {\r\n      const ids = this.state.selectedRows.reduce((res, item) => {\r\n        res.push(item.id)\r\n        return res\r\n      }, [])\r\n      deleteRecords(ids).then((res) => {\r\n        if (res.code === 1000) {\r\n          message.success(this.props.intl.formatMessage(messages.batchDeleteSuccess));\r\n          this.setState({\r\n            selectedRows: []\r\n          })\r\n          this._loadAsyncData();\r\n        } else {\r\n          message.error(res.msg || this.props.intl.formatMessage(messages.batchDeleteError));\r\n        }\r\n      })\r\n      .catch(error => {\r\n        // handle error\r\n        message.error(this.props.intl.formatMessage(messages.batchDeleteError));\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 处理分页变化\r\n   */\r\n  handleStandardTableChange = (pagination, filtersArg, sorter) => {\r\n    let { page_number, page_size } = this.state;\r\n\r\n    if (page_size !== pagination.pageSize) {\r\n      // page size changed, then reset page number to 1\r\n      page_number = 1;\r\n    } else {\r\n      page_number = pagination.current;\r\n    }\r\n\r\n    page_size = pagination.pageSize;\r\n\r\n    this.setState(\r\n      {\r\n        page_number,\r\n        page_size\r\n      },\r\n      this._loadAsyncData\r\n    );\r\n  };\r\n\r\n  /**\r\n   * 重置搜索\r\n   */\r\n  handleFormReset = () => {\r\n    const { form } = this.props;\r\n    form.resetFields();\r\n    this.setState(\r\n      {\r\n        page_number: 1,\r\n        search_form: {}\r\n      },\r\n      this._loadAsyncData\r\n    );\r\n  };\r\n\r\n    /**\r\n   * 打开详情弹窗\r\n   * @param {Object} record 识别记录详情\r\n   */\r\n  showViewModal = (record) => {\r\n    const formatMessage = this.props.intl.formatMessage\r\n    if (this.state.locked) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      locked: true\r\n    })\r\n    getRecordInfo(record.id).then((res) => {\r\n      if (res.code === 1000) {\r\n        let formData = {\r\n          title: <FormattedMessage {...messages.recognizeDetail}/>,\r\n          ...res.data,\r\n        };\r\n        this.setState({ showView: true, formData });\r\n      } else {\r\n        message.error(res.msg|| formatMessage(messages.failedToGetData));\r\n      }\r\n      this.setState({\r\n        locked: false\r\n      })\r\n    }).catch(err => {\r\n      message.error(err || formatMessage(messages.failedToGetData));\r\n      this.setState({\r\n        locked: false\r\n      })\r\n    })\r\n  };\r\n\r\n  /**\r\n   * 点击搜索\r\n   * @param {Object} e 事件对象\r\n   */\r\n  handleSearch = e => {\r\n    e.preventDefault();\r\n\r\n    const { form } = this.props;\r\n\r\n    form.validateFields((err, fieldsValue) => {\r\n      if (err) return;\r\n      const date = fieldsValue.date || ['', '']\r\n      const begin = get_date((date[0] || '').valueOf())\r\n      const end = get_date((date[1] || '').valueOf())\r\n      const searchData = {\r\n        ...fieldsValue,\r\n        begin: begin ?  begin + ' 00:00:00' : '',\r\n        end: end ? end + ' 23:59:59': '',\r\n      }\r\n      this.setState(\r\n        {\r\n          page_number: 1,\r\n          search_form: searchData\r\n        },\r\n        this._loadAsyncData\r\n      );\r\n    });\r\n  };\r\n\r\n\r\n  /**\r\n   * 打开大图预览弹窗\r\n   * @param {String} url 大图Url\r\n   */\r\n  showImage = (url) => {\r\n    this.setState({\r\n      isShowImage: true,\r\n      imageViewUrl: url,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 关闭大图预览弹窗\r\n   */\r\n  closeImage = () => {\r\n    this.setState({\r\n      isShowImage: false,\r\n      imageViewUrl: '',\r\n    })\r\n  }\r\n\r\n\r\n  /**\r\n   * 处理表格选择事件\r\n   * @param {Array[Object]} 已选择的列表项\r\n   */\r\n  handleSelectRows = rows => {\r\n    this.setState({\r\n      selectedRows: rows\r\n    });\r\n  };\r\n\r\n  onExport = () => {\r\n    const { form } = this.props;\r\n\r\n    form.validateFields((err, fieldsValue) => {\r\n      if (err) return;\r\n      const date = fieldsValue.date || ['', '']\r\n      const begin = get_date((date[0] || '').valueOf())\r\n      const end = get_date((date[1] || '').valueOf())\r\n      const searchData = {\r\n        ...fieldsValue,\r\n        begin: begin ?  begin + ' 00:00:00' : '',\r\n        end: end ? end + ' 23:59:59': '',\r\n      }\r\n      this.setState(\r\n        {\r\n          search_form: searchData\r\n        }\r\n      )\r\n\r\n      const params = {...searchData, flag: 1}\r\n      this.setState({\r\n        exporting: true\r\n      });\r\n      this.exportExcel(params, () => {});\r\n    });\r\n  };\r\n\r\n  exportExcel = (params, cb) => {\r\n\r\n      exportRecords(params)\r\n        .then(response => {\r\n          // handle success\r\n          if (response.code === 1000) {\r\n            this.setState(\r\n              {\r\n                filepath: response.data,\r\n                exporting: false,\r\n              },\r\n              () => {\r\n                Modal.info({\r\n                  title: this.props.intl.formatMessage(messages.exportSuccess),\r\n                  okText: this.props.intl.formatMessage(messages.close),\r\n                  content: (\r\n                    <React.Fragment>\r\n                      <div style={{paddingTop: 10}}>\r\n                        <a href={this.state.filepath} target=\"_blank\">\r\n                        {this.props.intl.formatMessage(messages.clickToDownload)}</a>\r\n                      </div>\r\n                    </React.Fragment>\r\n                  ),\r\n                  onOk() {},\r\n                });\r\n              }\r\n            );\r\n          } else {\r\n            message.error(response.msg || this.props.intl.formatMessage(messages.exportError))\r\n          }\r\n        })\r\n        .catch(error => {\r\n          this.setState({\r\n            exporting: false\r\n          });\r\n          console.log(error);\r\n          this.props.intl.formatMessage(messages.exportError)\r\n        })\r\n        .then(() => {\r\n          cb();\r\n        });\r\n  };\r\n\r\n  renderSimpleForm() {\r\n    const {\r\n      form: { getFieldDecorator }\r\n    } = this.props;\r\n\r\n    return (\r\n      <Form onSubmit={this.handleSearch} layout=\"inline\">\r\n        <Row gutter={{ md: 8, lg: 24, xl: 48 }}>\r\n        <Col md={8} sm={24}>\r\n            <FormItem label={<FormattedMessage {...messages.personnelName}/>}>\r\n              {getFieldDecorator('people_name')(\r\n                <Input  maxLength={maxLength.userName}/>\r\n              )}\r\n            </FormItem>\r\n          </Col>\r\n          <Col md={8} sm={24}>\r\n            <FormItem label={<FormattedMessage {...messages.timeRange}/>}>\r\n            {getFieldDecorator('date')(\r\n                <RangePicker\r\n                  style={{ width: '100%' }}\r\n                  format=\"YYYY-MM-DD\"\r\n                  disabledDate={current => { return current && current.isAfter && current.isAfter(getDow())} }/>\r\n              )}\r\n            </FormItem>\r\n          </Col>\r\n          {(loadState('userInfo', true) || {}).role !== 3 && <Col md={8} sm={24}>\r\n          {getFieldDecorator('account_id')(<Input type=\"hidden\"/>)}\r\n          <FormItem label={<FormattedMessage {...messages.sourceAccount}/>}>\r\n          {getFieldDecorator('account_ids')(\r\n              <SelectAccount onChange={this.onAccountChange}/>\r\n            )}\r\n          </FormItem>\r\n          </Col>}\r\n          <Col md={8} sm={24}>\r\n            <FormItem label={<FormattedMessage {...messages.deviceName}/>}>\r\n              {getFieldDecorator('equipment_name')(\r\n                <Input  maxLength={maxLength.deviceName}/>\r\n              )}\r\n            </FormItem>\r\n          </Col>\r\n          <Col md={8} sm={24}>\r\n            <span className={styles.submitButtons}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n              <FormattedMessage {...messages.search}/>\r\n              </Button>\r\n              <Button style={{ marginLeft: 8 }} onClick={this.handleFormReset}>\r\n              <FormattedMessage {...messages.reset}/>\r\n              </Button>\r\n            </span>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      loading,\r\n      selectedRows,\r\n      records,\r\n      total,\r\n      page_number,\r\n      page_size,\r\n      exporting,\r\n      filepath,\r\n    } = this.state;\r\n\r\n    const pagination = {\r\n      current: page_number,\r\n      pageSize: page_size,\r\n      total,\r\n    };\r\n    let exportMessage = <FormattedMessage {...messages.exportWaiting}/>;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className={styles.tableList}>\r\n\r\n        { exporting && (\r\n          <div style={{paddingBottom: 10}}>\r\n              <Alert message={exportMessage} type=\"warning\" />\r\n          </div>\r\n        )}\r\n\r\n            <div className={styles.tableListForm}>\r\n              {this.renderSimpleForm()}\r\n            </div>\r\n            <div className={styles.tableListOperator}>\r\n\r\n            </div>\r\n\r\n            <ListHeader\r\n              title={<FormattedMessage {...messages.recognizeRecord}/>}\r\n              customButton={\r\n                <React.Fragment>\r\n                  {this.state.batchDeleteMode ? <React.Fragment>\r\n                    <Button onClick={() => this.toggleBatchDelete(false)} style={{marginRight: 5}}>\r\n                      <FormattedMessage {...messages.cancel}/>\r\n                    </Button>\r\n                    {selectedRows.length <= 0 ? \r\n                     <Button disabled><FormattedMessage {...messages.confirmDelete}/></Button>:\r\n                     <Popconfirm\r\n                        title={<FormattedMessage {...messages.batchDeleteConfirm}/>}\r\n                        onConfirm={() => this.onDeleteAll()}>\r\n                         <Button><FormattedMessage {...messages.confirmDelete}/></Button>\r\n                      </Popconfirm>\r\n                    }\r\n                  </React.Fragment> : <React.Fragment>\r\n                    <Button style={{marginRight: 5}} onClick={this.onExport}><FormattedMessage {...messages.export}/></Button>\r\n                    <Button onClick={() =>this.toggleBatchDelete(true)} >\r\n                      <FormattedMessage {...messages.batchDelete}/>\r\n                    </Button>\r\n                  </React.Fragment>}\r\n                </React.Fragment>\r\n              }\r\n              style={{ marginBottom: 5 }}\r\n          />\r\n\r\n            <StandardTable\r\n              rowKey=\"id\"\r\n              selectedRows={selectedRows}\r\n              pagination={pagination}\r\n              loading={loading}\r\n              showAlert={false}\r\n              selectable={this.state.batchDeleteMode}\r\n              dataList={records}\r\n              columns={this.columns}\r\n              onSelectRow={this.handleSelectRows}\r\n              onChange={this.handleStandardTableChange}\r\n            />\r\n          </div>\r\n\r\n          <ImageViewer imageUrl={this.state.imageViewUrl} isOpen={this.state.isShowImage} onClose={this.closeImage}></ImageViewer>\r\n\r\n          <ViewForm\r\n              visible={this.state.showView}\r\n              onCancel={() => this.handleModal('showView', false)}\r\n              formData={this.state.formData}\r\n            /> \r\n\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default injectIntl(Form.create()(PersonnelRecord))\r\n","import React from 'react';\r\nimport { Modal } from 'antd';\r\n\r\nimport PhotoBox from '../../../../components/PhotoBox';\r\nimport UFormRow from '../../../../components/UFormRow'\r\n\r\nimport { injectIntl, FormattedMessage, defineMessages } from 'react-intl';\r\n\r\nimport { parseDate } from '../../../../utils/utils'\r\n\r\nconst messages = defineMessages({\r\n  personnelName: {\r\n    id: 'personnel.name',\r\n    defaultMessage: '姓名',\r\n  },\r\n  sourceAccount: {\r\n    id: 'account.sourceAccount',\r\n    defaultMessage: '所属账户'\r\n  },\r\n  recognizeTime: {\r\n    id: 'recognize.time',\r\n    defaultMessage: '识别时间',\r\n  },\r\n  deviceName: {\r\n    id: 'device.deviceName',\r\n    defaultMessage: '设备名称',\r\n  },\r\n  deviceID: {\r\n    id: 'device.deviceID',\r\n    defaultMessage: '设备ID',\r\n  },\r\n  deviceIP: {\r\n    id: 'device.deviceIP',\r\n    defaultMessage: '设备IP',\r\n  },\r\n  devicePort: {\r\n    id: 'device.devicePort',\r\n    defaultMessage: '设备端口',\r\n  },\r\n  mobilePhone: {\r\n    id: 'personnel.mobilePhone',\r\n    defaultMessage: '手机',\r\n  },\r\n  visitReason: {\r\n    id: 'personnel.visitReason',\r\n    defaultMessage: '访问事由',\r\n  },\r\n})\r\n\r\nclass ViewForm extends React.Component {\r\n    state = {}\r\n\r\n    render() {\r\n      const {\r\n        visible,\r\n        onCancel,\r\n        formData,\r\n      } = this.props;\r\n      \r\n      const data = formData || {};\r\n\r\n      const list = [\r\n        {\r\n          title: `${this.props.intl.formatMessage(messages.recognizeTime)}：`,\r\n          content: parseDate(data.recognition_time),\r\n        },\r\n        {\r\n          title: `${this.props.intl.formatMessage(messages.sourceAccount)}：`,\r\n          content: data.account_name,\r\n        },\r\n        {\r\n          title: `${this.props.intl.formatMessage(messages.personnelName)}：`,\r\n          content: data.people_name,\r\n        },\r\n        {\r\n          title: `${this.props.intl.formatMessage(messages.mobilePhone)}：`,\r\n          content: data.telephone,\r\n        },\r\n        {\r\n          title: `${this.props.intl.formatMessage(messages.visitReason)}：`,\r\n          content: data.reasons_for_access,\r\n        },\r\n        {\r\n          title: `${this.props.intl.formatMessage(messages.deviceName)}：`,\r\n          content: data.equipment_name,\r\n        },\r\n        {\r\n          title: `${this.props.intl.formatMessage(messages.deviceID)}：`,\r\n          content: data.equipment_id,\r\n        },\r\n        {\r\n          title: `${this.props.intl.formatMessage(messages.deviceIP)}：`,\r\n          content: data.ip,\r\n        },\r\n        {\r\n          title: `${this.props.intl.formatMessage(messages.devicePort)}：`,\r\n          content: data.port,\r\n        },\r\n        ];\r\n\r\n      return (\r\n        <Modal\r\n          visible={visible}\r\n          title={data.title}\r\n          onCancel={onCancel}\r\n          width={460}\r\n          footer={null}\r\n          destroyOnClose={true}\r\n        >\r\n        <div>\r\n          <div >\r\n\r\n            <div style={{display: 'flex', marginBottom: 16, alignItems: 'center'}}>\r\n              <div style={{background: '#f8f8f8'}}>\r\n                <PhotoBox photo={data.search_image} width={130} height={130}/>\r\n              </div>\r\n              <span style={{margin: '0 10px'}}>{(data.score || 0).toFixed(2)}</span>\r\n              <div>\r\n                <div style={{background: '#f8f8f8'}}><PhotoBox photo={data.image} width={130} height={130}/></div>\r\n              </div>         \r\n            </div>\r\n\r\n          </div>\r\n          {list.map(it => (\r\n            <UFormRow \r\n              labelSpan={this.props.intl.locale === 'en' ? 8 : 5} \r\n              title={it.title} \r\n              content={it.content} \r\n              key={it.title} \r\n              labelPosition=\"right\" \r\n              style={{borderBottom: '1px solid #eee'}}/>\r\n          ))}\r\n        </div>\r\n        </Modal>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default injectIntl(ViewForm);\r\n","import React, {Component} from 'react'\r\nimport { injectIntl, FormattedMessage, defineMessages } from 'react-intl';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  message,\r\n  Popconfirm,\r\n  Menu,\r\n  Dropdown,\r\n  Icon,\r\n  Select,\r\n  DatePicker,\r\n  Badge,\r\n  Modal,\r\n  Alert,\r\n} from 'antd';\r\n\r\nimport StandardTable from '../../../../components/StandardTable';\r\nimport PhotoBox from '../../../../components/PhotoBox'\r\nimport ImageViewer from '../../../../components/ImageViewer'\r\nimport ListHeader from '../../../../components/ListHeader'\r\nimport SelectAccount from '../../../../components/SelectAccount';\r\n\r\nimport ViewForm from './ViewForm'\r\n\r\nimport {\r\n  getRecordInfo,\r\n  getRecordList,\r\n  deleteRecords,\r\n  exportRecords,\r\n} from '../../../../api/record';\r\n\r\nimport { defaultPageCount, fixUndefinedData, parseDate, dateTimeToMoment,getDow, get_date} from '../../../../utils/utils';\r\nimport { cancelApiRequsets } from '../../../../utils/fetch';\r\nimport { loadState } from '../../../../utils/localStorage';\r\nimport maxLength from '../../../../utils/maxLength'\r\n\r\nimport styles from '../index.module.scss';\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nconst { RangePicker } = DatePicker;\r\n\r\n\r\nconst messages = defineMessages({\r\n  personnelName: {\r\n    id: 'personnel.name',\r\n    defaultMessage: '姓名',\r\n  },\r\n  timeRange: {\r\n    id: 'common.timeRange',\r\n    defaultMessage: '时间段'\r\n  },\r\n  deviceName: {\r\n    id: 'device.deviceName',\r\n    defaultMessage: '设备名称'\r\n  },\r\n  sourceAccount: {\r\n    id: 'account.sourceAccount',\r\n    defaultMessage: '所属账户'\r\n  },\r\n  search: {\r\n    id: 'common.search',\r\n    defaultMessage: '查询',\r\n  },\r\n  reset: {\r\n    id: 'common.reset',\r\n    defaultMessage: '重置'\r\n  },\r\n  all: {\r\n    id: 'common.all',\r\n    defaultMessage: '全部'\r\n  },\r\n  visitorPhoto: {\r\n    id: 'personnel.visitorPhoto',\r\n    defaultMessage: '访客照片',\r\n  },\r\n  capturePhoto: {\r\n    id: 'recognize.capturePhoto',\r\n    defaultMessage: '抓拍照片',\r\n  },\r\n  recognizeTime: {\r\n    id: 'recognize.time',\r\n    defaultMessage: '识别时间',\r\n  },\r\n  failedToGetData: {\r\n    id: 'common.error.failedToGetData',\r\n    defaultMessage: '获取数据失败!'\r\n  },\r\n  confirmDelete: {\r\n    id: 'common.confirmDelete',\r\n    defaultMessage: '确认删除'\r\n  },\r\n  cancel: {\r\n    id: 'common.cancel',\r\n    defaultMessage: '取消'\r\n  },\r\n  batchDelete: {\r\n    id: 'common.batchDelete',\r\n    defaultMessage: '批量删除',\r\n  },\r\n  batchDeleteConfirm: {\r\n    id: 'common.batchDelete.confirm',\r\n    defaultMessage: '确定批量删除吗?'\r\n  },\r\n  batchDeleteSuccess: {\r\n    id: 'common.batchDelete.success',\r\n    defaultMessage: '批量删除成功!'\r\n  },\r\n  batchDeleteError: {\r\n    id: 'common.batchDelete.error',\r\n    defaultMessage: '批量删除失败!'\r\n  },\r\n  operate: {\r\n    id: 'common.operate',\r\n    defaultMessage: '操作'\r\n  },\r\n  detail: {\r\n    id: 'common.detail',\r\n    defaultMessage: '详情'\r\n  },\r\n  recognizeRecord: {\r\n    id: 'menu.recognizeRecord',\r\n    defaultMessage:'识别记录'\r\n  },\r\n  export: {\r\n    id: 'common.export',\r\n    defaultMessage: '导出'\r\n  },\r\n  recognizeDetail: {\r\n    id: 'recognize.detail',\r\n    defaultMessage: '识别详情'\r\n  },\r\n  exportSuccess: {\r\n    id: 'common.export.success',\r\n    defaultMessage: '导出成功!'\r\n  },\r\n  exportError: {\r\n    id: 'common.export.error',\r\n    defaultMessage: '导出失败!'\r\n  },\r\n  close: {\r\n    id: 'common.close',\r\n    defaultMessage: '关闭'\r\n  },\r\n  clickToDownload: {\r\n    id: 'common.clickToDownload',\r\n    defaultMessage: '点击下载'\r\n  },\r\n  exportWaiting: {\r\n    id: 'common.exportWaiting',\r\n    defaultMessage: '正在导出，请稍后...'\r\n  },\r\n})\r\n\r\nclass VisitorRecord extends Component {\r\n\r\n  columns = [\r\n    {\r\n      title: <FormattedMessage {...messages.personnelName}/>,\r\n      dataIndex: 'people_name',\r\n      render: (text, record) => (\r\n        <React.Fragment>\r\n          <span className={styles.wordBreak}>{text}</span>\r\n        </React.Fragment>\r\n      )\r\n    },\r\n    {\r\n      title: <FormattedMessage {...messages.capturePhoto}/>,\r\n      dataIndex: 'search_image',\r\n      render: (text, record) => (\r\n        <React.Fragment>\r\n          <PhotoBox photo={text} width={50} height={50} onClick={() => this.showImage(text)}/>\r\n        </React.Fragment>\r\n      )\r\n    },\r\n    {\r\n      title: <FormattedMessage {...messages.visitorPhoto}/>,\r\n      dataIndex: 'image',\r\n      render: (text, record) =>\r\n        <React.Fragment>\r\n          {record.image && <PhotoBox photo={record.thumbnail} width={50} height={50} onClick={() => {this.showImage(text)}}/>}\r\n        </React.Fragment>\r\n    },\r\n    {\r\n      title: <FormattedMessage {...messages.deviceName}/>,\r\n      dataIndex: 'equipment_name',\r\n      render: (text, record) => (\r\n        <React.Fragment>\r\n          <span className={styles.wordBreak}>{text}</span>\r\n        </React.Fragment>\r\n      )\r\n    },\r\n    {\r\n      title: <FormattedMessage {...messages.recognizeTime}/>,\r\n      dataIndex: 'recognition_time',\r\n      render: (text, record) =>\r\n        <React.Fragment>\r\n          {parseDate(text)}\r\n        </React.Fragment>\r\n    },\r\n    {\r\n      title: <FormattedMessage {...messages.sourceAccount}/>,\r\n      dataIndex: 'account_name',\r\n      render: (text, record) => (\r\n        <React.Fragment>\r\n          <span className={styles.wordBreak}>{text}</span>\r\n        </React.Fragment>\r\n      )\r\n    },\r\n    {\r\n      title: <FormattedMessage {...messages.operate}/>,\r\n      dataIndex: 'operate',\r\n      render: (text, record) => (\r\n        <React.Fragment>\r\n          <a href=\"javascript:;\" onClick={() => this.showViewModal(record)}>\r\n            <FormattedMessage {...messages.detail}/>\r\n          </a>\r\n        </React.Fragment>\r\n      )\r\n    },\r\n  ];\r\n\r\n  state = {\r\n    selectedRows: [],\r\n    loading: false,\r\n    confirmLoading: false,\r\n    locked: false,\r\n    showView: false,\r\n    records: [],\r\n    // 是否显示大图预览\r\n    isShowImage: false,\r\n    // 大图url\r\n    imageViewUrl: '',\r\n    // 表格搜索框表单\r\n    search_form: {},\r\n    total: 0,\r\n    page_number: 1,\r\n    page_size: defaultPageCount,\r\n    batchDeleteMode: false,\r\n    exporting: false,\r\n    filepath: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._loadAsyncData();\r\n    const initAccountIds = this.getInitAccountIds();\r\n    const form = this.props.form;\r\n    const accountId =initAccountIds.slice(-1)[0]\r\n    this.setState({\r\n      search_form: {\r\n        account_ids: initAccountIds,\r\n        account_id: accountId,\r\n      }\r\n    });\r\n    form.setFieldsValue({\r\n      account_ids: initAccountIds,\r\n      account_id: accountId,\r\n    }, () => {\r\n      this._loadAsyncData();\r\n    })\r\n  }\r\n\r\n  onAccountChange = (value) => {\r\n    const form = this.props.form\r\n    form.setFieldsValue({\r\n      account_id: value[value.length - 1]\r\n    })\r\n  }\r\n\r\n  getInitAccountIds = () => {\r\n    const userInfo = loadState('userInfo', true);\r\n    const role = userInfo.role;\r\n    const account_id = userInfo.account_id;\r\n    let res = [account_id];\r\n    // 当前是admin,连接中存在accountId,说明是admin查看子账号的人数/设备数\r\n    if (role === 1 && this.accountId) {\r\n      if (this.parentId) {\r\n        res.push(Number(this.parentId))\r\n      }\r\n      res.push(this.accountId)\r\n    }\r\n    return res\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    cancelApiRequsets();\r\n  }\r\n\r\n  _loadAsyncData() {\r\n    this.setState({\r\n      loading: true\r\n    });\r\n\r\n    let { page_number, page_size, search_form = {} } = this.state;\r\n    let records = [];\r\n\r\n    getRecordList({ page_number, page_size, flag: 2, ...search_form })\r\n      .then(response => {\r\n        let data = response.data;\r\n        if (response.code === 1000) {\r\n          records = data.records || [];\r\n          let total = data.total_number || 0;\r\n          this.setState({\r\n            records,\r\n            total,\r\n            selectedRows: []\r\n          });\r\n        } else {\r\n          this.setState({\r\n            records: [],\r\n            selectedRows: []\r\n          });\r\n          message.error(response.msg || this.props.intl.formatMessage(messages.failedToGetData));\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      })\r\n      .finally(() => {\r\n        this.setState({\r\n          loading: false\r\n        });\r\n      });\r\n  }\r\n\r\n  handleModal = (stateProps, flag) => {\r\n    this.setState({\r\n      [stateProps]: flag\r\n    })\r\n  }\r\n\r\n  toggleBatchDelete = (isDeleteMode) => {\r\n    // 是否批量删除模式\r\n    if (!isDeleteMode) {\r\n      // 点击取消，删除已选的项\r\n      this.setState({\r\n        selectedRows: []\r\n      })\r\n    }\r\n    this.setState({\r\n      batchDeleteMode: !this.state.batchDeleteMode\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 批量删除人员\r\n   */\r\n  onDeleteAll = () => {\r\n    if (this.state.selectedRows) {\r\n      const ids = this.state.selectedRows.reduce((res, item) => {\r\n        res.push(item.id)\r\n        return res\r\n      }, [])\r\n      deleteRecords(ids).then((res) => {\r\n        if (res.code === 1000) {\r\n          message.success(this.props.intl.formatMessage(messages.batchDeleteSuccess));\r\n          this.setState({\r\n            selectedRows: []\r\n          })\r\n          this._loadAsyncData();\r\n        } else {\r\n          message.error(res.msg || this.props.intl.formatMessage(messages.batchDeleteError));\r\n        }\r\n      })\r\n      .catch(error => {\r\n        // handle error\r\n        message.error(this.props.intl.formatMessage(messages.batchDeleteError));\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 处理分页变化\r\n   */\r\n  handleStandardTableChange = (pagination, filtersArg, sorter) => {\r\n    let { page_number, page_size } = this.state;\r\n\r\n    if (page_size !== pagination.pageSize) {\r\n      // page size changed, then reset page number to 1\r\n      page_number = 1;\r\n    } else {\r\n      page_number = pagination.current;\r\n    }\r\n\r\n    page_size = pagination.pageSize;\r\n\r\n    this.setState(\r\n      {\r\n        page_number,\r\n        page_size\r\n      },\r\n      this._loadAsyncData\r\n    );\r\n  };\r\n\r\n  /**\r\n   * 重置搜索\r\n   */\r\n  handleFormReset = () => {\r\n    const { form } = this.props;\r\n    form.resetFields();\r\n    this.setState(\r\n      {\r\n        page_number: 1,\r\n        search_form: {}\r\n      },\r\n      this._loadAsyncData\r\n    );\r\n  };\r\n\r\n    /**\r\n   * 打开详情弹窗\r\n   * @param {Object} record 识别记录详情\r\n   */\r\n  showViewModal = (record) => {\r\n    const formatMessage = this.props.intl.formatMessage\r\n    if (this.state.locked) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      locked: true\r\n    })\r\n    getRecordInfo(record.id).then((res) => {\r\n      if (res.code === 1000) {\r\n        let formData = {\r\n          title: <FormattedMessage {...messages.recognizeDetail}/>,\r\n          ...res.data,\r\n        };\r\n        this.setState({ showView: true, formData });\r\n      } else {\r\n        message.error(res.msg|| formatMessage(messages.failedToGetData));\r\n      }\r\n      this.setState({\r\n        locked: false\r\n      })\r\n    }).catch(err => {\r\n      message.error(err || formatMessage(messages.failedToGetData));\r\n      this.setState({\r\n        locked: false\r\n      })\r\n    })\r\n  };\r\n\r\n  /**\r\n   * 点击搜索\r\n   * @param {Object} e 事件对象\r\n   */\r\n  handleSearch = e => {\r\n    e.preventDefault();\r\n\r\n    const { form } = this.props;\r\n\r\n    form.validateFields((err, fieldsValue) => {\r\n      if (err) return;\r\n      const date = fieldsValue.date || ['', '']\r\n      const begin = get_date((date[0] || '').valueOf())\r\n      const end = get_date((date[1] || '').valueOf())\r\n      const searchData = {\r\n        ...fieldsValue,\r\n        begin: begin ?  begin + ' 00:00:00' : '',\r\n        end: end ? end + ' 23:59:59': '',\r\n      }\r\n      this.setState(\r\n        {\r\n          page_number: 1,\r\n          search_form: searchData\r\n        },\r\n        this._loadAsyncData\r\n      );\r\n    });\r\n  };\r\n\r\n\r\n  /**\r\n   * 打开大图预览弹窗\r\n   * @param {String} url 大图Url\r\n   */\r\n  showImage = (url) => {\r\n    this.setState({\r\n      isShowImage: true,\r\n      imageViewUrl: url,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 关闭大图预览弹窗\r\n   */\r\n  closeImage = () => {\r\n    this.setState({\r\n      isShowImage: false,\r\n      imageViewUrl: '',\r\n    })\r\n  }\r\n\r\n\r\n  /**\r\n   * 处理表格选择事件\r\n   * @param {Array[Object]} 已选择的列表项\r\n   */\r\n  handleSelectRows = rows => {\r\n    this.setState({\r\n      selectedRows: rows\r\n    });\r\n  };\r\n\r\n  onExport = () => {\r\n    const { form } = this.props;\r\n\r\n    form.validateFields((err, fieldsValue) => {\r\n      if (err) return;\r\n      const date = fieldsValue.date || ['', '']\r\n      const begin = get_date((date[0] || '').valueOf())\r\n      const end = get_date((date[1] || '').valueOf())\r\n      const searchData = {\r\n        ...fieldsValue,\r\n        begin: begin ?  begin + ' 00:00:00' : '',\r\n        end: end ? end + ' 23:59:59': '',\r\n      }\r\n      this.setState(\r\n        {\r\n          search_form: searchData\r\n        }\r\n      )\r\n\r\n      const params = {...searchData, flag: 2}\r\n      this.setState({\r\n        exporting: true\r\n      });\r\n      this.exportExcel(params, () => {});\r\n    });\r\n  };\r\n\r\n  exportExcel = (params, cb) => {\r\n\r\n      exportRecords(params)\r\n        .then(response => {\r\n          // handle success\r\n          if (response.code === 1000) {\r\n            this.setState(\r\n              {\r\n                filepath: response.data,\r\n                exporting: false,\r\n              },\r\n              () => {\r\n                Modal.info({\r\n                  title: this.props.intl.formatMessage(messages.exportSuccess),\r\n                  okText: this.props.intl.formatMessage(messages.close),\r\n                  content: (\r\n                    <React.Fragment>\r\n                      <div style={{paddingTop: 10}}>\r\n                        <a href={this.state.filepath} target=\"_blank\">\r\n                        {this.props.intl.formatMessage(messages.clickToDownload)}</a>\r\n                      </div>\r\n                    </React.Fragment>\r\n                  ),\r\n                  onOk() {},\r\n                });\r\n              }\r\n            );\r\n          } else {\r\n            message.error(response.msg || this.props.intl.formatMessage(messages.exportError))\r\n          }\r\n        })\r\n        .catch(error => {\r\n          this.setState({\r\n            exporting: false\r\n          });\r\n          console.log(error);\r\n          this.props.intl.formatMessage(messages.exportError)\r\n        })\r\n        .then(() => {\r\n          cb();\r\n        });\r\n  };\r\n\r\n  renderSimpleForm() {\r\n    const {\r\n      form: { getFieldDecorator }\r\n    } = this.props;\r\n\r\n    return (\r\n      <Form onSubmit={this.handleSearch} layout=\"inline\">\r\n        <Row gutter={{ md: 8, lg: 24, xl: 48 }}>\r\n        <Col md={8} sm={24}>\r\n            <FormItem label={<FormattedMessage {...messages.personnelName}/>}>\r\n              {getFieldDecorator('people_name')(\r\n                <Input  maxLength={maxLength.userName}/>\r\n              )}\r\n            </FormItem>\r\n          </Col>\r\n          <Col md={8} sm={24}>\r\n            <FormItem label={<FormattedMessage {...messages.timeRange}/>}>\r\n            {getFieldDecorator('date')(\r\n                <RangePicker\r\n                  style={{ width: '100%' }}\r\n                  format=\"YYYY-MM-DD\"\r\n                  disabledDate={current => { return current && current.isAfter && current.isAfter(getDow())} }/>\r\n              )}\r\n            </FormItem>\r\n          </Col>\r\n          {(loadState('userInfo', true) || {}).role !== 3 && <Col md={8} sm={24}>\r\n          {getFieldDecorator('account_id')(<Input type=\"hidden\"/>)}\r\n          <FormItem label={<FormattedMessage {...messages.sourceAccount}/>}>\r\n          {getFieldDecorator('account_ids')(\r\n              <SelectAccount onChange={this.onAccountChange}/>\r\n            )}\r\n          </FormItem>\r\n          </Col>}\r\n          <Col md={8} sm={24}>\r\n            <FormItem label={<FormattedMessage {...messages.deviceName}/>}>\r\n              {getFieldDecorator('equipment_name')(\r\n                <Input  maxLength={maxLength.deviceName}/>\r\n              )}\r\n            </FormItem>\r\n          </Col>\r\n          <Col md={8} sm={24}>\r\n            <span className={styles.submitButtons}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n              <FormattedMessage {...messages.search}/>\r\n              </Button>\r\n              <Button style={{ marginLeft: 8 }} onClick={this.handleFormReset}>\r\n              <FormattedMessage {...messages.reset}/>\r\n              </Button>\r\n            </span>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      loading,\r\n      selectedRows,\r\n      records,\r\n      total,\r\n      page_number,\r\n      page_size,\r\n      exporting,\r\n      filepath,\r\n    } = this.state;\r\n\r\n    const pagination = {\r\n      current: page_number,\r\n      pageSize: page_size,\r\n      total,\r\n    };\r\n    let exportMessage = <FormattedMessage {...messages.exportWaiting}/>;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className={styles.tableList}>\r\n\r\n        { exporting && (\r\n          <div style={{paddingBottom: 10}}>\r\n              <Alert message={exportMessage} type=\"warning\" />\r\n          </div>\r\n        )}\r\n\r\n            <div className={styles.tableListForm}>\r\n              {this.renderSimpleForm()}\r\n            </div>\r\n            <div className={styles.tableListOperator}>\r\n\r\n            </div>\r\n\r\n            <ListHeader\r\n              title={<FormattedMessage {...messages.recognizeRecord}/>}\r\n              customButton={\r\n                <React.Fragment>\r\n                  {this.state.batchDeleteMode ? <React.Fragment>\r\n                    <Button onClick={() => this.toggleBatchDelete(false)} style={{marginRight: 5}}>\r\n                      <FormattedMessage {...messages.cancel}/>\r\n                    </Button>\r\n                    {selectedRows.length <= 0 ? \r\n                     <Button disabled><FormattedMessage {...messages.confirmDelete}/></Button>:\r\n                     <Popconfirm\r\n                        title={<FormattedMessage {...messages.batchDeleteConfirm}/>}\r\n                        onConfirm={() => this.onDeleteAll()}>\r\n                         <Button><FormattedMessage {...messages.confirmDelete}/></Button>\r\n                      </Popconfirm>\r\n                    }\r\n                  </React.Fragment> : <React.Fragment>\r\n                    <Button style={{marginRight: 5}} onClick={this.onExport}><FormattedMessage {...messages.export}/></Button>\r\n                    <Button onClick={() =>this.toggleBatchDelete(true)} >\r\n                      <FormattedMessage {...messages.batchDelete}/>\r\n                    </Button>\r\n                  </React.Fragment>}\r\n                </React.Fragment>\r\n              }\r\n              style={{ marginBottom: 5 }}\r\n          />\r\n\r\n            <StandardTable\r\n              rowKey=\"id\"\r\n              selectedRows={selectedRows}\r\n              pagination={pagination}\r\n              loading={loading}\r\n              showAlert={false}\r\n              selectable={this.state.batchDeleteMode}\r\n              dataList={records}\r\n              columns={this.columns}\r\n              onSelectRow={this.handleSelectRows}\r\n              onChange={this.handleStandardTableChange}\r\n            />\r\n          </div>\r\n\r\n          <ImageViewer imageUrl={this.state.imageViewUrl} isOpen={this.state.isShowImage} onClose={this.closeImage}></ImageViewer>\r\n\r\n          <ViewForm\r\n              visible={this.state.showView}\r\n              onCancel={() => this.handleModal('showView', false)}\r\n              formData={this.state.formData}\r\n            /> \r\n\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default injectIntl(Form.create()(VisitorRecord))\r\n","import React, {Component} from 'react'\r\nimport {Tabs, Card} from 'antd'\r\nimport { injectIntl, FormattedMessage, defineMessages } from 'react-intl';\r\n\r\nimport PersonnelRecord from './PersonnelRecord/index'\r\nimport VisitorRecord from './VisitorRecord/index'\r\n\r\nimport {getUUID} from '../../../utils/utils'\r\n\r\nconst TabPane = Tabs.TabPane;\r\n\r\nconst messages = defineMessages({\r\n  personnel: {\r\n    id: 'personnel.personnel',\r\n    defaultMessage: '人员'\r\n  },\r\n  visitor: {\r\n    id: 'personnel.visitor',\r\n    defaultMessage: '访客'\r\n  }\r\n})\r\n\r\nclass Record extends Component {\r\n  state = {\r\n    personnelKey: getUUID(),\r\n    visitorKey: getUUID(),\r\n  }\r\n  onTabChange = (key) => {\r\n    let curr = ['personnelKey','visitorKey'][key-1]\r\n    this.setState({\r\n      [curr]: getUUID()\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <Card bordered={false}>\r\n        <Tabs defaultActiveKey=\"1\" onChange={this.onTabChange} animated={false}>\r\n          <TabPane tab={<FormattedMessage {...messages.personnel}/>} key=\"1\">\r\n            <PersonnelRecord key={this.state.personnelKey}/>\r\n          </TabPane>\r\n          <TabPane tab={<FormattedMessage {...messages.visitor}/>} key=\"2\">\r\n            <VisitorRecord  key={this.state.visitorKey}/>\r\n          </TabPane>\r\n        </Tabs>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default injectIntl(Record)"],"sourceRoot":""}