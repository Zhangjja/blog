{"version":3,"sources":["utils/utils.js","utils/maxLength.js","components/ListHeader/index.js","components/PhotoBox/index.js","components/SelectAccount/index.js","components/ImageViewer/index.js","components/ListHeader/index.module.css","components/ImageViewer/index.module.css","components/PhotoBox/index.module.scss","components/PageHeader/index.module.scss","components/TabTableModal/index.js","api/binding.js","components/PageHeader/breadcrumb.js","api/equipment.js","pages/CommonPlatform/EquipmentManage/index.module.scss","components/PageHeader/index.js","pages/CommonPlatform/EquipmentManage/EditForm.js","pages/CommonPlatform/EquipmentManage/BindPeople/Search.js","pages/CommonPlatform/EquipmentManage/BindPeople/index.js","pages/CommonPlatform/EquipmentManage/index.js"],"names":["__webpack_require__","d","__webpack_exports__","parseDate","get_date","getPhotoUrl","fixUndefinedData","getDow","getUUID","base64Prefix","defaultPageCount","paginationOption","IP_REG","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","n","_address__WEBPACK_IMPORTED_MODULE_2__","strDate","moment","format","photos","getStorageServerAddress","Array","photo_url","obj","Object","keys","reduce","res","item","Date","now","Math","random","dataUrl","split","length","concat","showSizeChanger","showQuickJumper","defaultPageSize","maxLength","userName","deviceName","deviceToken","IP","port","devicePosition","accountName","organization","mark","versionNumber","description","versionName","idcardNumber","_ref","title","Title","buttonText","doAction","buttonDisabled","buttonHide","hasDivider","customButton","buttonType","rest","D_items_clound_plus_face_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","btnType","button","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","antd__WEBPACK_IMPORTED_MODULE_2__","type","onClick","disabled","assign","style","marginBottom","className","styles","total_header","antd__WEBPACK_IMPORTED_MODULE_3__","mbt10_5","_ref$clsName","clsName","photo","_ref$width","width","_ref$height","height","_ref$objectFit","objectFit","container","src","alt","img","onLoad","e","event","target","containerAspectRatio","naturalWidth","naturalHeight","loadImg","messages","Select","Option","defineMessages","all","id","defaultMessage","failedToGetData","select","SelectAccount","props","_this","D_items_clound_plus_face_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","D_items_clound_plus_face_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","D_items_clound_plus_face_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","loadSubAccounts","selectedOptions","targetOption","parent_id","account_id","loading","getAccountList","then","data","accounts","map","it","children","setState","acountOptions","D_items_clound_plus_face_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","state","triggerChange","value","option","onChange","initCascaderOptions","loginAccount","useInfo","loadState","root","account_name","isLeaf","role","role_id","sub","catch","err","message","error","_this2","page_size","Promise","resolve","reject","getAccounts","response","code","msg","intl","formatMessage","react__WEBPACK_IMPORTED_MODULE_6___default","antd__WEBPACK_IMPORTED_MODULE_9__","options","loadData","changeOnSelect","placeholder","fieldNames","label","React","Component","injectIntl","loadFail","fixWrap","position","top","left","transform","ImageViewer","D_items_clound_plus_face_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","D_items_clound_plus_face_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_items_clound_plus_face_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","photoIndex","_this$props","isOpen","imageUrl","onClose","isLoading","imagePadding","react__WEBPACK_IMPORTED_MODULE_5___default","react_image_lightbox__WEBPACK_IMPORTED_MODULE_8__","mainSrc","onCloseRequest","enableZoom","imageLoadErrorMessage","react_intl__WEBPACK_IMPORTED_MODULE_6__","wrapperClassName","imageViewer","imageTitle","antd__WEBPACK_IMPORTED_MODULE_7__","defaultProps","module","exports","pageHeader","wide","detail","row","breadcrumb","tabs","logo","action","content","extraContent","main","TabPane","Tabs","selectedRowRequired","TabTableModal","selectedRows","selectedRowKeys","list","selectedList","total","page_number","search_form","tabParams","formKey","handleRowSelectChange","onSearch","preventDefault","formRef","form","validateFields","values","_loadAsyncData","handleStandardTableChange","pagination","filtersArg","sorter","_this$state","pageSize","current","saveFormRef","onTabChange","k","currIndex","p","operateOne","callback","bind","D_items_clound_plus_face_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","operateActions","warning","operateTwo","params","requestParams","initParams","responseKey","_this$state2","_this$state2$search_f","combineData","D_items_clound_plus_face_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","requiredKey","requiredParamKeyName","requestMethod","total_number","finally","console","log","visible","onCancel","columns","rowKey","confirmLoading","FormComponent","formComponent","totalLabel","_this$props$tabTitles","tabTitles","_this$props$operateLa","operateLabels","hasSearch","_this$state3","rowSelection","getCheckboxProps","record","react__WEBPACK_IMPORTED_MODULE_7___default","antd__WEBPACK_IMPORTED_MODULE_11__","destroyOnClose","footer","defaultActiveKey","animated","tab","key","handleSearch","wrappedComponentRef","_ListHeader__WEBPACK_IMPORTED_MODULE_13__","antd__WEBPACK_IMPORTED_MODULE_12__","dataSource","scroll","y","binding","getBoundEquipmentList","getBoundPeopleList","unbinding","_utils_fetch__WEBPACK_IMPORTED_MODULE_0__","apis","equipment","people","fetch","post","get","getBreadcrumb","breadcrumbNameMap","url","forEach","pathToRegexp","test","BreadcrumbView","getBreadcrumbDom","conversionBreadcrumbList","getBreadcrumbProps","routes","routerLocation","location","conversionFromProps","_this$props2","breadcrumbList","breadcrumbSeparator","itemRender","_this$props2$linkElem","linkElement","antd__WEBPACK_IMPORTED_MODULE_8__","separator","Item","href","D_items_clound_plus_face_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","conversionFromLocation","_this$props3","home","_this$props3$linkElem","pathSnippets","urlToList","pathname","extraBreadcrumbItems","index","currentBreadcrumb","inherited","isLinkable","component","name","hideInBreadcrumb","unshift","_this$props4","_this$getBreadcrumbPr","filter","route","breadcrumbName","paths","_this$props$linkEleme","indexOf","join","to","preProps","PureComponent","openDoor","closeDoor","resetPwd","sync","preview","getEquipments","addEquipment","updateEquipment","put","deleteEquipment","delete","equipment_id","getEquipmentInfo","syncPeople","previewDevice","tableList","tableListOperator","tableListForm","submitButtons","operatorLink","operatorWrap","wordBreak","photoPic","FormItem","Form","deviceNameRequired","deviceTokenRequired","deviceType","deviceTypeRequired","repeaterIP","repeaterIPFormat","deviceIP","deviceIPRequired","deviceIPFormat","devicePort","devicePortRequired","deviceMAC","deviceMACFormat","pushAddress","pushAddressFormat","EditForm","create","_React$Component","_temp","_getPrototypeOf2","classCallCheck","_len","arguments","args","_key","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","onCreate","formData","getFieldDecorator","model","formItemLayout","labelCol","xs","span","sm","wrapperCol","react_default","modal","onOk","es_form","gutter","col","initialValue","input","index_es","rules","required","equipment_name","device_id","pattern","ip","input_number","min","max","sourceAccount","search","personnelName","SearchForm","onAccountChange","setFieldsValue","userInfo","onSubmit","layout","display","padding","alignItems","Fragment","Search_FormItem","es_button","icon","htmlType","wordWrap","identifier","status","registered","rejected","approvalPending","relateSuccess","relateError","cancelRelateSuccess","cancelRelateError","relatePeople","relatedPeopleNumberAlready","related","unrelated","relate","cancelRelate","relatedDeviceNumber","dataIndex","render","text","image","PhotoBox","thumbnail","badge","BindPeople","people_ids","equipment_ids","equipmentId","success","uuid","account_ids","approval","Search","items","operate","deleteConfirm","deleteSuccess","deleteError","edit","reset","add","update","failed","deviceList","deviceID","connectStatus","openDoorSuccess","openDoorError","emergencyOpen","cancelOpen","resetPassword","resetPasswordSuccess","resetPasswordError","deviceDetail","addDevice","editDevice","relatedPeopleNumber","remoteCommand","online","offline","syncPeopleSuccess","syncPeopleError","sysVersion","DeviceManage","showSelectModal","showEditModal","popconfirm","onConfirm","onDelete","onResetPwd","onOperateDoor","door_status","onSync","queryStrings","query","accountId","parentId","locked","showEdit","showView","previewData","equipments","bindKey","isSelectVisible","getInitAccountIds","push","Number","closeImage","fieldsValue","handleTableChange","config","method","handleFormReset","resetFields","showModal","getInfo","objectSpread","selectedEquipmentId","handleModal","stateProps","flag","defineProperty","handleCreate","handleBindPeopleCancel","initAccountIds","slice","md","lg","xl","EquipmentManage_FormItem","marginLeft","cancelApiRequsets","_this3","_this4","_this5","showTotal","card","bordered","renderSimpleForm","ListHeader","table","EquipmentManage_EditForm","EquipmentManage_BindPeople"],"mappings":"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","file":"static/js/8.56c08d02.chunk.js","sourcesContent":["import moment from 'moment';\r\nimport qs from 'querystringify';\r\nimport { getStorageServerAddress } from './address'\r\n\r\nexport const numbers = length =>\r\n  Array.apply(null, { length: length }).map(Number.call, Number);\r\n\r\n// type: \"today\",\"three\",\"week\"\r\nexport const getDate = type => {\r\n  switch (type) {\r\n    case 'today':\r\n      let today = [\r\n        moment()\r\n          .startOf('day')\r\n          .format('YYYY-MM-DD HH:mm:ss'),\r\n        moment()\r\n          .endOf('day')\r\n          .format('YYYY-MM-DD HH:mm:ss')\r\n      ];\r\n      return today;\r\n    case 'three':\r\n      let three = [\r\n        moment()\r\n          .subtract(2, 'day')\r\n          .startOf('day')\r\n          .format('YYYY-MM-DD HH:mm:ss'),\r\n        moment()\r\n          .endOf('day')\r\n          .format('YYYY-MM-DD HH:mm:ss')\r\n      ];\r\n      return three;\r\n    case 'week':\r\n      let week = [\r\n        moment()\r\n          .subtract(6, 'day')\r\n          .startOf('day')\r\n          .format('YYYY-MM-DD HH:mm:ss'),\r\n        moment()\r\n          .endOf('day')\r\n          .format('YYYY-MM-DD HH:mm:ss')\r\n      ];\r\n      return week;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const parseDate = strDate => {\r\n  if (strDate) {\r\n    return moment(strDate).format('YYYY-MM-DD HH:mm:ss');\r\n  }\r\n\r\n  return null;\r\n\r\n};\r\n\r\n/**\r\n * 时间字符串转moment\r\n * @param {*} strDateTime \r\n */\r\nexport const dateTimeToMoment = strDateTime => {\r\n  if (strDateTime) {\r\n    return moment(strDateTime)\r\n  }\r\n}\r\n\r\nexport const parseDateTime = strDate => {\r\n  if (strDate) {\r\n    return moment(strDate, 'YYYY-MM-DD HH:mm:ss').valueOf()\r\n  }\r\n\r\n  return null;\r\n\r\n};\r\n\r\nexport const get_date = strDate => {\r\n  if (strDate) {\r\n    return moment(strDate).format('YYYY-MM-DD');\r\n  }\r\n\r\n  return null;\r\n\r\n};\r\n\r\nexport const get_time = strDate => {\r\n  if (strDate) {\r\n    return moment(strDate).format('HH:mm:ss');\r\n  }\r\n\r\n  return null;\r\n\r\n};\r\n\r\nexport const conbineNames = (arr, keys, keyProp, valueProp) => {\r\n  let conbinedNames = arr.reduce((allNames, current) => {\r\n\r\n    keys.forEach(key => {\r\n      if (current[keyProp] === key) {\r\n        allNames += ',' + current[valueProp];\r\n      }\r\n    });\r\n\r\n    return allNames;\r\n  }, '');\r\n\r\n  if (conbinedNames.length > 0) {\r\n    conbinedNames = conbinedNames.substring(1)\r\n  }\r\n\r\n  return conbinedNames;\r\n};\r\n\r\nexport function getPhotoUrl(photos) {\r\n  if (photos) {\r\n    let baseUrl = getStorageServerAddress()\r\n    let photoObj = {}\r\n    if (photos instanceof Array) {\r\n      photoObj = photos[0] || {}\r\n    } else {\r\n      photoObj = photos || {}\r\n    }\r\n\r\n    let fullName = baseUrl + \"/\" + photoObj.photo_url\r\n    return fullName;\r\n\r\n  }\r\n\r\n  return \"\"\r\n\r\n}\r\n\r\n/**\r\n *非必填项未填，则删除该字段\r\n *\r\n * @export\r\n * @param {Object} obj 要处理的表单\r\n * @returns 整理后的表单\r\n */\r\nexport function fixUndefinedData(obj) {\r\n  const keys = Object.keys(obj)\r\n  return keys.reduce((res, item) => {\r\n    if (typeof obj[item] !== 'undefined') {\r\n      res[item] = obj[item]\r\n    }\r\n    return res\r\n  }, {})\r\n}\r\n\r\nexport function getValueFromQuery(querystring, key) {\r\n  if (!(querystring && key)) {\r\n    return ''\r\n  }\r\n  return qs.parse(querystring)[key]\r\n}\r\n\r\nexport function parseQuery(querystring) {\r\n  if (!querystring) {\r\n    return {}\r\n  }\r\n  return qs.parse(querystring)\r\n}\r\n\r\nexport function getDow() {\r\n  return moment(Date.now())\r\n}\r\n\r\nexport function getUUID() {\r\n  return Date.now() + Math.random()\r\n}\r\n\r\nexport function base64Prefix(dataUrl) {\r\n  if (dataUrl.split(',').length === 1) {\r\n    dataUrl = `data:image/jpg;base64,${dataUrl}`\r\n  }\r\n  return dataUrl\r\n}\r\n\r\n// 分页\r\nexport const pageSizeOptions = ['30', '50', '80', '100']\r\n\r\nexport const defaultPageCount = 30\r\n\r\nexport const paginationOption = {\r\n  showSizeChanger: true,\r\n  showQuickJumper: true,\r\n  defaultPageSize: defaultPageCount,\r\n}\r\n\r\n\r\n// 正则\r\n\r\nexport const IDCARD_REG = /^[1-9]\\d{7}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}$|^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}([0-9]|X)$/i\r\n\r\nexport const PHONE_REG = /^\\d{6,20}$/\r\n\r\nexport const IP_REG = /(?=(\\b|\\D))(((\\d{1,2})|(1\\d{1,2})|(2[0-4]\\d)|(25[0-5]))\\.){3}((\\d{1,2})|(1\\d{1,2})|(2[0-4]\\d)|(25[0-5]))(?=(\\b|\\D))/\r\n\r\nexport const URL_REG = /(https?):\\/\\/[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[-A-Za-z0-9+&@#/%=~_|]/i\r\n\r\nexport const MAC_REG = /^[A-F0-9]{2}(-[A-F0-9]{2}){5}$|^[A-F0-9]{2}(:[A-F0-9]{2}){5}$/i\r\n\r\nexport const IPPORT_REG = /(?=(\\b|\\D))(((\\d{1,2})|(1\\d{1,2})|(2[0-4]\\d)|(25[0-5]))\\.){3}((\\d{1,2})|(1\\d{1,2})|(2[0-4]\\d)|(25[0-5]))(?=(\\b|\\D)):\\d{1,5}/\r\n\r\nexport const LETTER_NUM_REG = /^[0-9a-z]+$/i","const maxLength = {\r\n  userName: 30,\r\n  deviceName: 50,\r\n  deviceToken: 50,\r\n  IP: 15,\r\n  port: 5,\r\n  devicePosition: 100,\r\n  accountName: 30,\r\n  organization: 50,\r\n  mark: 50,\r\n  versionNumber: 20,\r\n  description: 50,\r\n  versionName: 20,\r\n  idcardNumber: 30,\r\n}\r\n\r\nexport default maxLength","import React from 'react';\r\nimport { Button, Divider } from 'antd';\r\nimport styles from './index.module.css';\r\n\r\nexport default ({title,Title, buttonText,doAction, buttonDisabled,buttonHide,hasDivider,customButton,buttonType, ...rest}) => {\r\n  let btnType = buttonType || 'primary'\r\n  const button = (customButton && (<div>{customButton}</div>)) ||\r\n    <Button type={btnType} onClick={doAction} disabled={buttonDisabled}>{buttonText}</Button>\r\n  return (\r\n  <div style={{ marginBottom: 5 }} {...rest}>\r\n    <header className={styles.total_header}>\r\n      <div>{Title ? <Title /> : title}</div>\r\n      {(!buttonHide) && button}\r\n    </header>\r\n    {hasDivider && <Divider className={styles.mbt10_5} />}\r\n  </div>\r\n)};\r\n","import React from 'react';\r\nimport styles from './index.module.scss';\r\n\r\nconst loadImg = (event, objectFit, width, height) => {\r\n  let target = event.target;\r\n  let containerAspectRatio = width / height;\r\n  let imgAspectRatio = target.naturalWidth / target.naturalHeight;\r\n\r\n  if (imgAspectRatio > containerAspectRatio) {\r\n    if (objectFit === 'cover') {\r\n      target.style.height = '100%';\r\n      target.style.width = 'auto';\r\n    } else {\r\n      // contain\r\n      target.style.width = '100%';\r\n      target.style.height = 'auto';\r\n    }\r\n  } else {\r\n    if (objectFit === 'cover') {\r\n      target.style.width = '100%';\r\n      target.style.height = 'auto';\r\n    } else {\r\n      // contain\r\n      target.style.height = '100%';\r\n      target.style.width = 'auto';\r\n    }\r\n  }\r\n};\r\n\r\nexport default ({\r\n  clsName = '',\r\n  photo,\r\n  width = 60,\r\n  height = 80,\r\n  objectFit = 'cover',\r\n  ...rest\r\n}) => (\r\n  <div\r\n    className={`${clsName} ${styles.container}`}\r\n    style={{ width, height }}\r\n    {...rest}\r\n  >\r\n    <img\r\n      src={photo}\r\n      alt=\"\"\r\n      className={styles.img}\r\n      onLoad={e => loadImg(e, objectFit, width, height)}\r\n    />\r\n  </div>\r\n);\r\n","\r\nimport React from 'react';\r\nimport { message, Select, Cascader } from 'antd';\r\nimport { injectIntl, FormattedMessage, defineMessages } from 'react-intl';\r\nimport { loadState } from '../../utils/localStorage';\r\nimport {getAccounts} from '../../api/account';\r\n\r\nconst Option = Select.Option;\r\n\r\nconst messages = defineMessages({\r\n  all: {\r\n    id: 'common.all',\r\n    defaultMessage: '全部'\r\n  },\r\n  failedToGetData: {\r\n    id: 'common.error.failedToGetData',\r\n    defaultMessage: '获取数据失败!'\r\n  },\r\n  select: {\r\n    id: 'common.select',\r\n    defaultMessage: '请选择'\r\n  }\r\n});\r\n\r\nclass SelectAccount extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      acountOptions: [],\r\n    };\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    const useInfo = loadState('userInfo', true) || {}\r\n    const loginAccount = useInfo.account_id;\r\n    // 如果初始值是空，触发change，赋初值为登录用户\r\n    this.initCascaderOptions(loginAccount);\r\n  }\r\n\r\n\r\n  loadSubAccounts = (selectedOptions) => {\r\n    const targetOption = selectedOptions[selectedOptions.length - 1];\r\n    const parent_id = targetOption.account_id\r\n    targetOption.loading = true;\r\n    this.getAccountList(parent_id).then((data) => {\r\n      targetOption.loading = false;\r\n      let accounts = data.accounts;\r\n      accounts = accounts.map((it) => {\r\n        return it;\r\n      })\r\n      targetOption.children = accounts;\r\n      this.setState({\r\n        acountOptions: [...this.state.acountOptions],\r\n      });\r\n    })\r\n  }\r\n\r\n  getAccountList(id) {\r\n    const data = {\r\n      account_id: id,\r\n      page_size: 99999,\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      getAccounts(data).then((response) => {\r\n        if (response.code === 1000) {\r\n          resolve(response.data)\r\n        } else {\r\n          reject(response.msg || this.props.intl.formatMessage(messages.failedToGetData));\r\n        }\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n  triggerChange = (value, option)  => {\r\n    const onChange = this.props.onChange;\r\n    if (onChange) {\r\n      onChange(value, option);\r\n    }\r\n  }\r\n\r\n  initCascaderOptions = (loginAccount) => {\r\n    const useInfo = loadState('userInfo', true) || {}\r\n    let root = {\r\n      account_name: useInfo.account_name,\r\n      account_id: useInfo.account_id,\r\n      isLeaf: useInfo.role.role_id === 3,\r\n      children: [],\r\n    }\r\n\r\n    this.getAccountList().then((data) => {\r\n      let accounts = data.accounts || []\r\n      accounts = accounts.map((it) => {\r\n        // isLeaf : 是否是叶子\r\n        it.isLeaf = it.role.role_id === 3\r\n        if (this.props.value.length === 3 && it.account_id === this.props.value[1]) {\r\n          this.getAccountList(it.account_id).then(data => {\r\n            it.children = data.accounts.map((sub) => {\r\n              sub.isLeaf = true;\r\n              return sub;\r\n            })\r\n            this.setState({\r\n              acountOptions: [root],\r\n            })\r\n          })\r\n        } \r\n        return it\r\n      })\r\n      root.children = accounts;\r\n      this.setState({\r\n        acountOptions: [root],\r\n      })\r\n    }).catch(err => {\r\n      message.error(err)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n    <Cascader\r\n    value={this.props.value || []}\r\n    options={this.state.acountOptions}\r\n    style={this.props.style}\r\n    onChange={this.triggerChange}\r\n    loadData={this.loadSubAccounts}\r\n    changeOnSelect\r\n    placeholder={this.props.intl.formatMessage(messages.select)}\r\n    fieldNames={{ label: 'account_name', value: 'account_id', children: 'children' }}/>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(SelectAccount);\r\n","import React, {Component} from 'react';\r\nimport { injectIntl, FormattedMessage, defineMessages } from 'react-intl';\r\nimport {Spin} from 'antd'\r\nimport Lightbox from 'react-image-lightbox'\r\nimport 'react-image-lightbox/style.css';\r\n\r\nimport styles from './index.module.css';\r\n\r\nconst messages = defineMessages({\r\n  loadFail: {\r\n    id: 'component.ImageViewer.loadFail',\r\n    defaultMessage: '图片加载失败!'\r\n  },\r\n});\r\n\r\nconst fixWrap = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)'\r\n}\r\n\r\nclass ImageViewer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      photoIndex: 0,\r\n    };\r\n  }\r\n\r\n render() {\r\n  const {isOpen, imageUrl, onClose, isLoading, imagePadding} = this.props\r\n   return (\r\n    <div>\r\n      {isOpen && <div>\r\n        {imageUrl && (!isLoading) &&(<Lightbox\r\n          mainSrc={imageUrl}\r\n          onCloseRequest={onClose}\r\n          enableZoom={false}\r\n          imageLoadErrorMessage={<FormattedMessage {...messages.loadFail} />}\r\n          wrapperClassName={styles.imageViewer}\r\n          imagePadding={imagePadding}\r\n          imageTitle=\"\" />)}\r\n        {isLoading && <Spin style={fixWrap}/> }\r\n      </div>}\r\n    </div>\r\n   )\r\n }\r\n}\r\n\r\nImageViewer.defaultProps = {\r\n  imagePadding: 100\r\n}\r\n\r\nexport default injectIntl(ImageViewer)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mbt10_5\":\"ListHeader_mbt10_5__3iesS\",\"total_header\":\"ListHeader_total_header__itbu3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageViewer\":\"ImageViewer_imageViewer__1C2gj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PhotoBox_container__1DsXi\",\"img\":\"PhotoBox_img__2P6Af\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageHeader\":\"PageHeader_pageHeader__an5fj\",\"wide\":\"PageHeader_wide__q_sow\",\"detail\":\"PageHeader_detail__NGTkC\",\"row\":\"PageHeader_row__WKI-e\",\"breadcrumb\":\"PageHeader_breadcrumb__19V9Q\",\"tabs\":\"PageHeader_tabs__1avsh\",\"logo\":\"PageHeader_logo__2lqzH\",\"title\":\"PageHeader_title__2iG9P\",\"action\":\"PageHeader_action__R8nTc\",\"content\":\"PageHeader_content__1SOHc\",\"extraContent\":\"PageHeader_extraContent__1bGHU\",\"main\":\"PageHeader_main__1PFNa\"};","import React from 'react';\r\nimport { injectIntl, FormattedMessage, defineMessages } from 'react-intl';\r\nimport { Modal, message, Tabs, Table,} from 'antd';\r\nimport ListHeader from '../ListHeader'\r\n\r\nconst TabPane = Tabs.TabPane;\r\n\r\nconst messages = defineMessages({\r\n  failedToGetData: {\r\n    id: 'common.error.failedToGetData',\r\n    defaultMessage: '获取数据失败!',\r\n  },\r\n  selectedRowRequired: {\r\n    id: 'common.selectedRow.required',\r\n    defaultMessage: '请先选择要操作的数据!'\r\n  }\r\n});\r\n\r\n\r\nclass TabTableModal extends React.Component {\r\n\r\n  state = {\r\n    selectedRows: [],\r\n    selectedRowKeys: [],\r\n    loading: false,\r\n    list: [],\r\n    selectedList: [],\r\n    total: 0,\r\n    page_number: 1,\r\n    page_size: 10,\r\n    search_form: {},\r\n    tabParams:{},\r\n    formKey: Date.now(),\r\n  }\r\n\r\n  /**\r\n   *加载后请求第一个tab数据\r\n   *\r\n   * @memberof TabTableModal\r\n   */\r\n  componentDidMount() {\r\n    const tabParams = this.props.tabParams\r\n    if (tabParams.length) {\r\n      this.setState({\r\n        tabParams: tabParams[0]\r\n      }, this._loadAsyncData)\r\n    } else {\r\n      this._loadAsyncData()\r\n    }\r\n  }\r\n\r\n  // 加载列表数据\r\n  _loadAsyncData() {\r\n    const params = this.props.requestParams\r\n    const initParams = this.props.initParams || {}\r\n    const responseKey = this.props.responseKey\r\n    let { page_number, page_size, search_form = {}, tabParams } = this.state;\r\n    let combineData = {page_number, page_size, ...initParams, ...search_form, ...params, ...tabParams}\r\n    let requiredKey = this.props.requiredParamKeyName\r\n    if (requiredKey && !combineData[requiredKey]) {\r\n      console.log('lack of required param!')\r\n      return\r\n    }\r\n    this.setState({\r\n      loading: true\r\n    });\r\n    // params 接口额外要传递的参数\r\n    // search_form 表单参数\r\n    // tabParams tab切换要传递的参数\r\n    this.props.requestMethod(combineData).then(res => {\r\n      const data = res.data\r\n      if (res.code === 1000) {\r\n        let total = data.total_number || 0;\r\n        this.setState({\r\n          list: data[responseKey],\r\n          total,\r\n        })\r\n      } else {\r\n        message.error(res.msg || this.props.intl.formatMessage(messages.failedToGetData))\r\n      }\r\n    }).catch(err => {\r\n      message.error(this.props.intl.formatMessage(messages.failedToGetData))\r\n    }).finally(() => {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    })\r\n  }\r\n\r\n  // 存储已选数据\r\n  handleRowSelectChange = (selectedRowKeys, selectedRows) => {\r\n    this.setState({ selectedRowKeys, selectedRows});\r\n  };\r\n\r\n\r\n  onSearch = (e)=> {\r\n    e.preventDefault();\r\n    const form = this.formRef.props.form;\r\n    form.validateFields((err, values) => {\r\n      if (err) {\r\n          return;\r\n      }\r\n      this.setState({\r\n        page_number: 1,\r\n        search_form: values,\r\n      }, this._loadAsyncData)\r\n    });\r\n  }\r\n\r\n  // 表格跳页\r\n  handleStandardTableChange = (pagination, filtersArg, sorter) => {\r\n    let { page_number, page_size } = this.state;\r\n\r\n    if (page_size !== pagination.pageSize) {\r\n      // page size changed, then reset page number to 1\r\n      page_number = 1;\r\n    } else {\r\n      page_number = pagination.current;\r\n    }\r\n\r\n    page_size = pagination.pageSize;\r\n\r\n    this.setState(\r\n      {\r\n        page_number,\r\n        page_size\r\n      },\r\n      this._loadAsyncData\r\n    );\r\n  };\r\n\r\n  saveFormRef = (formRef) => {\r\n    this.formRef = formRef;\r\n  }\r\n\r\n  // 切换tab\r\n  onTabChange = (k) => {\r\n    // key值为'1'或者'2'\r\n    const currIndex = k -1\r\n    const tabParams = this.props.tabParams\r\n    if (tabParams.length) {\r\n      let p = tabParams[currIndex]\r\n      this.setState({\r\n        tabParams: p,\r\n        selectedRowKeys: [],\r\n        selectedRows: [],\r\n        page_number: 1,\r\n        search_form: [],\r\n        formKey: Date.now(),\r\n      }, this._loadAsyncData)\r\n    }\r\n  }\r\n\r\n  // 第一个tab的操作按钮事件\r\n  operateOne = () => {\r\n    if (!this.state.selectedRowKeys.length) {\r\n      message.warning(this.props.intl.formatMessage(messages.selectedRowRequired))\r\n      return\r\n    }\r\n    const callback = (function() {\r\n      this.setState({\r\n        selectedRowKeys: [],\r\n        selectedRows: [],\r\n      }, this._loadAsyncData)\r\n    }).bind(this)\r\n    this.props.operateActions[0](this.state.selectedRowKeys, callback)\r\n  }\r\n\r\n  // 第二个tab的操作按钮事件\r\n  operateTwo = () => {\r\n    if (!this.state.selectedRowKeys.length) {\r\n      message.warning(this.props.intl.formatMessage(messages.selectedRowRequired))\r\n      return\r\n    }\r\n    const callback = (function() {\r\n      this.setState({\r\n        selectedRowKeys: [],\r\n        selectedRows: [],\r\n      }, this._loadAsyncData)\r\n    }).bind(this)\r\n    this.props.operateActions[1](this.state.selectedRowKeys, callback)\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      visible,\r\n      onCancel,\r\n      title,\r\n      columns,\r\n      rowKey,\r\n      confirmLoading,\r\n      formComponent: FormComponent,\r\n      totalLabel,\r\n      tabTitles = ['Tab1','Tab2'],\r\n      operateLabels = [],\r\n    } = this.props;\r\n\r\n    const hasSearch = !!FormComponent\r\n    const {\r\n      loading,\r\n      selectedRowKeys,\r\n      total,\r\n      list,\r\n      page_number,\r\n      page_size,\r\n      formKey,\r\n    } = this.state;\r\n\r\n    const pagination = {\r\n      current: page_number,\r\n      pageSize: page_size,\r\n      total,\r\n      showQuickJumper: true,\r\n    };\r\n\r\n    const rowSelection = {\r\n      onChange: this.handleRowSelectChange,\r\n      selectedRowKeys: selectedRowKeys,\r\n      getCheckboxProps: record => ({\r\n        disabled: record.disabled,\r\n      }),\r\n    };\r\n    \r\n    return (\r\n      <Modal\r\n        visible={visible}\r\n        title={title}\r\n        onCancel={onCancel}\r\n        confirmLoading={confirmLoading}\r\n        width={920}\r\n        destroyOnClose={true}\r\n        footer={null}\r\n      >\r\n        <Tabs defaultActiveKey=\"1\" onChange={this.onTabChange} animated={false}>\r\n          <TabPane tab={tabTitles[0]} key=\"1\">\r\n            {hasSearch && <div style={{height: '60px'}}>\r\n              <FormComponent handleSearch={this.onSearch} wrappedComponentRef={this.saveFormRef} key={formKey}/>\r\n            </div>}\r\n\r\n            <ListHeader\r\n              title={`${totalLabel}${this.state.total}`}\r\n              buttonText={operateLabels[0]}\r\n              buttonType=\"default\"\r\n              doAction={this.operateOne}\r\n            />\r\n\r\n          </TabPane>\r\n          <TabPane tab={tabTitles[1]} key=\"2\">\r\n          {hasSearch && <div style={{height: '60px'}}>\r\n              <FormComponent handleSearch={this.onSearch} wrappedComponentRef={this.saveFormRef} key={formKey}/>\r\n            </div>}\r\n            <ListHeader\r\n              title=\"\"\r\n              buttonText={operateLabels[1]}\r\n              buttonType=\"default\"\r\n              doAction={this.operateTwo}\r\n            />\r\n\r\n          </TabPane>\r\n        </Tabs>\r\n        <Table\r\n                rowKey={rowKey}\r\n                loading={loading}\r\n                columns={columns}\r\n                dataSource={list}\r\n                onChange={this.handleStandardTableChange}\r\n                rowSelection={rowSelection}\r\n                pagination={pagination}\r\n                scroll={{ y: hasSearch ? 340 : 400 }}\r\n              />\r\n\r\n\r\n\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(TabTableModal);\r\n","import fetch from '../utils/fetch'\r\n\r\nconst apis = {\r\n  binding: '/api/binding',\r\n  equipment: '/api/binding/equipments',\r\n  people: '/api/binding/peoples',\r\n  unbinding: '/api/binding/untying',\r\n}\r\n\r\nexport function binding(data) {\r\n  return fetch.post(apis.binding, data)\r\n}\r\n\r\nexport function getBoundEquipmentList(data) {\r\n  return fetch.get(apis.equipment, {\r\n    params: data\r\n  })\r\n}\r\n\r\nexport function getBoundPeopleList(data) {\r\n  return fetch.get(apis.people, {\r\n    params: data\r\n  })\r\n}\r\n\r\nexport function unbinding(data) {\r\n  return fetch.post(apis.unbinding, data)\r\n}","import React, { PureComponent, createElement } from 'react';\r\nimport pathToRegexp from 'path-to-regexp';\r\nimport { Breadcrumb } from 'antd';\r\nimport styles from './index.module.scss';\r\nimport { urlToList } from '../_utils/pathTools';\r\n\r\nexport const getBreadcrumb = (breadcrumbNameMap, url) => {\r\n  let breadcrumb = breadcrumbNameMap[url];\r\n  if (!breadcrumb) {\r\n    Object.keys(breadcrumbNameMap).forEach(item => {\r\n      if (pathToRegexp(item).test(url)) {\r\n        breadcrumb = breadcrumbNameMap[item];\r\n      }\r\n    });\r\n  }\r\n  return breadcrumb || {};\r\n};\r\n\r\nexport default class BreadcrumbView extends PureComponent {\r\n  state = {\r\n    breadcrumb: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getBreadcrumbDom();\r\n  }\r\n\r\n  componentDidUpdate(preProps) {\r\n    const { location } = this.props;\r\n    if (!location || !preProps.location) {\r\n      return;\r\n    }\r\n    const prePathname = preProps.location.pathname;\r\n    if (prePathname !== location.pathname) {\r\n      this.getBreadcrumbDom();\r\n    }\r\n  }\r\n\r\n  getBreadcrumbDom = () => {\r\n    const breadcrumb = this.conversionBreadcrumbList();\r\n    this.setState({\r\n      breadcrumb,\r\n    });\r\n  };\r\n\r\n  getBreadcrumbProps = () => {\r\n    const { routes, params, location, breadcrumbNameMap } = this.props;\r\n    return {\r\n      routes,\r\n      params,\r\n      routerLocation: location,\r\n      breadcrumbNameMap,\r\n    };\r\n  };\r\n\r\n  // Generated according to props\r\n  conversionFromProps = () => {\r\n    const { breadcrumbList, breadcrumbSeparator, itemRender, linkElement = 'a' } = this.props;\r\n    return (\r\n      <Breadcrumb className={styles.breadcrumb} separator={breadcrumbSeparator}>\r\n        {breadcrumbList.map(item => {\r\n          const title = itemRender ? itemRender(item) : item.title;\r\n          return (\r\n            <Breadcrumb.Item key={item.title}>\r\n              {item.href\r\n                ? createElement(\r\n                    linkElement,\r\n                    {\r\n                      [linkElement === 'a' ? 'href' : 'to']: item.href,\r\n                    },\r\n                    title\r\n                  )\r\n                : title}\r\n            </Breadcrumb.Item>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    );\r\n  };\r\n\r\n  conversionFromLocation = (routerLocation, breadcrumbNameMap) => {\r\n    const { breadcrumbSeparator, home, itemRender, linkElement = 'a' } = this.props;\r\n    // Convert the url to an array\r\n    const pathSnippets = urlToList(routerLocation.pathname);\r\n    // Loop data mosaic routing\r\n    const extraBreadcrumbItems = pathSnippets.map((url, index) => {\r\n      const currentBreadcrumb = getBreadcrumb(breadcrumbNameMap, url);\r\n      if (currentBreadcrumb.inherited) {\r\n        return null;\r\n      }\r\n      const isLinkable = index !== pathSnippets.length - 1 && currentBreadcrumb.component;\r\n      const name = itemRender ? itemRender(currentBreadcrumb) : currentBreadcrumb.name;\r\n      return currentBreadcrumb.name && !currentBreadcrumb.hideInBreadcrumb ? (\r\n        <Breadcrumb.Item key={url}>\r\n          {createElement(\r\n            isLinkable ? linkElement : 'span',\r\n            { [linkElement === 'a' ? 'href' : 'to']: url },\r\n            name\r\n          )}\r\n        </Breadcrumb.Item>\r\n      ) : null;\r\n    });\r\n    // Add home breadcrumbs to your head\r\n    extraBreadcrumbItems.unshift(\r\n      <Breadcrumb.Item key=\"home\">\r\n        {createElement(\r\n          linkElement,\r\n          {\r\n            [linkElement === 'a' ? 'href' : 'to']: '/',\r\n          },\r\n          home || 'Home'\r\n        )}\r\n      </Breadcrumb.Item>\r\n    );\r\n    return (\r\n      <Breadcrumb className={styles.breadcrumb} separator={breadcrumbSeparator}>\r\n        {extraBreadcrumbItems}\r\n      </Breadcrumb>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * 将参数转化为面包屑\r\n   * Convert parameters into breadcrumbs\r\n   */\r\n  conversionBreadcrumbList = () => {\r\n    const { breadcrumbList, breadcrumbSeparator } = this.props;\r\n    const { routes, params, routerLocation, breadcrumbNameMap } = this.getBreadcrumbProps();\r\n    if (breadcrumbList && breadcrumbList.length) {\r\n      return this.conversionFromProps();\r\n    }\r\n    // 如果传入 routes 和 params 属性\r\n    // If pass routes and params attributes\r\n    if (routes && params) {\r\n      return (\r\n        <Breadcrumb\r\n          className={styles.breadcrumb}\r\n          routes={routes.filter(route => route.breadcrumbName)}\r\n          params={params}\r\n          itemRender={this.itemRender}\r\n          separator={breadcrumbSeparator}\r\n        />\r\n      );\r\n    }\r\n    // 根据 location 生成 面包屑\r\n    // Generate breadcrumbs based on location\r\n    if (routerLocation && routerLocation.pathname) {\r\n      return this.conversionFromLocation(routerLocation, breadcrumbNameMap);\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // 渲染Breadcrumb 子节点\r\n  // Render the Breadcrumb child node\r\n  itemRender = (route, params, routes, paths) => {\r\n    const { linkElement = 'a' } = this.props;\r\n    const last = routes.indexOf(route) === routes.length - 1;\r\n    return last || !route.component ? (\r\n      <span>{route.breadcrumbName}</span>\r\n    ) : (\r\n      createElement(\r\n        linkElement,\r\n        {\r\n          href: paths.join('/') || '/',\r\n          to: paths.join('/') || '/',\r\n        },\r\n        route.breadcrumbName\r\n      )\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { breadcrumb } = this.state;\r\n    return breadcrumb;\r\n  }\r\n}\r\n","import fetch from '../utils/fetch'\r\n\r\nconst apis = {\r\n  list: '/api/equipment/list',\r\n  equipment: '/api/equipment',\r\n  openDoor: '/api/equipment/open',\r\n  closeDoor: '/api/equipment/close',\r\n  resetPwd: '/api/equipment/reset',\r\n  sync: '/api/equipment/synchronization',\r\n  preview: '/api/equipment/preview',\r\n}\r\n\r\n/**\r\n *获取设备列表\r\n *\r\n * @export\r\n * @param {Object} {\r\n *   equipment_name\r\n * }\r\n * @returns\r\n */\r\nexport function getEquipments(data) {\r\n  return fetch.get(apis.list, {\r\n    params: {\r\n      ...data,\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n *添加设备\r\n *\r\n * @export\r\n * @param {Object} data\r\n * @returns\r\n */\r\nexport function addEquipment(data) {\r\n  return fetch.post(apis.equipment, data);\r\n}\r\n\r\n/**\r\n *更新设备\r\n *\r\n * @export\r\n * @param {Object} data\r\n * @returns\r\n */\r\nexport function updateEquipment(data) {\r\n  return fetch.put(apis.equipment, data);\r\n}\r\n\r\n/**\r\n *删除设备\r\n *\r\n * @export\r\n * @param {Number} id\r\n * @returns\r\n */\r\nexport function deleteEquipment(id) {\r\n  return fetch.delete(apis.equipment, {\r\n    data: {\r\n      equipment_id: id\r\n    }\r\n  });\r\n}\r\n\r\n\r\n/**\r\n *获取设备详情\r\n *\r\n * @export\r\n * @param {Number} id\r\n * @returns\r\n */\r\nexport function getEquipmentInfo(id) {\r\n  return fetch.get(apis.equipment,{\r\n    params: {\r\n      equipment_id: id,\r\n    }\r\n  });\r\n}\r\n\r\n\r\n\r\n/**\r\n * 紧急常开\r\n *\r\n * @export\r\n * @param {Number} id\r\n * @returns\r\n */\r\nexport function openDoor(id) {\r\n  return fetch.post(apis.openDoor, {\r\n    equipment_id: id\r\n  });\r\n}\r\n\r\n/**\r\n * 取消常开\r\n *\r\n * @export\r\n * @param {Number} id\r\n * @returns\r\n */\r\nexport function closeDoor(id) {\r\n  return fetch.post(apis.closeDoor, {\r\n    equipment_id: id\r\n  });\r\n}\r\n\r\n\r\n\r\n/**\r\n *重置密码\r\n *\r\n * @export\r\n * @param {Number} id\r\n * @returns\r\n */\r\nexport function resetPwd(id) {\r\n  return fetch.post(apis.resetPwd, {\r\n    equipment_id: id\r\n  })\r\n}\r\n\r\nexport function syncPeople(id) {\r\n  return fetch.post(apis.sync, {\r\n    equipment_id: id\r\n  })\r\n}\r\n\r\nexport function previewDevice(id) {\r\n  return fetch.get(apis.preview, {\r\n    params: {\r\n      equipment_id: id\r\n    }\r\n  })\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableList\":\"EquipmentManage_tableList__3bZzR\",\"tableListOperator\":\"EquipmentManage_tableListOperator__ZTGqI\",\"tableListForm\":\"EquipmentManage_tableListForm__1ugaV\",\"submitButtons\":\"EquipmentManage_submitButtons__3gofM\",\"operatorLink\":\"EquipmentManage_operatorLink__2Rdpy\",\"operatorWrap\":\"EquipmentManage_operatorWrap__2rbRr\",\"wordBreak\":\"EquipmentManage_wordBreak__25BlB\",\"photoPic\":\"EquipmentManage_photoPic__qJZEV\"};","import React, { PureComponent } from 'react';\r\nimport { Tabs, Skeleton } from 'antd';\r\nimport classNames from 'classnames';\r\nimport styles from './index.module.scss';\r\nimport BreadcrumbView from './breadcrumb';\r\n\r\nconst { TabPane } = Tabs;\r\nexport default class PageHeader extends PureComponent {\r\n  onChange = key => {\r\n    const { onTabChange } = this.props;\r\n    if (onTabChange) {\r\n      onTabChange(key);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      title,\r\n      logo,\r\n      action,\r\n      content,\r\n      extraContent,\r\n      tabList,\r\n      className,\r\n      tabActiveKey,\r\n      tabDefaultActiveKey,\r\n      tabBarExtraContent,\r\n      loading = false,\r\n      wide = false,\r\n      hiddenBreadcrumb = false,\r\n    } = this.props;\r\n\r\n    const clsString = classNames(styles.pageHeader, className);\r\n    const activeKeyProps = {};\r\n    if (tabDefaultActiveKey !== undefined) {\r\n      activeKeyProps.defaultActiveKey = tabDefaultActiveKey;\r\n    }\r\n    if (tabActiveKey !== undefined) {\r\n      activeKeyProps.activeKey = tabActiveKey;\r\n    }\r\n    return (\r\n      <div className={clsString}>\r\n        <div className={wide ? styles.wide : ''}>\r\n          <Skeleton\r\n            loading={loading}\r\n            title={false}\r\n            active\r\n            paragraph={{ rows: 3 }}\r\n            avatar={{ size: 'large', shape: 'circle' }}\r\n          >\r\n            {hiddenBreadcrumb ? null : <BreadcrumbView {...this.props} />}\r\n            <div className={styles.detail}>\r\n              {logo && <div className={styles.logo}>{logo}</div>}\r\n              <div className={styles.main}>\r\n                <div className={styles.row}>\r\n                  {title && <h1 className={styles.title}>{title}</h1>}\r\n                  {action && <div className={styles.action}>{action}</div>}\r\n                </div>\r\n                <div className={styles.row}>\r\n                  {content && <div className={styles.content}>{content}</div>}\r\n                  {extraContent && <div className={styles.extraContent}>{extraContent}</div>}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {tabList && tabList.length ? (\r\n              <Tabs\r\n                className={styles.tabs}\r\n                {...activeKeyProps}\r\n                onChange={this.onChange}\r\n                tabBarExtraContent={tabBarExtraContent}\r\n              >\r\n                {tabList.map(item => (\r\n                  <TabPane tab={item.tab} key={item.key} />\r\n                ))}\r\n              </Tabs>\r\n            ) : null}\r\n          </Skeleton>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Modal, Form, Input, Row, Col, InputNumber, Select } from 'antd';\r\nimport { injectIntl, FormattedMessage, defineMessages } from 'react-intl';\r\n\r\nimport {IP_REG, URL_REG ,IPPORT_REG, MAC_REG} from '../../../utils/utils'\r\nimport maxLength from '../../../utils/maxLength'\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nconst messages = defineMessages({\r\n  mark: {\r\n    id: 'common.mark',\r\n    defaultMessage: '备注'\r\n  },\r\n  select: {\r\n    id: 'common.select',\r\n    defaultMessage: '请选择',\r\n  },\r\n  deviceName: {\r\n    id: 'device.deviceName',\r\n    defaultMessage: '设备名称',\r\n  },\r\n  deviceNameRequired: {\r\n    id: 'device.deviceName.required',\r\n    defaultMessage: '请输入设备名称!',\r\n  },\r\n  deviceToken: {\r\n    id: 'device.deviceToken',\r\n    defaultMessage: '设备Token',\r\n  },\r\n  deviceTokenRequired: {\r\n    id: 'device.deviceToken.required',\r\n    defaultMessage: '请输入设备Token!',\r\n  },\r\n  deviceType: {\r\n    id: 'device.deviceType',\r\n    defaultMessage: '设备类型',\r\n  },\r\n  deviceTypeRequired: {\r\n    id: 'device.deviceType.required',\r\n    defaultMessage: '请选择设备类型!',\r\n  },\r\n  repeaterIP: {\r\n    id: 'device.repeaterIP',\r\n    defaultMessage: '继电器IP',\r\n  },\r\n  repeaterIPFormat: {\r\n    id: 'device.repeaterIP.format',\r\n    defaultMessage: '请输入正确格式的继电器IP地址和端口号!',\r\n  },\r\n  deviceIP: {\r\n    id: 'device.deviceIP',\r\n    defaultMessage: '设备IP',\r\n  },\r\n  deviceIPRequired: {\r\n    id: 'device.deviceIP.required',\r\n    defaultMessage: '请输入设备IP!',\r\n  },\r\n  deviceIPFormat: {\r\n    id: 'device.deviceIP.format',\r\n    defaultMessage: '请输入正确格式的IP地址!',\r\n  },\r\n  devicePort: {\r\n    id: 'device.devicePort',\r\n    defaultMessage: '设备端口',\r\n  },\r\n  devicePortRequired: {\r\n    id: 'device.devicePort.required',\r\n    defaultMessage: '请输入设备端口!',\r\n  },\r\n  position: {\r\n    id: 'device.position',\r\n    defaultMessage: '位置'\r\n  },\r\n  deviceMAC: {\r\n    id: 'device.deviceMAC',\r\n    defaultMessage: '设备MAC'\r\n  },\r\n  deviceMACFormat: {\r\n    id: 'device.deviceMAC.format',\r\n    defaultMessage: '请输入正确格式的MAC地址!'\r\n  },\r\n  pushAddress: {\r\n    id: 'device.pushAddress',\r\n    defaultMessage: '推送地址'\r\n  },\r\n  pushAddressFormat: {\r\n    id: 'device.pushAddress.format',\r\n    defaultMessage: '请输入正确格式的URL地址!'\r\n  },\r\n})\r\n\r\nconst EditForm = Form.create()(\r\n  class extends React.Component {\r\n    state = {};\r\n\r\n    /**\r\n     *渲染下拉单Option\r\n     *\r\n     */\r\n    // renderOptions = () => {\r\n    //   return deviceTypes.map(element =>\r\n    //     <Option key={element.type} value={element.type}>\r\n    //       <FormattedMessage id={element.id} defaultMessage={element.defaultMessage}/>\r\n    //     </Option>);\r\n    // };\r\n\r\n    render() {\r\n      const {\r\n        visible,\r\n        onCancel,\r\n        onCreate,\r\n        form,\r\n        formData,\r\n        confirmLoading,\r\n      } = this.props;\r\n      \r\n      const { getFieldDecorator } = form;\r\n\r\n      let model = formData || {};\r\n\r\n      const formItemLayout = {\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 6 }\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 18 }\r\n        }\r\n      };\r\n\r\n      return (\r\n        <Modal\r\n          visible={visible}\r\n          title={model.title}\r\n          onCancel={onCancel}\r\n          onOk={onCreate}\r\n          width={460}\r\n          confirmLoading={confirmLoading}\r\n          destroyOnClose={true}\r\n        >\r\n          <Form>\r\n            <Row gutter={16}>\r\n              <Col span={24}>\r\n                {getFieldDecorator('equipment_id', {\r\n                  initialValue: model.equipment_id\r\n                  })(<Input type=\"hidden\"/>)}\r\n                  <FormItem {...formItemLayout} label={<FormattedMessage {...messages.deviceName}/>}>\r\n                  {getFieldDecorator('equipment_name', {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: <FormattedMessage {...messages.deviceNameRequired}/>\r\n                      }\r\n                    ],\r\n                    initialValue: model.equipment_name\r\n                  })(<Input maxLength={maxLength.deviceName}/>)}\r\n                  </FormItem>\r\n                  <FormItem {...formItemLayout} label={<FormattedMessage {...messages.deviceToken}/>}>\r\n                  {getFieldDecorator('device_id', {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: <FormattedMessage {...messages.deviceTokenRequired}/>\r\n                      },\r\n                    ],\r\n                    initialValue: model.device_id\r\n                  })(<Input maxLength={maxLength.deviceToken}/>)}\r\n                  </FormItem>\r\n                  <FormItem {...formItemLayout} label={<FormattedMessage {...messages.deviceIP}/>}>\r\n                  {getFieldDecorator('ip', {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: <FormattedMessage {...messages.deviceIPRequired}/>\r\n                      },\r\n                      {\r\n                        pattern: IP_REG,\r\n                        message: <FormattedMessage {...messages.deviceIPFormat}/>\r\n                      }\r\n                    ],\r\n                    initialValue: model.ip\r\n                  })(<Input maxLength={maxLength.IP}/>)}\r\n                  </FormItem>\r\n                  <FormItem {...formItemLayout} label={<FormattedMessage {...messages.devicePort}/>}>\r\n                  {getFieldDecorator('port', {\r\n                    // rules: [\r\n                    //   {\r\n                    //     required: true,\r\n                    //     message: <FormattedMessage {...messages.devicePortRequired}/>\r\n                    //   }\r\n                    // ],\r\n                    initialValue: model.port\r\n                  })(<InputNumber maxLength={maxLength.port} style={{width: '100%'}} min={0} max={99999}/>)}\r\n                  </FormItem>\r\n                  <FormItem {...formItemLayout} label={<FormattedMessage {...messages.position}/>}>\r\n                  {getFieldDecorator('position', {\r\n                    initialValue: model.position\r\n                  })(<Input maxLength={maxLength.devicePosition}/>)}\r\n                  </FormItem>\r\n              </Col>\r\n              {/* <Col span={12}>\r\n                todo 点击预览\r\n              </Col> */}\r\n            </Row>\r\n          </Form>\r\n        </Modal>\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nexport default injectIntl(EditForm);\r\n","import React from 'react';\r\nimport { Form, Input, Button, Select } from 'antd';\r\nimport { injectIntl, FormattedMessage, defineMessages } from 'react-intl';\r\nimport { loadState } from '../../../../utils/localStorage';\r\nimport maxLength from '../../../../utils/maxLength'\r\nimport SelectAccount from '../../../../components/SelectAccount';\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nconst messages = defineMessages({\r\n  sourceAccount: {\r\n    id: 'account.sourceAccount',\r\n    defaultMessage: '所属账户'\r\n  },\r\n  all: {\r\n    id: 'common.all',\r\n    defaultMessage: '全部',\r\n  },\r\n  search: {\r\n    id: 'common.search',\r\n    defaultMessage: '查询'\r\n  },\r\n  personnelName: {\r\n    id: 'personnel.name',\r\n    defaultMessage: '姓名',\r\n  },\r\n})\r\n\r\nconst SearchForm = Form.create()(\r\n  class extends React.Component {\r\n    state = {};\r\n\r\n    onAccountChange = (value) => {\r\n      const form = this.props.form\r\n      form.setFieldsValue({\r\n        account_id: value[value.length - 1]\r\n      })\r\n    }\r\n\r\n    render() {\r\n      const {\r\n        form,\r\n        formData,\r\n      } = this.props;\r\n      \r\n      const { getFieldDecorator } = form;\r\n\r\n      let model = formData || {};\r\n      const userInfo = loadState('userInfo', true);\r\n\r\n      return (\r\n        <Form onSubmit={this.props.handleSearch} layout=\"inline\" style={{display: 'flex', padding: '5px', alignItems: 'center'}}>\r\n            {(loadState('userInfo', true) || {}).role !== 3 && \r\n            <React.Fragment>\r\n              {getFieldDecorator('account_id', {\r\n                initialValue: userInfo.account_id,\r\n              })(<Input type=\"hidden\"/>)}\r\n              <FormItem label={<FormattedMessage {...messages.sourceAccount}/>}>\r\n                {getFieldDecorator('account_ids', {\r\n                  initialValue: [userInfo.account_id],\r\n                })(\r\n                  <SelectAccount onChange={this.onAccountChange}/>\r\n                )}\r\n              </FormItem>\r\n            </React.Fragment>}\r\n\r\n            <FormItem label={<FormattedMessage {...messages.personnelName}/>}>\r\n              {getFieldDecorator('people_name')(\r\n                <Input  maxLength={maxLength.userName}/>\r\n              )}\r\n            </FormItem>\r\n            <Button icon=\"search\" htmlType=\"submit\" type=\"primary\"><FormattedMessage {...messages.search}/></Button>\r\n        </Form>\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nexport default injectIntl(SearchForm);\r\n","import React, {Component} from 'react'\r\nimport {Badge} from 'antd'\r\nimport TabTableModal from '../../../../components/TabTableModal'\r\nimport PhotoBox from '../../../../components/PhotoBox'\r\nimport { injectIntl, FormattedMessage, defineMessages } from 'react-intl';\r\nimport { loadState } from '../../../../utils/localStorage';\r\n\r\n\r\nimport {\r\n  binding,\r\n  unbinding,\r\n  getBoundPeopleList\r\n} from '../../../../api/binding'\r\nimport { message } from 'antd';\r\n\r\nimport Search from './Search'\r\n\r\nconst wordBreak = {wordBreak:'break-all', wordWrap:'break-word'}\r\n\r\nconst messages = defineMessages({\r\n  personnelName: {\r\n    id: 'personnel.name',\r\n    defaultMessage: '姓名',\r\n  },\r\n  photo: {\r\n    id: 'personnel.photo',\r\n    defaultMessage: '照片',\r\n  },\r\n  identifier: {\r\n    id: 'common.identifier',\r\n    defaultMessage: '编号'\r\n  },\r\n  sourceAccount: {\r\n    id: 'account.sourceAccount',\r\n    defaultMessage: '所属账户'\r\n  },\r\n  status: {\r\n    id: 'common.status',\r\n    defaultMessage: '状态'\r\n  },\r\n  registered: {\r\n    id:'common.registered',\r\n    defaultMessage: '已注册'\r\n  },\r\n  rejected: {\r\n    id: 'common.rejected',\r\n    defaultMessage: '已拒绝'\r\n  },\r\n  approvalPending: {\r\n    id: 'common.approvalPending',\r\n    defaultMessage: '待审批'\r\n  },\r\n  relateSuccess: {\r\n    id: 'common.relate.success',\r\n    defaultMessage: '关联成功!'\r\n  },\r\n  relateError: {\r\n    id: 'common.relate.error',\r\n    defaultMessage: '关联失败!'\r\n  },\r\n  cancelRelateSuccess: {\r\n    id: 'common.cancelRelate.success',\r\n    defaultMessage: '取消关联成功!'\r\n  },\r\n  cancelRelateError: {\r\n    id: 'common.cancelRelate.error',\r\n    defaultMessage: '取消关联失败!'\r\n  },\r\n  relatePeople: {\r\n    id: 'device.relatePeople',\r\n    defaultMessage: '关联人员'\r\n  },\r\n  relatedPeopleNumberAlready: {\r\n    id: 'device.relatedPeopleNumberAlready',\r\n    defaultMessage: '已关联人员数'\r\n  },\r\n  related: {\r\n    id: 'common.related',\r\n    defaultMessage: '已关联'\r\n  },\r\n  unrelated: {\r\n    id: 'common.unrelated',\r\n    defaultMessage: '未关联'\r\n  },\r\n  relate: {\r\n    id: 'common.relate',\r\n    defaultMessage: '关联'\r\n  },\r\n  cancelRelate: {\r\n    id: 'common.cancelRelate',\r\n    defaultMessage: '取消关联'\r\n  },\r\n  relatedDeviceNumber: {\r\n    id: 'device.relatedDeviceNumber',\r\n    defaultMessage: '关联设备数'\r\n  }\r\n})\r\n\r\nconst columns = [\r\n  {\r\n    title: <FormattedMessage {...messages.personnelName}/>,\r\n    dataIndex: 'people_name',\r\n    width: 100,\r\n    render: (text, record) =>\r\n    <React.Fragment>\r\n      <div style={wordBreak}>{text}</div>\r\n    </React.Fragment>\r\n  },\r\n  {\r\n    title: <FormattedMessage {...messages.photo}/>,\r\n    dataIndex: 'thumbnail',\r\n    width: 100,\r\n    render: (text, record) =>\r\n    <React.Fragment>\r\n      {record.image && <PhotoBox photo={record.thumbnail} width={50} height={50}/>}\r\n    </React.Fragment>\r\n  },\r\n  {\r\n    title: <FormattedMessage {...messages.identifier}/>,\r\n    dataIndex: 'people_id',\r\n    width: 100,\r\n  },\r\n  {\r\n    title: <FormattedMessage {...messages.sourceAccount}/>,\r\n    dataIndex: 'account_name',\r\n    width: 100,\r\n    render: (text, record) =>\r\n    <React.Fragment>\r\n      <div style={wordBreak}>{text}</div>\r\n    </React.Fragment>\r\n  },\r\n  {\r\n    title: <FormattedMessage {...messages.status}/>,\r\n    dataIndex: 'approval',\r\n    width: 100,\r\n    render: (text, record) => (\r\n      <React.Fragment>\r\n        <Badge status={['success','processing','error'][text - 1]} />\r\n        {[\r\n          <FormattedMessage {...messages.registered}/>,\r\n          <FormattedMessage {...messages.approvalPending}/>,\r\n          <FormattedMessage {...messages.rejected}/>][text - 1]}\r\n      </React.Fragment>\r\n    ),\r\n  },\r\n]\r\n\r\nclass BindPeople extends Component {\r\n  // 关联人员\r\n  binding = (data, callback) => {\r\n    binding({\r\n      people_ids: data,\r\n      equipment_ids: [this.props.equipmentId]\r\n    }).then((res) => {\r\n      if (res.code === 1000) {\r\n        message.success(this.props.intl.formatMessage(messages.relateSuccess))\r\n        // 执行回调重新加载列表\r\n        callback && callback()\r\n      } else {\r\n        message.error(res.msg || this.props.intl.formatMessage(messages.relateError))\r\n      }\r\n    }).catch(e => {\r\n      console.log(e)\r\n    })\r\n  }\r\n\r\n  // 取消关联人员\r\n  unbinding = (data, callback) => {\r\n    unbinding({\r\n      people_ids: data,\r\n      equipment_ids: [this.props.equipmentId]\r\n    }).then((res) => {\r\n      if (res.code === 1000) {\r\n        message.success(this.props.intl.formatMessage(messages.cancelRelateSuccess))\r\n        // 执行回调重新加载列表\r\n        callback && callback()\r\n      } else {\r\n        message.error(res.msg || this.props.intl.formatMessage(messages.cancelRelateError))\r\n      }\r\n    }).catch(e => {\r\n      console.log(e)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      visible,\r\n      onCancel,\r\n      uuid,\r\n      equipmentId\r\n    } = this.props\r\n\r\n    const userInfo = loadState('userInfo', true);\r\n    const role = userInfo.role;\r\n    const account_id = userInfo.account_id;\r\n    const initParams = {\r\n      account_id: account_id,\r\n      account_ids: [account_id],\r\n    }\r\n\r\n    return (\r\n      <TabTableModal\r\n        title={<FormattedMessage {...messages.relatePeople}/>}\r\n        tabTitles={[<FormattedMessage {...messages.related}/>,<FormattedMessage {...messages.unrelated}/>]}\r\n        tabParams={[{binding: 1},{binding: 0}]}\r\n        visible={visible} \r\n        onCancel={onCancel}\r\n        columns={columns}\r\n        key={uuid}\r\n        responseKey=\"peoples\"\r\n        rowKey=\"people_id\"\r\n        totalLabel={`${this.props.intl.formatMessage(messages.relatedPeopleNumberAlready)}：`}\r\n        operateLabels={[<FormattedMessage {...messages.cancelRelate}/>,<FormattedMessage {...messages.relate}/>]}\r\n        operateActions={[this.unbinding, this.binding]}\r\n        requestMethod={getBoundPeopleList}\r\n        requestParams={{equipment_id: equipmentId, approval: 1}}\r\n        initParams = {initParams}\r\n        requiredParamKeyName=\"equipment_id\"\r\n        formComponent={Search}/>\r\n    )\r\n  }\r\n}\r\n\r\nexport default injectIntl(BindPeople)","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Table, Divider, Popconfirm, Form, Card, Row, Col, Input, Button, message, Select,Badge } from 'antd';\r\nimport { injectIntl, FormattedMessage, defineMessages } from 'react-intl';\r\n\r\nimport PageHeader from '../../../components/PageHeader';\r\nimport ListHeader from '../../../components/ListHeader';\r\nimport ImageViewer from '../../../components/ImageViewer';\r\nimport SelectAccount from '../../../components/SelectAccount';\r\n\r\nimport maxLength from '../../../utils/maxLength'\r\n\r\n// 添加/编辑Modal\r\nimport EditForm from './EditForm';\r\nimport BindPeople from './BindPeople'\r\n\r\n// 预览Modal\r\n// import ViewForm from './ViewForm';\r\n\r\nimport { \r\n  getEquipments,\r\n  addEquipment,\r\n  updateEquipment,\r\n  getEquipmentInfo,\r\n  deleteEquipment,\r\n  openDoor,\r\n  closeDoor,\r\n  resetPwd,\r\n  syncPeople,\r\n  previewDevice,\r\n} from '../../../api/equipment';\r\n\r\nimport { cancelApiRequsets } from '../../../utils/fetch';\r\nimport { loadState } from '../../../utils/localStorage';\r\nimport { fixUndefinedData, paginationOption, base64Prefix } from '../../../utils/utils';\r\n\r\nimport styles from './index.module.scss';\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nconst messages = defineMessages({\r\n  total: {\r\n    id: 'common.total',\r\n    defaultMessage: '总计'\r\n  },\r\n  items: {\r\n    id: 'common.items',\r\n    defaultMessage: '项'\r\n  },\r\n  operate: {\r\n    id: 'common.operate',\r\n    defaultMessage: '操作',\r\n  },\r\n  delete: {\r\n    id: 'common.delete',\r\n    defaultMessage: '删除',\r\n  },\r\n  deleteConfirm: {\r\n    id: 'common.delete.confirm',\r\n    defaultMessage: '确定删除吗?'\r\n  },\r\n  deleteSuccess: {\r\n    id: 'common.delete.success',\r\n    defaultMessage: '删除成功!'\r\n  },\r\n  deleteError: {\r\n    id: 'common.delete.error',\r\n    defaultMessage: '删除失败了!',\r\n  },\r\n  edit: {\r\n    id: 'common.edit',\r\n    defaultMessage: '编辑',\r\n  },\r\n  search: {\r\n    id: 'common.search',\r\n    defaultMessage: '查询',\r\n  },\r\n  reset: {\r\n    id: 'common.reset',\r\n    defaultMessage: '重置'\r\n  },\r\n  add: {\r\n    id: 'common.add',\r\n    defaultMessage: '添加'\r\n  },\r\n  update: {\r\n    id: 'common.update',\r\n    defaultMessage: '更新'\r\n  },\r\n  success: {\r\n    id: 'common.success',\r\n    defaultMessage: '成功!'\r\n  },\r\n  failed: {\r\n    id: 'common.failed',\r\n    defaultMessage: '失败了!'\r\n  },\r\n  failedToGetData: {\r\n    id: 'common.error.failedToGetData',\r\n    defaultMessage: '获取数据失败!'\r\n  },\r\n  deviceList: {\r\n    id: 'device.deviceList',\r\n    defaultMessage: '设备列表',\r\n  },\r\n  deviceName: {\r\n    id: 'device.deviceName',\r\n    defaultMessage: '设备名称',\r\n  },\r\n  deviceID: {\r\n    id: 'device.deviceID',\r\n    defaultMessage: '设备ID',\r\n  },\r\n  deviceIP: {\r\n    id: 'device.deviceIP',\r\n    defaultMessage: '设备IP',\r\n  },\r\n  devicePort: {\r\n    id: 'device.devicePort',\r\n    defaultMessage: '设备端口',\r\n  },\r\n  connectStatus: {\r\n    id: 'device.connectStatus',\r\n    defaultMessage: '连接状态'\r\n  },\r\n  sourceAccount: {\r\n    id: 'account.sourceAccount',\r\n    defaultMessage: '所属账户'\r\n  },\r\n  openDoor: {\r\n    id: 'device.openDoor',\r\n    defaultMessage: '开门',\r\n  },\r\n  openDoorSuccess: {\r\n    id: 'device.openDoor.success',\r\n    defaultMessage: '开门成功!',\r\n  },\r\n  openDoorError: {\r\n    id: 'device.openDoor.error',\r\n    defaultMessage: '开门失败!',\r\n  },\r\n  emergencyOpen: {\r\n    id: 'device.openDoor',\r\n    defaultMessage: '开门',\r\n  },\r\n  cancelOpen: {\r\n    id: 'device.closeDoor',\r\n    defaultMessage: '关门',\r\n  },\r\n  resetPassword: {\r\n    id: 'device.resetPassword',\r\n    defaultMessage: '重置密码',\r\n  },\r\n  resetPasswordSuccess: {\r\n    id: 'device.resetPassword.success',\r\n    defaultMessage: '重置密码成功!',\r\n  },\r\n  resetPasswordError: {\r\n    id: 'device.resetPassword.error',\r\n    defaultMessage: '重置密码失败!',\r\n  },\r\n  relatePeople: {\r\n    id: 'device.relatePeople',\r\n    defaultMessage: '关联人员',\r\n  },\r\n  deviceDetail: {\r\n    id: 'device.deviceDetail',\r\n    defaultMessage: '设备详情',\r\n  },\r\n  addDevice: {\r\n    id: 'device.addDevice',\r\n    defaultMessage: '添加设备',\r\n  },\r\n  editDevice: {\r\n    id: 'device.editDevice',\r\n    defaultMessage: '编辑设备',\r\n  },\r\n  relatedPeopleNumber: {\r\n    id: 'device.relatedPeopleNumber',\r\n    defaultMessage: '关联人员数'\r\n  },\r\n  remoteCommand: {\r\n    id: 'device.remoteCommand',\r\n    defaultMessage: '远程指令'\r\n  },\r\n  all: {\r\n    id: 'common.all',\r\n    defaultMessage: '全部'\r\n  },\r\n  online: {\r\n    id: 'common.online',\r\n    defaultMessage: '在线'\r\n  },\r\n  offline: {\r\n    id: 'common.offline',\r\n    defaultMessage: '离线'\r\n  },\r\n  syncPeople: {\r\n    id: 'device.peopleSync',\r\n    defaultMessage: '同步人员',\r\n  },\r\n  syncPeopleSuccess: {\r\n    id: 'device.peopleSync.success',\r\n    defaultMessage: '同步成功!',\r\n  },\r\n  syncPeopleError: {\r\n    id: 'device.peopleSync.error',\r\n    defaultMessage: '同步失败!',\r\n  },\r\n  sysVersion: {\r\n    id: 'device.sysVersion',\r\n    defaultMessage: '系統版本',\r\n  },\r\n  preview: {\r\n    id: 'common.preview',\r\n    defaultMessage: '预览',\r\n  },\r\n})\r\n\r\nconst useInfo = loadState('userInfo', true) || {}\r\n\r\nclass DeviceManage extends React.Component {\r\n  columns = [\r\n    {\r\n      title: <FormattedMessage {...messages.deviceName} />,\r\n      dataIndex: 'equipment_name',\r\n      render: (text, record) => (\r\n        <React.Fragment>\r\n          <span className={styles.wordBreak}>{text}</span>\r\n        </React.Fragment>\r\n      )\r\n      // render: (text, record) => (\r\n      //   <React.Fragment>\r\n      //     <a href=\"javascript:;\" onClick={() => this.showViewModal(record)}>\r\n      //       {text}\r\n      //     </a>\r\n      //   </React.Fragment>\r\n      // )\r\n    },\r\n    {\r\n      title: <FormattedMessage {...messages.deviceID} />,\r\n      dataIndex: 'equipment_id',\r\n    },\r\n    {\r\n      title: <FormattedMessage {...messages.deviceIP} />,\r\n      dataIndex: 'ip'\r\n    },\r\n    {\r\n      title: <FormattedMessage {...messages.devicePort} />,\r\n      dataIndex: 'port'\r\n    },\r\n    // {\r\n    //   title: <FormattedMessage {...messages.sysVersion} />,\r\n    //   dataIndex: 'version'\r\n    // },\r\n    {\r\n      title:  <FormattedMessage {...messages.connectStatus} />,\r\n      dataIndex: 'status',\r\n      render: (text,record) => (\r\n        <React.Fragment>\r\n          <Badge status={['success','error'][text - 1]} />\r\n          {[<FormattedMessage {...messages.online} />, <FormattedMessage {...messages.offline} />][text-1]}\r\n          {text === 1 && <a href=\"javascript:;\" className={styles.photoPic} onClick={() => this.photo(record.equipment_id)}>\r\n            <FormattedMessage {...messages.preview} />\r\n          </a>}\r\n        </React.Fragment>\r\n      )\r\n    },\r\n    {\r\n      title:  <FormattedMessage {...messages.sourceAccount} />,\r\n      dataIndex: 'account_name',\r\n      render: (text, record) => (\r\n        <React.Fragment>\r\n          <span className={styles.wordBreak}>{text}</span>\r\n        </React.Fragment>\r\n      )\r\n    },\r\n    {\r\n      title: <FormattedMessage {...messages.relatedPeopleNumber} />,\r\n      dataIndex: 'people_number',\r\n    },\r\n    {\r\n      title:  <FormattedMessage {...messages.operate} />,\r\n      dataIndex: 'operate',\r\n      render: (text, record) => (\r\n        <React.Fragment>\r\n          <a href=\"javascript:;\" className={styles.operatorLink} onClick={() =>this.showSelectModal(record.equipment_id)}>\r\n          <FormattedMessage {...messages.relatePeople} />\r\n          </a>\r\n\r\n          <a href=\"javascript:;\" className={styles.operatorLink} onClick={() => this.showEditModal(record)}>\r\n            <FormattedMessage {...messages.edit} />\r\n          </a>\r\n\r\n          <Popconfirm\r\n            className={styles.operatorLink}\r\n            title={<FormattedMessage {...messages.deleteConfirm} />}\r\n            onConfirm={() => this.onDelete(record.equipment_id)}\r\n          >\r\n            <a href=\"javascript:;\"><FormattedMessage {...messages.delete} /></a>\r\n          </Popconfirm>\r\n        </React.Fragment>\r\n      )\r\n    },\r\n    {\r\n      title: <FormattedMessage {...messages.remoteCommand} />,\r\n      dataIndex: 'remoteCommand',\r\n      render: (text, record) => (\r\n        <React.Fragment>\r\n          <a href=\"javascript:;\" className={styles.operatorLink} onClick={() => this.onResetPwd(record.equipment_id)}>\r\n            <FormattedMessage {...messages.resetPassword} />\r\n          </a>\r\n          <a href=\"javascript:;\" className={styles.operatorLink} onClick={() => this.onOperateDoor(record)}>\r\n          {\r\n            record.door_status === 0 ?\r\n            <FormattedMessage {...messages.emergencyOpen} /> : \r\n            <FormattedMessage {...messages.cancelOpen} />\r\n          }\r\n          </a>\r\n          <a href=\"javascript:;\" onClick={() => this.onSync(record.equipment_id)}><FormattedMessage {...messages.syncPeople} /></a>\r\n        </React.Fragment>\r\n      )\r\n    },\r\n  ];\r\n\r\n  queryStrings = this.props.location.query || {}\r\n  accountId = this.queryStrings.account_id || ''\r\n  parentId = this.queryStrings.parent_id || ''\r\n\r\n\r\n\r\n  state = {\r\n    loading: false,\r\n    confirmLoading: false,\r\n    locked: false,\r\n    // 是否显示添加/编辑Modal\r\n    showEdit: false,\r\n    // 是否显示预览Modal\r\n    showView: false,\r\n    // 是否显示预览\r\n    previewData: {},\r\n    // 设备列表\r\n    equipments: [],\r\n    bindKey: Date.now(),\r\n    // 表格搜索框表单\r\n    search_form: {},\r\n    total: 0,\r\n    page_number: 1,\r\n    page_size: paginationOption.defaultPageSize,\r\n    isSelectVisible: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const initAccountIds = this.getInitAccountIds();\r\n    const form = this.props.form;\r\n    const accountId =initAccountIds.slice(-1)[0]\r\n    this.setState({\r\n      search_form: {\r\n        account_ids: initAccountIds,\r\n        account_id: accountId,\r\n      }\r\n    });\r\n    form.setFieldsValue({\r\n      account_ids: initAccountIds,\r\n      account_id: accountId,\r\n    }, () => {\r\n      this._loadAsyncData();\r\n    })\r\n  }\r\n\r\n  onAccountChange = (value) => {\r\n    const form = this.props.form\r\n    form.setFieldsValue({\r\n      account_id: value[value.length - 1]\r\n    })\r\n  }\r\n\r\n  getInitAccountIds = () => {\r\n    const userInfo = loadState('userInfo', true);\r\n    const role = userInfo.role;\r\n    const account_id = userInfo.account_id;\r\n    let res = [account_id];\r\n    // 当前是admin,连接中存在accountId,说明是admin查看子账号的人数/设备数\r\n    if (role === 1 && this.accountId) {\r\n      if (this.parentId) {\r\n        res.push(Number(this.parentId))\r\n      }\r\n      res.push(this.accountId)\r\n    }\r\n    return res\r\n  }\r\n\r\n\r\n  photo = (id) => {\r\n    this.setState({ previewData: {\r\n      isLoading: true,\r\n      imageUrl: '',\r\n      isOpen: true,\r\n    }});\r\n    previewDevice(id).then((res) => {\r\n      if (res.code === 1000) {\r\n        this.setState({\r\n          previewData: {\r\n            isLoading: false,\r\n            isOpen: true,\r\n            imageUrl: base64Prefix(res.data.image),\r\n          }\r\n        })\r\n      } else {\r\n        this.setState({\r\n          previewData: {\r\n            isLoading: false,\r\n            isOpen: false,\r\n            imageUrl: '',\r\n          }\r\n        })\r\n        message.error(res.msg || this.props.intl.formatMessage(messages.failedToGetData))\r\n      }\r\n    }).catch(e => {\r\n      message.error(this.props.intl.formatMessage(messages.failedToGetData))\r\n    });\r\n  };\r\n\r\n  /**\r\n   * 渲染表格搜索框\r\n   */\r\n  renderSimpleForm() {\r\n    const {\r\n      form: { getFieldDecorator }\r\n    } = this.props;\r\n\r\n    \r\n    return (\r\n      <Form onSubmit={this.handleSearch} layout=\"inline\">\r\n        <Row gutter={{ md: 8, lg: 24, xl: 48 }}>\r\n        {(loadState('userInfo', true) || {}).role !== 3 && <Col md={8} sm={24}>\r\n          {getFieldDecorator('account_id')(<Input type=\"hidden\"/>)}\r\n          <FormItem label={<FormattedMessage {...messages.sourceAccount}/>}>\r\n            {getFieldDecorator('account_ids')(\r\n              <SelectAccount onChange={this.onAccountChange}/>\r\n            )}\r\n          </FormItem>\r\n          </Col>}\r\n          <Col md={8} sm={24}>\r\n            <FormItem label={<FormattedMessage {...messages.deviceName} />}>\r\n              {getFieldDecorator('equipment_name')(\r\n                <Input maxLength={maxLength.deviceName}/>\r\n              )}\r\n            </FormItem>\r\n          </Col>\r\n          <Col md={8} sm={24}>\r\n            <span>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                <FormattedMessage  {...messages.search}/>\r\n              </Button>\r\n              <Button style={{ marginLeft: 8 }} onClick={this.handleFormReset}>\r\n                <FormattedMessage  {...messages.reset}/>\r\n              </Button>\r\n            </span>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    cancelApiRequsets();\r\n  }\r\n\r\n  /**\r\n   * 获取设备详情\r\n   * @param {Number} id 设备ID\r\n   */\r\n  getInfo(id) {\r\n    return new Promise((resolve, reject) => {\r\n      getEquipmentInfo(id).then((res) => {\r\n        if (res.code === 1000) {\r\n          resolve(res.data)\r\n        } else {\r\n          reject(res.msg)\r\n        }\r\n      }).catch((e) => {\r\n        reject(this.props.intl.formatMessage(messages.failedToGetData))\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n  closeImage = () => {\r\n    this.setState({\r\n      previewData: {\r\n        isOpen: false,\r\n        isLoading: false,\r\n        imageUrl: ''\r\n      }\r\n    })\r\n  }\r\n\r\n  onSync = (id) => {\r\n    syncPeople(id).then(res => {\r\n      if (res.code === 1000) {\r\n        message.success(this.props.intl.formatMessage(messages.syncPeopleSuccess))\r\n      } else {\r\n        message.error(res.msg || this.props.intl.formatMessage(messages.syncPeopleError))\r\n      }\r\n    }).catch(err => {\r\n      message.error(this.props.intl.formatMessage(messages.syncPeopleError))\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 获取列表数据\r\n   */\r\n  _loadAsyncData() {\r\n    this.setState({\r\n      loading:true,\r\n    })\r\n\r\n    let equipments = []\r\n    let { page_number, page_size, search_form = {} } = this.state;\r\n\r\n    getEquipments({page_number, page_size, ...search_form}).then((res) => {\r\n      let data = res.data;\r\n      if (res.code === 1000) {\r\n        equipments = data.equipments || [];\r\n        let total = data.total_number || 0;\r\n        this.setState({\r\n          equipments,\r\n          total,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          equipments: []\r\n        })\r\n        message.error(res.msg || this.props.intl.formatMessage(messages.failedToGetData))\r\n      }\r\n    }).catch((e) => {\r\n      message.error(this.props.intl.formatMessage(messages.failedToGetData))\r\n    }).finally(() => {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 提交列表查询\r\n   * @param {Object} e 事件对象\r\n   */\r\n  handleSearch = e => {\r\n    e.preventDefault();\r\n\r\n    const { form } = this.props;\r\n    \r\n    form.validateFields((err, fieldsValue) => {\r\n      if (err) return;\r\n      this.setState(\r\n        {\r\n          search_form: fieldsValue\r\n        },\r\n        this._loadAsyncData\r\n      );\r\n    });\r\n  };\r\n\r\n\r\n  /**\r\n   * 重置设备密码\r\n   * @param {Number} id 设备ID\r\n   */\r\n  onResetPwd = id => {\r\n    if (this.state.locked) {\r\n      return\r\n    }\r\n    this.setState({\r\n      locked: true\r\n    })\r\n    const formatMessage = this.props.intl.formatMessage\r\n    resetPwd(id).then((res) => {\r\n      if (res.code === 1000) {\r\n        message.success(formatMessage(messages.resetPasswordSuccess))\r\n      } else {\r\n        message.error(res.msg || formatMessage(messages.resetPasswordError))\r\n      }\r\n      this.setState({\r\n        locked: false\r\n      })\r\n    }).catch((e) => {\r\n      message.error(formatMessage(messages.resetPasswordError))\r\n      this.setState({\r\n        locked: false\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 处理页码变化\r\n   * @param {Object} pagination 分页配置项\r\n   */\r\n  handleTableChange = (pagination, filtersArg, sorter) => {\r\n    let { page_number, page_size } = this.state;\r\n\r\n    if (page_size !== pagination.pageSize) {\r\n      // page size changed, then reset page number to 1\r\n      page_number = 1;\r\n    } else {\r\n      page_number = pagination.current;\r\n    }\r\n\r\n    page_size = pagination.pageSize;\r\n\r\n    this.setState(\r\n      {\r\n        page_number,\r\n        page_size\r\n      },\r\n      this._loadAsyncData\r\n    );\r\n  };\r\n\r\n  /**\r\n   * 请求设备详情接口并显示设备详情Modal\r\n   * @param {Object} record 设备详情\r\n   */\r\n  // showViewModal = (record) => {\r\n  //   if (this.state.locked) {\r\n  //     return\r\n  //   }\r\n  //   this.setState({\r\n  //     locked: true\r\n  //   })\r\n  //   this.getInfo(record.equipment_id).then((data) => {\r\n  //     let formData = {\r\n  //       title: <FormattedMessage {...messages.deviceDetail}/>,\r\n  //       ...data,\r\n  //     };\r\n  //     this.setState({ showView: true, formData, locked: false });\r\n  //   }).catch(e => {\r\n  //     message.error(e || this.props.intl.formatMessage(messages.failedToGetData))\r\n  //     this.setState({\r\n  //       locked: false\r\n  //     })\r\n  //   })\r\n  // };\r\n\r\n  /**\r\n   * 紧急常开/取消常开\r\n   * @param {Number} id 设备ID\r\n   */\r\n  onOperateDoor = record => {\r\n    if (this.state.locked) {\r\n      return\r\n    }\r\n    this.setState({\r\n      locked: true\r\n    })\r\n    const formatMessage = this.props.intl.formatMessage\r\n    const id = record.equipment_id\r\n    let config = {\r\n      method: openDoor,\r\n      msg: formatMessage(messages.emergencyOpen)\r\n    }\r\n    if (record.door_status === 1) {\r\n      config = {\r\n        method: closeDoor,\r\n        msg: formatMessage(messages.cancelOpen)\r\n      }\r\n    }\r\n    (config.method)(id).then((res) => {\r\n      if (res.code === 1000) {\r\n        message.success(`${config.msg}${formatMessage(messages.success)}`)\r\n        this._loadAsyncData();\r\n      } else {\r\n        message.error(res.msg || `${config.msg}${formatMessage(messages.failed)}`)\r\n      }\r\n      this.setState({\r\n        locked: false\r\n      })\r\n    }).catch((e) => {\r\n      message.error(`${config.msg}${formatMessage(messages.failed)}`)\r\n      this.setState({\r\n        locked: false\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 列表查询重置\r\n   */\r\n  handleFormReset = () => {\r\n    const { form } = this.props;\r\n    form.resetFields();\r\n    this.setState(\r\n      {\r\n        search_form: {},\r\n        page_number: 1,\r\n      },\r\n      this._loadAsyncData\r\n    );\r\n  };\r\n\r\n  /**\r\n   * 删除设备\r\n   * @param {Number} id 设备ID\r\n   */\r\n  onDelete = id => {\r\n    const formatMessage = this.props.intl.formatMessage\r\n    deleteEquipment(id).then((res) => {\r\n      if (res.code === 1000) {\r\n        message.success(formatMessage(messages.deleteSuccess));\r\n        this._loadAsyncData();\r\n      } else {\r\n        message.error(res.msg || formatMessage(messages.deleteError));\r\n      }\r\n    })\r\n    .catch(error => {\r\n      // handle error\r\n      message.error(formatMessage(messages.deleteError));\r\n    })\r\n  };\r\n\r\n  /**\r\n   * 添加设备--打开Modal\r\n   */\r\n  showModal = () => {\r\n    let formData = {\r\n      title: <FormattedMessage {...messages.addDevice}/>\r\n    };\r\n    this.setState({ showEdit: true, formData });\r\n  };\r\n\r\n  /**\r\n   * 编辑设备，获取设备详情并打开Modal\r\n   * @param {Object} record 设备详情\r\n   */\r\n  showEditModal = (record) => {\r\n    if (this.state.locked) {\r\n      return\r\n    }\r\n    this.setState({\r\n      locked: true\r\n    })\r\n    this.getInfo(record.equipment_id).then((data) => {\r\n      let formData = {\r\n        title: <FormattedMessage {...messages.editDevice}/>,\r\n        ...data,\r\n      };\r\n      this.setState({ showEdit: true, formData, locked: false });\r\n    }).catch(e => {\r\n      message.error(e || this.props.intl.formatMessage(messages.failedToGetData))\r\n      this.setState({\r\n        locked: false\r\n      })\r\n    })\r\n  };\r\n\r\n  showSelectModal = (equipment_id) => {\r\n    this.setState({\r\n      selectedEquipmentId: equipment_id,\r\n      bindKey: Date.now(),\r\n    })\r\n    this.handleModal('isSelectVisible', true)\r\n  }\r\n\r\n  handleModal = (stateProps, flag) => {\r\n    this.setState({\r\n      [stateProps]: flag\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 设置ref\r\n   * @param {Object} formRef from组件\r\n   */\r\n  saveFormRef = formRef => {\r\n    this.formRef = formRef;\r\n  };\r\n\r\n  /**\r\n   * 添加/编辑设备，提交表单数据\r\n   */\r\n  handleCreate = () => {\r\n    const form = this.formRef.props.form;\r\n    const formatMessage = this.props.intl.formatMessage\r\n    form.validateFields((err, values) => {\r\n      if (err) {\r\n        return;\r\n      }\r\n      const data = fixUndefinedData({...values})\r\n      let method = addEquipment\r\n      let text = formatMessage(messages.add)\r\n\r\n      if (data.equipment_id) {\r\n        method = updateEquipment\r\n        text = formatMessage(messages.update)\r\n      }\r\n      this.setState({\r\n        confirmLoading: true,\r\n      })\r\n      method(data).then(res => {\r\n        if (res.code === 1000) {\r\n          message.success(`${text}${formatMessage(messages.success)}`);\r\n          this._loadAsyncData();\r\n          form.resetFields()\r\n          this.setState({ showEdit: false });\r\n        } else {\r\n          message.error(`${res.msg}` || `${text}${formatMessage(messages.failed)}`);\r\n        }\r\n        this.setState({\r\n          confirmLoading: false,\r\n        })\r\n      }).catch(error => {\r\n        message.error(`${text}${formatMessage(messages.failed)}`);\r\n        this.setState({\r\n          confirmLoading: false,\r\n        })\r\n      });\r\n    });\r\n  };\r\n\r\n  handleBindPeopleCancel = () => {\r\n    this.handleModal('isSelectVisible', false);\r\n    // 绑定人员后更新列表，因为列表中的关联人员数会更新\r\n    this._loadAsyncData()\r\n  }\r\n\r\n  render() {\r\n    const formatMessage = this.props.intl.formatMessage\r\n    const pageShowTotal = total => `${formatMessage(messages.total)} ${total} ${formatMessage(messages.items)}`\r\n    const {\r\n      showEdit,\r\n      formData,\r\n      bindKey,\r\n      showView,\r\n      loading,\r\n      equipments,\r\n      total,\r\n      page_number,\r\n      page_size,\r\n      confirmLoading,\r\n      previewData,\r\n    } = this.state\r\n    const pagination = {...paginationOption,total,current: page_number,page_size,showTotal: pageShowTotal}\r\n\r\n    return (\r\n      <React.Fragment>\r\n\r\n        <Card bordered={false}>\r\n        <div className={styles.tableList}>\r\n          <div className={styles.tableListForm}>\r\n            {this.renderSimpleForm()}\r\n          </div>\r\n\r\n          <ListHeader\r\n            title={<FormattedMessage {...messages.deviceList}/>}\r\n            buttonText={<FormattedMessage {...messages.add}/>}\r\n            buttonType=\"default\"\r\n            doAction={this.showModal}\r\n            buttonHide\r\n            style={{ marginBottom: 5 }}\r\n          />\r\n\r\n          <Table\r\n              rowKey=\"equipment_id\"\r\n              loading={loading}\r\n              columns={this.columns}\r\n              dataSource={equipments}\r\n              pagination={pagination}\r\n              onChange={this.handleTableChange}\r\n          />  \r\n          </div>\r\n        </Card>\r\n\r\n        <EditForm\r\n            wrappedComponentRef={this.saveFormRef}\r\n            visible={showEdit}\r\n            onCancel={() => this.handleModal('showEdit', false)}\r\n            onCreate={this.handleCreate}\r\n            formData={formData}\r\n            confirmLoading={confirmLoading}\r\n          />\r\n\r\n          {/* <ViewForm\r\n            visible={showView}\r\n            onCancel={() => this.handleModal('showView', false)}\r\n            formData={formData}\r\n          /> */}\r\n\r\n          <BindPeople\r\n            visible={this.state.isSelectVisible}\r\n            onCancel={this.handleBindPeopleCancel}\r\n            uuid={bindKey}\r\n            equipmentId={this.state.selectedEquipmentId}\r\n          />\r\n\r\n        <ImageViewer \r\n          imageUrl={previewData.imageUrl} \r\n          {...previewData}\r\n          onClose={this.closeImage}></ImageViewer>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default injectIntl(Form.create()(DeviceManage));\r\n"],"sourceRoot":""}