{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_to-index.js","webpack:///./node_modules/core-js/modules/_typed.js","webpack:///./node_modules/core-js/modules/es6.typed.uint8-array.js","webpack:///./node_modules/core-js/modules/es6.regexp.match.js","webpack:///./src/components/U-Upload.vue?b25f","webpack:///./node_modules/exif-js/exif.js","webpack:///./src/components/U-Upload.vue?326e","webpack:///./src/utils/uploadFix.js","webpack:///src/components/U-Upload.vue","webpack:///./src/components/U-Upload.vue?80e0","webpack:///./src/components/U-Upload.vue","webpack:///./node_modules/core-js/modules/_array-copy-within.js","webpack:///./node_modules/core-js/modules/_typed-array.js","webpack:///./node_modules/core-js/modules/_typed-buffer.js"],"names":["toInteger","__webpack_require__","toLength","module","exports","it","undefined","number","length","RangeError","Typed","global","hide","uid","TYPED","VIEW","ABV","ArrayBuffer","DataView","CONSTR","i","l","TypedArrayConstructors","split","prototype","init","data","byteOffset","this","anObject","advanceStringIndex","regExpExec","defined","MATCH","$match","maybeCallNative","regexp","O","fn","call","RegExp","String","res","done","value","rx","S","fullUnicode","unicode","lastIndex","result","A","n","matchStr","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_11_oneOf_1_0_node_modules_css_loader_index_js_ref_11_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_11_oneOf_1_2_node_modules_stylus_loader_index_js_ref_11_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_U_Upload_vue_vue_type_style_index_0_id_e6d83566_lang_stylus_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_11_oneOf_1_0_node_modules_css_loader_index_js_ref_11_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_11_oneOf_1_2_node_modules_stylus_loader_index_js_ref_11_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_U_Upload_vue_vue_type_style_index_0_id_e6d83566_lang_stylus_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","debug","EXIF","obj","EXIFwrapped","ExifTags","Tags","36864","40960","40961","40962","40963","37121","37122","37500","37510","40964","36867","36868","37520","37521","37522","33434","33437","34850","34852","34855","34856","37377","37378","37379","37380","37381","37382","37383","37384","37385","37396","37386","41483","41484","41486","41487","41488","41492","41493","41495","41728","41729","41730","41985","41986","41987","41988","41989","41990","41991","41992","41993","41994","41995","41996","40965","42016","TiffTags","256","257","34665","34853","258","259","262","274","277","284","530","531","282","283","296","273","278","279","513","514","301","318","319","529","532","306","270","271","272","305","315","33432","GPSTags","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","IFD1Tags","StringValues","ExposureProgram","MeteringMode","255","LightSource","Flash","31","32","65","69","71","73","77","79","89","93","95","SensingMethod","SceneCaptureType","SceneType","CustomRendered","WhiteBalance","GainControl","Contrast","Saturation","Sharpness","SubjectDistanceRange","FileSource","Components","imageHasData","img","base64ToArrayBuffer","base64","contentType","match","replace","binary","atob","len","buffer","view","Uint8Array","charCodeAt","objectURLToBlob","url","callback","http","XMLHttpRequest","open","responseType","onload","e","status","response","send","getImageData","handleBinaryFile","binFile","findEXIFinJPEG","exifdata","iptcdata","findIPTCinJPEG","isXmpEnabled","xmpdata","findXMPinJPEG","src","test","arrayBuffer","fileReader","FileReader","target","blob","readAsArrayBuffer","self","Blob","File","console","log","byteLength","file","dataView","getUint8","marker","offset","readEXIFData","getUint16","isFieldSegmentStart","nameHeaderLength","startOffset","sectionLength","readIPTCData","IptcFieldMap","120","110","55","80","85","122","105","116","fieldValue","fieldName","dataSize","segmentType","segmentStartPos","getInt16","getStringFromDB","hasOwnProperty","Array","push","readTags","tiffStart","dirStart","strings","bigEnd","entryOffset","tag","entries","tags","readTagValue","vals","val","numerator","denominator","type","numValues","getUint32","valueOffset","Number","getInt32","getNextIFDOffset","readThumbnailImage","firstIFDOffset","IFD1OffsetPointer","thumbTags","JpegIFOffset","JpegIFByteCount","tOffset","tLength","start","outstr","fromCharCode","exifData","gpsData","tiffOffset","ExifIFDPointer","GPSInfoIFDPointer","dom","DOMParser","xmpString","xmpEndIndex","indexOf","substring","indexOfXmp","slice","domDocument","parseFromString","xml2Object","xml2json","xml","json","nodeType","attributes","j","attribute","item","nodeName","nodeValue","hasChildNodes","childNodes","child","old","children","idx","itemAtt","dataKey","dataValue","textContent","message","enableXmp","disableXmp","getData","Image","HTMLImageElement","complete","getTag","getIptcTag","getAllTags","a","getAllIptcTags","pretty","strPretty","readFromBinaryFile","apply","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","max","auto","multiple","accept","processFile","simultaneous-uploads","on","file-submitted","onFileSubmitted","file-removed","onFileRemoved","files-added","onFilesAdded","model","$$v","expression","directives","name","rawName","staticRenderFns","uploadFix","rotateImg","direction","canvas","minStep","maxStep","height","width","step","degree","Math","PI","ctx","getContext","drawImage","rotate","compress","orientation","document","createElement","tCanvas","tctx","ratio","sqrt","fillStyle","fillRect","count","nw","nh","ndata","toDataURL","getOrientation","promise_default","resolve","Exif","orient","U_Uploadvue_type_script_lang_js_","loading","props","default","fileSubmitted","Function","fileRemoved","filesAdded","methods","$emit","next","then","needRotate","reader","utils_uploadFix","readAsDataURL","components_U_Uploadvue_type_script_lang_js_","component","Object","componentNormalizer","options","__file","__webpack_exports__","toObject","toAbsoluteIndex","copyWithin","to","from","end","arguments","min","inc","LIBRARY","fails","$export","$typed","$buffer","anInstance","propertyDesc","redefineAll","toIndex","toPrimitive","has","classof","isObject","isArrayIter","create","getPrototypeOf","gOPN","f","getIterFn","wks","createArrayMethod","createArrayIncludes","speciesConstructor","ArrayIterators","Iterators","$iterDetect","setSpecies","arrayFill","arrayCopyWithin","$DP","$GOPD","dP","gOPD","TypeError","ARRAY_BUFFER","SHARED_BUFFER","BYTES_PER_ELEMENT","PROTOTYPE","ArrayProto","$ArrayBuffer","$DataView","arrayForEach","arrayFilter","arraySome","arrayEvery","arrayFind","arrayFindIndex","arrayIncludes","arrayIndexOf","arrayValues","values","arrayKeys","keys","arrayEntries","arrayLastIndexOf","lastIndexOf","arrayReduce","reduce","arrayReduceRight","reduceRight","arrayJoin","join","arraySort","sort","arraySlice","arrayToString","toString","arrayToLocaleString","toLocaleString","ITERATOR","TAG","TYPED_CONSTRUCTOR","DEF_CONSTRUCTOR","ALL_CONSTRUCTORS","TYPED_ARRAY","WRONG_LENGTH","$map","allocate","LITTLE_ENDIAN","Uint16Array","FORCED_SET","set","toOffset","BYTES","validate","C","speciesFromList","list","fromList","index","addGetter","key","internal","get","_d","$from","source","iterator","aLen","mapfn","mapping","iterFn","$of","TO_LOCALE_BUG","$toLocaleString","proto","every","callbackfn","fill","filter","find","predicate","findIndex","forEach","searchElement","includes","separator","map","reverse","that","middle","floor","some","comparefn","subarray","begin","$begin","$slice","$set","arrayLike","$iterators","isTAIndex","$getDesc","$setDesc","desc","configurable","writable","enumerable","F","getOwnPropertyDescriptor","defineProperty","$TypedArrayPrototype$","constructor","KEY","wrapper","CLAMPED","NAME","GETTER","SETTER","TypedArray","Base","TAC","FORCED","TypedArrayPrototype","getter","v","o","setter","round","addElement","$offset","$length","klass","$len","b","iter","concat","$nativeIterator","CORRECT_ITER_NAME","$iterator","G","W","of","P","DESCRIPTORS","setToStringTag","DATA_VIEW","WRONG_INDEX","Infinity","BaseBuffer","abs","pow","LN2","BUFFER","BYTE_LENGTH","BYTE_OFFSET","$BUFFER","$LENGTH","$OFFSET","packIEEE754","mLen","nBytes","m","c","eLen","eMax","eBias","rt","s","unpackIEEE754","nBits","NaN","unpackI32","bytes","packI8","packI16","packI32","packF64","packF32","isLittleEndian","numIndex","intIndex","store","_b","pack","conversion","ArrayBufferProto","$setInt8","setInt8","getInt8","setUint8","bufferLength","getFloat32","getFloat64","setInt16","setUint16","setInt32","setUint32","setFloat32","setFloat64"],"mappings":"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","file":"js/chunk-0354f972.1a2122ef.js","sourcesContent":["// https://tc39.github.io/ecma262/#sec-toindex\nvar toInteger = require('./_to-integer');\nvar toLength = require('./_to-length');\nmodule.exports = function (it) {\n  if (it === undefined) return 0;\n  var number = toInteger(it);\n  var length = toLength(number);\n  if (number !== length) throw RangeError('Wrong length!');\n  return length;\n};\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar uid = require('./_uid');\nvar TYPED = uid('typed_array');\nvar VIEW = uid('view');\nvar ABV = !!(global.ArrayBuffer && global.DataView);\nvar CONSTR = ABV;\nvar i = 0;\nvar l = 9;\nvar Typed;\n\nvar TypedArrayConstructors = (\n  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'\n).split(',');\n\nwhile (i < l) {\n  if (Typed = global[TypedArrayConstructors[i++]]) {\n    hide(Typed.prototype, TYPED, true);\n    hide(Typed.prototype, VIEW, true);\n  } else CONSTR = false;\n}\n\nmodule.exports = {\n  ABV: ABV,\n  CONSTR: CONSTR,\n  TYPED: TYPED,\n  VIEW: VIEW\n};\n","require('./_typed-array')('Uint8', 1, function (init) {\n  return function Uint8Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","'use strict';\n\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar advanceStringIndex = require('./_advance-string-index');\nvar regExpExec = require('./_regexp-exec-abstract');\n\n// @@match logic\nrequire('./_fix-re-wks')('match', 1, function (defined, MATCH, $match, maybeCallNative) {\n  return [\n    // `String.prototype.match` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.match\n    function match(regexp) {\n      var O = defined(this);\n      var fn = regexp == undefined ? undefined : regexp[MATCH];\n      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\n    },\n    // `RegExp.prototype[@@match]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match\n    function (regexp) {\n      var res = maybeCallNative($match, regexp, this);\n      if (res.done) return res.value;\n      var rx = anObject(regexp);\n      var S = String(this);\n      if (!rx.global) return regExpExec(rx, S);\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n      var A = [];\n      var n = 0;\n      var result;\n      while ((result = regExpExec(rx, S)) !== null) {\n        var matchStr = String(result[0]);\n        A[n] = matchStr;\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n        n++;\n      }\n      return n === 0 ? null : A;\n    }\n  ];\n});\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./U-Upload.vue?vue&type=style&index=0&id=e6d83566&lang=stylus&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./U-Upload.vue?vue&type=style&index=0&id=e6d83566&lang=stylus&scoped=true&\"","(function() {\n\n    var debug = false;\n\n    var root = this;\n\n    var EXIF = function(obj) {\n        if (obj instanceof EXIF) return obj;\n        if (!(this instanceof EXIF)) return new EXIF(obj);\n        this.EXIFwrapped = obj;\n    };\n\n    if (typeof exports !== 'undefined') {\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = EXIF;\n        }\n        exports.EXIF = EXIF;\n    } else {\n        root.EXIF = EXIF;\n    }\n\n    var ExifTags = EXIF.Tags = {\n\n        // version tags\n        0x9000 : \"ExifVersion\",             // EXIF version\n        0xA000 : \"FlashpixVersion\",         // Flashpix format version\n\n        // colorspace tags\n        0xA001 : \"ColorSpace\",              // Color space information tag\n\n        // image configuration\n        0xA002 : \"PixelXDimension\",         // Valid width of meaningful image\n        0xA003 : \"PixelYDimension\",         // Valid height of meaningful image\n        0x9101 : \"ComponentsConfiguration\", // Information about channels\n        0x9102 : \"CompressedBitsPerPixel\",  // Compressed bits per pixel\n\n        // user information\n        0x927C : \"MakerNote\",               // Any desired information written by the manufacturer\n        0x9286 : \"UserComment\",             // Comments by user\n\n        // related file\n        0xA004 : \"RelatedSoundFile\",        // Name of related sound file\n\n        // date and time\n        0x9003 : \"DateTimeOriginal\",        // Date and time when the original image was generated\n        0x9004 : \"DateTimeDigitized\",       // Date and time when the image was stored digitally\n        0x9290 : \"SubsecTime\",              // Fractions of seconds for DateTime\n        0x9291 : \"SubsecTimeOriginal\",      // Fractions of seconds for DateTimeOriginal\n        0x9292 : \"SubsecTimeDigitized\",     // Fractions of seconds for DateTimeDigitized\n\n        // picture-taking conditions\n        0x829A : \"ExposureTime\",            // Exposure time (in seconds)\n        0x829D : \"FNumber\",                 // F number\n        0x8822 : \"ExposureProgram\",         // Exposure program\n        0x8824 : \"SpectralSensitivity\",     // Spectral sensitivity\n        0x8827 : \"ISOSpeedRatings\",         // ISO speed rating\n        0x8828 : \"OECF\",                    // Optoelectric conversion factor\n        0x9201 : \"ShutterSpeedValue\",       // Shutter speed\n        0x9202 : \"ApertureValue\",           // Lens aperture\n        0x9203 : \"BrightnessValue\",         // Value of brightness\n        0x9204 : \"ExposureBias\",            // Exposure bias\n        0x9205 : \"MaxApertureValue\",        // Smallest F number of lens\n        0x9206 : \"SubjectDistance\",         // Distance to subject in meters\n        0x9207 : \"MeteringMode\",            // Metering mode\n        0x9208 : \"LightSource\",             // Kind of light source\n        0x9209 : \"Flash\",                   // Flash status\n        0x9214 : \"SubjectArea\",             // Location and area of main subject\n        0x920A : \"FocalLength\",             // Focal length of the lens in mm\n        0xA20B : \"FlashEnergy\",             // Strobe energy in BCPS\n        0xA20C : \"SpatialFrequencyResponse\",    //\n        0xA20E : \"FocalPlaneXResolution\",   // Number of pixels in width direction per FocalPlaneResolutionUnit\n        0xA20F : \"FocalPlaneYResolution\",   // Number of pixels in height direction per FocalPlaneResolutionUnit\n        0xA210 : \"FocalPlaneResolutionUnit\",    // Unit for measuring FocalPlaneXResolution and FocalPlaneYResolution\n        0xA214 : \"SubjectLocation\",         // Location of subject in image\n        0xA215 : \"ExposureIndex\",           // Exposure index selected on camera\n        0xA217 : \"SensingMethod\",           // Image sensor type\n        0xA300 : \"FileSource\",              // Image source (3 == DSC)\n        0xA301 : \"SceneType\",               // Scene type (1 == directly photographed)\n        0xA302 : \"CFAPattern\",              // Color filter array geometric pattern\n        0xA401 : \"CustomRendered\",          // Special processing\n        0xA402 : \"ExposureMode\",            // Exposure mode\n        0xA403 : \"WhiteBalance\",            // 1 = auto white balance, 2 = manual\n        0xA404 : \"DigitalZoomRation\",       // Digital zoom ratio\n        0xA405 : \"FocalLengthIn35mmFilm\",   // Equivalent foacl length assuming 35mm film camera (in mm)\n        0xA406 : \"SceneCaptureType\",        // Type of scene\n        0xA407 : \"GainControl\",             // Degree of overall image gain adjustment\n        0xA408 : \"Contrast\",                // Direction of contrast processing applied by camera\n        0xA409 : \"Saturation\",              // Direction of saturation processing applied by camera\n        0xA40A : \"Sharpness\",               // Direction of sharpness processing applied by camera\n        0xA40B : \"DeviceSettingDescription\",    //\n        0xA40C : \"SubjectDistanceRange\",    // Distance to subject\n\n        // other tags\n        0xA005 : \"InteroperabilityIFDPointer\",\n        0xA420 : \"ImageUniqueID\"            // Identifier assigned uniquely to each image\n    };\n\n    var TiffTags = EXIF.TiffTags = {\n        0x0100 : \"ImageWidth\",\n        0x0101 : \"ImageHeight\",\n        0x8769 : \"ExifIFDPointer\",\n        0x8825 : \"GPSInfoIFDPointer\",\n        0xA005 : \"InteroperabilityIFDPointer\",\n        0x0102 : \"BitsPerSample\",\n        0x0103 : \"Compression\",\n        0x0106 : \"PhotometricInterpretation\",\n        0x0112 : \"Orientation\",\n        0x0115 : \"SamplesPerPixel\",\n        0x011C : \"PlanarConfiguration\",\n        0x0212 : \"YCbCrSubSampling\",\n        0x0213 : \"YCbCrPositioning\",\n        0x011A : \"XResolution\",\n        0x011B : \"YResolution\",\n        0x0128 : \"ResolutionUnit\",\n        0x0111 : \"StripOffsets\",\n        0x0116 : \"RowsPerStrip\",\n        0x0117 : \"StripByteCounts\",\n        0x0201 : \"JPEGInterchangeFormat\",\n        0x0202 : \"JPEGInterchangeFormatLength\",\n        0x012D : \"TransferFunction\",\n        0x013E : \"WhitePoint\",\n        0x013F : \"PrimaryChromaticities\",\n        0x0211 : \"YCbCrCoefficients\",\n        0x0214 : \"ReferenceBlackWhite\",\n        0x0132 : \"DateTime\",\n        0x010E : \"ImageDescription\",\n        0x010F : \"Make\",\n        0x0110 : \"Model\",\n        0x0131 : \"Software\",\n        0x013B : \"Artist\",\n        0x8298 : \"Copyright\"\n    };\n\n    var GPSTags = EXIF.GPSTags = {\n        0x0000 : \"GPSVersionID\",\n        0x0001 : \"GPSLatitudeRef\",\n        0x0002 : \"GPSLatitude\",\n        0x0003 : \"GPSLongitudeRef\",\n        0x0004 : \"GPSLongitude\",\n        0x0005 : \"GPSAltitudeRef\",\n        0x0006 : \"GPSAltitude\",\n        0x0007 : \"GPSTimeStamp\",\n        0x0008 : \"GPSSatellites\",\n        0x0009 : \"GPSStatus\",\n        0x000A : \"GPSMeasureMode\",\n        0x000B : \"GPSDOP\",\n        0x000C : \"GPSSpeedRef\",\n        0x000D : \"GPSSpeed\",\n        0x000E : \"GPSTrackRef\",\n        0x000F : \"GPSTrack\",\n        0x0010 : \"GPSImgDirectionRef\",\n        0x0011 : \"GPSImgDirection\",\n        0x0012 : \"GPSMapDatum\",\n        0x0013 : \"GPSDestLatitudeRef\",\n        0x0014 : \"GPSDestLatitude\",\n        0x0015 : \"GPSDestLongitudeRef\",\n        0x0016 : \"GPSDestLongitude\",\n        0x0017 : \"GPSDestBearingRef\",\n        0x0018 : \"GPSDestBearing\",\n        0x0019 : \"GPSDestDistanceRef\",\n        0x001A : \"GPSDestDistance\",\n        0x001B : \"GPSProcessingMethod\",\n        0x001C : \"GPSAreaInformation\",\n        0x001D : \"GPSDateStamp\",\n        0x001E : \"GPSDifferential\"\n    };\n\n     // EXIF 2.3 Spec\n    var IFD1Tags = EXIF.IFD1Tags = {\n        0x0100: \"ImageWidth\",\n        0x0101: \"ImageHeight\",\n        0x0102: \"BitsPerSample\",\n        0x0103: \"Compression\",\n        0x0106: \"PhotometricInterpretation\",\n        0x0111: \"StripOffsets\",\n        0x0112: \"Orientation\",\n        0x0115: \"SamplesPerPixel\",\n        0x0116: \"RowsPerStrip\",\n        0x0117: \"StripByteCounts\",\n        0x011A: \"XResolution\",\n        0x011B: \"YResolution\",\n        0x011C: \"PlanarConfiguration\",\n        0x0128: \"ResolutionUnit\",\n        0x0201: \"JpegIFOffset\",    // When image format is JPEG, this value show offset to JPEG data stored.(aka \"ThumbnailOffset\" or \"JPEGInterchangeFormat\")\n        0x0202: \"JpegIFByteCount\", // When image format is JPEG, this value shows data size of JPEG image (aka \"ThumbnailLength\" or \"JPEGInterchangeFormatLength\")\n        0x0211: \"YCbCrCoefficients\",\n        0x0212: \"YCbCrSubSampling\",\n        0x0213: \"YCbCrPositioning\",\n        0x0214: \"ReferenceBlackWhite\"\n    };\n\n    var StringValues = EXIF.StringValues = {\n        ExposureProgram : {\n            0 : \"Not defined\",\n            1 : \"Manual\",\n            2 : \"Normal program\",\n            3 : \"Aperture priority\",\n            4 : \"Shutter priority\",\n            5 : \"Creative program\",\n            6 : \"Action program\",\n            7 : \"Portrait mode\",\n            8 : \"Landscape mode\"\n        },\n        MeteringMode : {\n            0 : \"Unknown\",\n            1 : \"Average\",\n            2 : \"CenterWeightedAverage\",\n            3 : \"Spot\",\n            4 : \"MultiSpot\",\n            5 : \"Pattern\",\n            6 : \"Partial\",\n            255 : \"Other\"\n        },\n        LightSource : {\n            0 : \"Unknown\",\n            1 : \"Daylight\",\n            2 : \"Fluorescent\",\n            3 : \"Tungsten (incandescent light)\",\n            4 : \"Flash\",\n            9 : \"Fine weather\",\n            10 : \"Cloudy weather\",\n            11 : \"Shade\",\n            12 : \"Daylight fluorescent (D 5700 - 7100K)\",\n            13 : \"Day white fluorescent (N 4600 - 5400K)\",\n            14 : \"Cool white fluorescent (W 3900 - 4500K)\",\n            15 : \"White fluorescent (WW 3200 - 3700K)\",\n            17 : \"Standard light A\",\n            18 : \"Standard light B\",\n            19 : \"Standard light C\",\n            20 : \"D55\",\n            21 : \"D65\",\n            22 : \"D75\",\n            23 : \"D50\",\n            24 : \"ISO studio tungsten\",\n            255 : \"Other\"\n        },\n        Flash : {\n            0x0000 : \"Flash did not fire\",\n            0x0001 : \"Flash fired\",\n            0x0005 : \"Strobe return light not detected\",\n            0x0007 : \"Strobe return light detected\",\n            0x0009 : \"Flash fired, compulsory flash mode\",\n            0x000D : \"Flash fired, compulsory flash mode, return light not detected\",\n            0x000F : \"Flash fired, compulsory flash mode, return light detected\",\n            0x0010 : \"Flash did not fire, compulsory flash mode\",\n            0x0018 : \"Flash did not fire, auto mode\",\n            0x0019 : \"Flash fired, auto mode\",\n            0x001D : \"Flash fired, auto mode, return light not detected\",\n            0x001F : \"Flash fired, auto mode, return light detected\",\n            0x0020 : \"No flash function\",\n            0x0041 : \"Flash fired, red-eye reduction mode\",\n            0x0045 : \"Flash fired, red-eye reduction mode, return light not detected\",\n            0x0047 : \"Flash fired, red-eye reduction mode, return light detected\",\n            0x0049 : \"Flash fired, compulsory flash mode, red-eye reduction mode\",\n            0x004D : \"Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected\",\n            0x004F : \"Flash fired, compulsory flash mode, red-eye reduction mode, return light detected\",\n            0x0059 : \"Flash fired, auto mode, red-eye reduction mode\",\n            0x005D : \"Flash fired, auto mode, return light not detected, red-eye reduction mode\",\n            0x005F : \"Flash fired, auto mode, return light detected, red-eye reduction mode\"\n        },\n        SensingMethod : {\n            1 : \"Not defined\",\n            2 : \"One-chip color area sensor\",\n            3 : \"Two-chip color area sensor\",\n            4 : \"Three-chip color area sensor\",\n            5 : \"Color sequential area sensor\",\n            7 : \"Trilinear sensor\",\n            8 : \"Color sequential linear sensor\"\n        },\n        SceneCaptureType : {\n            0 : \"Standard\",\n            1 : \"Landscape\",\n            2 : \"Portrait\",\n            3 : \"Night scene\"\n        },\n        SceneType : {\n            1 : \"Directly photographed\"\n        },\n        CustomRendered : {\n            0 : \"Normal process\",\n            1 : \"Custom process\"\n        },\n        WhiteBalance : {\n            0 : \"Auto white balance\",\n            1 : \"Manual white balance\"\n        },\n        GainControl : {\n            0 : \"None\",\n            1 : \"Low gain up\",\n            2 : \"High gain up\",\n            3 : \"Low gain down\",\n            4 : \"High gain down\"\n        },\n        Contrast : {\n            0 : \"Normal\",\n            1 : \"Soft\",\n            2 : \"Hard\"\n        },\n        Saturation : {\n            0 : \"Normal\",\n            1 : \"Low saturation\",\n            2 : \"High saturation\"\n        },\n        Sharpness : {\n            0 : \"Normal\",\n            1 : \"Soft\",\n            2 : \"Hard\"\n        },\n        SubjectDistanceRange : {\n            0 : \"Unknown\",\n            1 : \"Macro\",\n            2 : \"Close view\",\n            3 : \"Distant view\"\n        },\n        FileSource : {\n            3 : \"DSC\"\n        },\n\n        Components : {\n            0 : \"\",\n            1 : \"Y\",\n            2 : \"Cb\",\n            3 : \"Cr\",\n            4 : \"R\",\n            5 : \"G\",\n            6 : \"B\"\n        }\n    };\n\n    function addEvent(element, event, handler) {\n        if (element.addEventListener) {\n            element.addEventListener(event, handler, false);\n        } else if (element.attachEvent) {\n            element.attachEvent(\"on\" + event, handler);\n        }\n    }\n\n    function imageHasData(img) {\n        return !!(img.exifdata);\n    }\n\n\n    function base64ToArrayBuffer(base64, contentType) {\n        contentType = contentType || base64.match(/^data\\:([^\\;]+)\\;base64,/mi)[1] || ''; // e.g. 'data:image/jpeg;base64,...' => 'image/jpeg'\n        base64 = base64.replace(/^data\\:([^\\;]+)\\;base64,/gmi, '');\n        var binary = atob(base64);\n        var len = binary.length;\n        var buffer = new ArrayBuffer(len);\n        var view = new Uint8Array(buffer);\n        for (var i = 0; i < len; i++) {\n            view[i] = binary.charCodeAt(i);\n        }\n        return buffer;\n    }\n\n    function objectURLToBlob(url, callback) {\n        var http = new XMLHttpRequest();\n        http.open(\"GET\", url, true);\n        http.responseType = \"blob\";\n        http.onload = function(e) {\n            if (this.status == 200 || this.status === 0) {\n                callback(this.response);\n            }\n        };\n        http.send();\n    }\n\n    function getImageData(img, callback) {\n        function handleBinaryFile(binFile) {\n            var data = findEXIFinJPEG(binFile);\n            img.exifdata = data || {};\n            var iptcdata = findIPTCinJPEG(binFile);\n            img.iptcdata = iptcdata || {};\n            if (EXIF.isXmpEnabled) {\n               var xmpdata= findXMPinJPEG(binFile);\n               img.xmpdata = xmpdata || {};               \n            }\n            if (callback) {\n                callback.call(img);\n            }\n        }\n\n        if (img.src) {\n            if (/^data\\:/i.test(img.src)) { // Data URI\n                var arrayBuffer = base64ToArrayBuffer(img.src);\n                handleBinaryFile(arrayBuffer);\n\n            } else if (/^blob\\:/i.test(img.src)) { // Object URL\n                var fileReader = new FileReader();\n                fileReader.onload = function(e) {\n                    handleBinaryFile(e.target.result);\n                };\n                objectURLToBlob(img.src, function (blob) {\n                    fileReader.readAsArrayBuffer(blob);\n                });\n            } else {\n                var http = new XMLHttpRequest();\n                http.onload = function() {\n                    if (this.status == 200 || this.status === 0) {\n                        handleBinaryFile(http.response);\n                    } else {\n                        throw \"Could not load image\";\n                    }\n                    http = null;\n                };\n                http.open(\"GET\", img.src, true);\n                http.responseType = \"arraybuffer\";\n                http.send(null);\n            }\n        } else if (self.FileReader && (img instanceof self.Blob || img instanceof self.File)) {\n            var fileReader = new FileReader();\n            fileReader.onload = function(e) {\n                if (debug) console.log(\"Got file of length \" + e.target.result.byteLength);\n                handleBinaryFile(e.target.result);\n            };\n\n            fileReader.readAsArrayBuffer(img);\n        }\n    }\n\n    function findEXIFinJPEG(file) {\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n            if (debug) console.log(\"Not a valid JPEG\");\n            return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength,\n            marker;\n\n        while (offset < length) {\n            if (dataView.getUint8(offset) != 0xFF) {\n                if (debug) console.log(\"Not a valid marker at offset \" + offset + \", found: \" + dataView.getUint8(offset));\n                return false; // not a valid marker, something is wrong\n            }\n\n            marker = dataView.getUint8(offset + 1);\n            if (debug) console.log(marker);\n\n            // we could implement handling for other markers here,\n            // but we're only looking for 0xFFE1 for EXIF data\n\n            if (marker == 225) {\n                if (debug) console.log(\"Found 0xFFE1 marker\");\n\n                return readEXIFData(dataView, offset + 4, dataView.getUint16(offset + 2) - 2);\n\n                // offset += 2 + file.getShortAt(offset+2, true);\n\n            } else {\n                offset += 2 + dataView.getUint16(offset+2);\n            }\n\n        }\n\n    }\n\n    function findIPTCinJPEG(file) {\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n            if (debug) console.log(\"Not a valid JPEG\");\n            return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength;\n\n\n        var isFieldSegmentStart = function(dataView, offset){\n            return (\n                dataView.getUint8(offset) === 0x38 &&\n                dataView.getUint8(offset+1) === 0x42 &&\n                dataView.getUint8(offset+2) === 0x49 &&\n                dataView.getUint8(offset+3) === 0x4D &&\n                dataView.getUint8(offset+4) === 0x04 &&\n                dataView.getUint8(offset+5) === 0x04\n            );\n        };\n\n        while (offset < length) {\n\n            if ( isFieldSegmentStart(dataView, offset )){\n\n                // Get the length of the name header (which is padded to an even number of bytes)\n                var nameHeaderLength = dataView.getUint8(offset+7);\n                if(nameHeaderLength % 2 !== 0) nameHeaderLength += 1;\n                // Check for pre photoshop 6 format\n                if(nameHeaderLength === 0) {\n                    // Always 4\n                    nameHeaderLength = 4;\n                }\n\n                var startOffset = offset + 8 + nameHeaderLength;\n                var sectionLength = dataView.getUint16(offset + 6 + nameHeaderLength);\n\n                return readIPTCData(file, startOffset, sectionLength);\n\n                break;\n\n            }\n\n\n            // Not the marker, continue searching\n            offset++;\n\n        }\n\n    }\n    var IptcFieldMap = {\n        0x78 : 'caption',\n        0x6E : 'credit',\n        0x19 : 'keywords',\n        0x37 : 'dateCreated',\n        0x50 : 'byline',\n        0x55 : 'bylineTitle',\n        0x7A : 'captionWriter',\n        0x69 : 'headline',\n        0x74 : 'copyright',\n        0x0F : 'category'\n    };\n    function readIPTCData(file, startOffset, sectionLength){\n        var dataView = new DataView(file);\n        var data = {};\n        var fieldValue, fieldName, dataSize, segmentType, segmentSize;\n        var segmentStartPos = startOffset;\n        while(segmentStartPos < startOffset+sectionLength) {\n            if(dataView.getUint8(segmentStartPos) === 0x1C && dataView.getUint8(segmentStartPos+1) === 0x02){\n                segmentType = dataView.getUint8(segmentStartPos+2);\n                if(segmentType in IptcFieldMap) {\n                    dataSize = dataView.getInt16(segmentStartPos+3);\n                    segmentSize = dataSize + 5;\n                    fieldName = IptcFieldMap[segmentType];\n                    fieldValue = getStringFromDB(dataView, segmentStartPos+5, dataSize);\n                    // Check if we already stored a value with this name\n                    if(data.hasOwnProperty(fieldName)) {\n                        // Value already stored with this name, create multivalue field\n                        if(data[fieldName] instanceof Array) {\n                            data[fieldName].push(fieldValue);\n                        }\n                        else {\n                            data[fieldName] = [data[fieldName], fieldValue];\n                        }\n                    }\n                    else {\n                        data[fieldName] = fieldValue;\n                    }\n                }\n\n            }\n            segmentStartPos++;\n        }\n        return data;\n    }\n\n\n\n    function readTags(file, tiffStart, dirStart, strings, bigEnd) {\n        var entries = file.getUint16(dirStart, !bigEnd),\n            tags = {},\n            entryOffset, tag,\n            i;\n\n        for (i=0;i<entries;i++) {\n            entryOffset = dirStart + i*12 + 2;\n            tag = strings[file.getUint16(entryOffset, !bigEnd)];\n            if (!tag && debug) console.log(\"Unknown tag: \" + file.getUint16(entryOffset, !bigEnd));\n            tags[tag] = readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd);\n        }\n        return tags;\n    }\n\n\n    function readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd) {\n        var type = file.getUint16(entryOffset+2, !bigEnd),\n            numValues = file.getUint32(entryOffset+4, !bigEnd),\n            valueOffset = file.getUint32(entryOffset+8, !bigEnd) + tiffStart,\n            offset,\n            vals, val, n,\n            numerator, denominator;\n\n        switch (type) {\n            case 1: // byte, 8-bit unsigned int\n            case 7: // undefined, 8-bit byte, value depending on field\n                if (numValues == 1) {\n                    return file.getUint8(entryOffset + 8, !bigEnd);\n                } else {\n                    offset = numValues > 4 ? valueOffset : (entryOffset + 8);\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint8(offset + n);\n                    }\n                    return vals;\n                }\n\n            case 2: // ascii, 8-bit byte\n                offset = numValues > 4 ? valueOffset : (entryOffset + 8);\n                return getStringFromDB(file, offset, numValues-1);\n\n            case 3: // short, 16 bit int\n                if (numValues == 1) {\n                    return file.getUint16(entryOffset + 8, !bigEnd);\n                } else {\n                    offset = numValues > 2 ? valueOffset : (entryOffset + 8);\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint16(offset + 2*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 4: // long, 32 bit int\n                if (numValues == 1) {\n                    return file.getUint32(entryOffset + 8, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint32(valueOffset + 4*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 5:    // rational = two long values, first is numerator, second is denominator\n                if (numValues == 1) {\n                    numerator = file.getUint32(valueOffset, !bigEnd);\n                    denominator = file.getUint32(valueOffset+4, !bigEnd);\n                    val = new Number(numerator / denominator);\n                    val.numerator = numerator;\n                    val.denominator = denominator;\n                    return val;\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        numerator = file.getUint32(valueOffset + 8*n, !bigEnd);\n                        denominator = file.getUint32(valueOffset+4 + 8*n, !bigEnd);\n                        vals[n] = new Number(numerator / denominator);\n                        vals[n].numerator = numerator;\n                        vals[n].denominator = denominator;\n                    }\n                    return vals;\n                }\n\n            case 9: // slong, 32 bit signed int\n                if (numValues == 1) {\n                    return file.getInt32(entryOffset + 8, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getInt32(valueOffset + 4*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 10: // signed rational, two slongs, first is numerator, second is denominator\n                if (numValues == 1) {\n                    return file.getInt32(valueOffset, !bigEnd) / file.getInt32(valueOffset+4, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getInt32(valueOffset + 8*n, !bigEnd) / file.getInt32(valueOffset+4 + 8*n, !bigEnd);\n                    }\n                    return vals;\n                }\n        }\n    }\n\n    /**\n    * Given an IFD (Image File Directory) start offset\n    * returns an offset to next IFD or 0 if it's the last IFD.\n    */\n    function getNextIFDOffset(dataView, dirStart, bigEnd){\n        //the first 2bytes means the number of directory entries contains in this IFD\n        var entries = dataView.getUint16(dirStart, !bigEnd);\n\n        // After last directory entry, there is a 4bytes of data,\n        // it means an offset to next IFD.\n        // If its value is '0x00000000', it means this is the last IFD and there is no linked IFD.\n\n        return dataView.getUint32(dirStart + 2 + entries * 12, !bigEnd); // each entry is 12 bytes long\n    }\n\n    function readThumbnailImage(dataView, tiffStart, firstIFDOffset, bigEnd){\n        // get the IFD1 offset\n        var IFD1OffsetPointer = getNextIFDOffset(dataView, tiffStart+firstIFDOffset, bigEnd);\n\n        if (!IFD1OffsetPointer) {\n            // console.log('******** IFD1Offset is empty, image thumb not found ********');\n            return {};\n        }\n        else if (IFD1OffsetPointer > dataView.byteLength) { // this should not happen\n            // console.log('******** IFD1Offset is outside the bounds of the DataView ********');\n            return {};\n        }\n        // console.log('*******  thumbnail IFD offset (IFD1) is: %s', IFD1OffsetPointer);\n\n        var thumbTags = readTags(dataView, tiffStart, tiffStart + IFD1OffsetPointer, IFD1Tags, bigEnd)\n\n        // EXIF 2.3 specification for JPEG format thumbnail\n\n        // If the value of Compression(0x0103) Tag in IFD1 is '6', thumbnail image format is JPEG.\n        // Most of Exif image uses JPEG format for thumbnail. In that case, you can get offset of thumbnail\n        // by JpegIFOffset(0x0201) Tag in IFD1, size of thumbnail by JpegIFByteCount(0x0202) Tag.\n        // Data format is ordinary JPEG format, starts from 0xFFD8 and ends by 0xFFD9. It seems that\n        // JPEG format and 160x120pixels of size are recommended thumbnail format for Exif2.1 or later.\n\n        if (thumbTags['Compression']) {\n            // console.log('Thumbnail image found!');\n\n            switch (thumbTags['Compression']) {\n                case 6:\n                    // console.log('Thumbnail image format is JPEG');\n                    if (thumbTags.JpegIFOffset && thumbTags.JpegIFByteCount) {\n                    // extract the thumbnail\n                        var tOffset = tiffStart + thumbTags.JpegIFOffset;\n                        var tLength = thumbTags.JpegIFByteCount;\n                        thumbTags['blob'] = new Blob([new Uint8Array(dataView.buffer, tOffset, tLength)], {\n                            type: 'image/jpeg'\n                        });\n                    }\n                break;\n\n            case 1:\n                console.log(\"Thumbnail image format is TIFF, which is not implemented.\");\n                break;\n            default:\n                console.log(\"Unknown thumbnail image format '%s'\", thumbTags['Compression']);\n            }\n        }\n        else if (thumbTags['PhotometricInterpretation'] == 2) {\n            console.log(\"Thumbnail image format is RGB, which is not implemented.\");\n        }\n        return thumbTags;\n    }\n\n    function getStringFromDB(buffer, start, length) {\n        var outstr = \"\";\n        for (n = start; n < start+length; n++) {\n            outstr += String.fromCharCode(buffer.getUint8(n));\n        }\n        return outstr;\n    }\n\n    function readEXIFData(file, start) {\n        if (getStringFromDB(file, start, 4) != \"Exif\") {\n            if (debug) console.log(\"Not valid EXIF data! \" + getStringFromDB(file, start, 4));\n            return false;\n        }\n\n        var bigEnd,\n            tags, tag,\n            exifData, gpsData,\n            tiffOffset = start + 6;\n\n        // test for TIFF validity and endianness\n        if (file.getUint16(tiffOffset) == 0x4949) {\n            bigEnd = false;\n        } else if (file.getUint16(tiffOffset) == 0x4D4D) {\n            bigEnd = true;\n        } else {\n            if (debug) console.log(\"Not valid TIFF data! (no 0x4949 or 0x4D4D)\");\n            return false;\n        }\n\n        if (file.getUint16(tiffOffset+2, !bigEnd) != 0x002A) {\n            if (debug) console.log(\"Not valid TIFF data! (no 0x002A)\");\n            return false;\n        }\n\n        var firstIFDOffset = file.getUint32(tiffOffset+4, !bigEnd);\n\n        if (firstIFDOffset < 0x00000008) {\n            if (debug) console.log(\"Not valid TIFF data! (First offset less than 8)\", file.getUint32(tiffOffset+4, !bigEnd));\n            return false;\n        }\n\n        tags = readTags(file, tiffOffset, tiffOffset + firstIFDOffset, TiffTags, bigEnd);\n\n        if (tags.ExifIFDPointer) {\n            exifData = readTags(file, tiffOffset, tiffOffset + tags.ExifIFDPointer, ExifTags, bigEnd);\n            for (tag in exifData) {\n                switch (tag) {\n                    case \"LightSource\" :\n                    case \"Flash\" :\n                    case \"MeteringMode\" :\n                    case \"ExposureProgram\" :\n                    case \"SensingMethod\" :\n                    case \"SceneCaptureType\" :\n                    case \"SceneType\" :\n                    case \"CustomRendered\" :\n                    case \"WhiteBalance\" :\n                    case \"GainControl\" :\n                    case \"Contrast\" :\n                    case \"Saturation\" :\n                    case \"Sharpness\" :\n                    case \"SubjectDistanceRange\" :\n                    case \"FileSource\" :\n                        exifData[tag] = StringValues[tag][exifData[tag]];\n                        break;\n\n                    case \"ExifVersion\" :\n                    case \"FlashpixVersion\" :\n                        exifData[tag] = String.fromCharCode(exifData[tag][0], exifData[tag][1], exifData[tag][2], exifData[tag][3]);\n                        break;\n\n                    case \"ComponentsConfiguration\" :\n                        exifData[tag] =\n                            StringValues.Components[exifData[tag][0]] +\n                            StringValues.Components[exifData[tag][1]] +\n                            StringValues.Components[exifData[tag][2]] +\n                            StringValues.Components[exifData[tag][3]];\n                        break;\n                }\n                tags[tag] = exifData[tag];\n            }\n        }\n\n        if (tags.GPSInfoIFDPointer) {\n            gpsData = readTags(file, tiffOffset, tiffOffset + tags.GPSInfoIFDPointer, GPSTags, bigEnd);\n            for (tag in gpsData) {\n                switch (tag) {\n                    case \"GPSVersionID\" :\n                        gpsData[tag] = gpsData[tag][0] +\n                            \".\" + gpsData[tag][1] +\n                            \".\" + gpsData[tag][2] +\n                            \".\" + gpsData[tag][3];\n                        break;\n                }\n                tags[tag] = gpsData[tag];\n            }\n        }\n\n        // extract thumbnail\n        tags['thumbnail'] = readThumbnailImage(file, tiffOffset, firstIFDOffset, bigEnd);\n\n        return tags;\n    }\n\n   function findXMPinJPEG(file) {\n\n        if (!('DOMParser' in self)) {\n            // console.warn('XML parsing not supported without DOMParser');\n            return;\n        }\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n           if (debug) console.log(\"Not a valid JPEG\");\n           return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength,\n            dom = new DOMParser();\n\n        while (offset < (length-4)) {\n            if (getStringFromDB(dataView, offset, 4) == \"http\") {\n                var startOffset = offset - 1;\n                var sectionLength = dataView.getUint16(offset - 2) - 1;\n                var xmpString = getStringFromDB(dataView, startOffset, sectionLength)\n                var xmpEndIndex = xmpString.indexOf('xmpmeta>') + 8;\n                xmpString = xmpString.substring( xmpString.indexOf( '<x:xmpmeta' ), xmpEndIndex );\n\n                var indexOfXmp = xmpString.indexOf('x:xmpmeta') + 10\n                //Many custom written programs embed xmp/xml without any namespace. Following are some of them.\n                //Without these namespaces, XML is thought to be invalid by parsers\n                xmpString = xmpString.slice(0, indexOfXmp)\n                            + 'xmlns:Iptc4xmpCore=\"http://iptc.org/std/Iptc4xmpCore/1.0/xmlns/\" '\n                            + 'xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" '\n                            + 'xmlns:tiff=\"http://ns.adobe.com/tiff/1.0/\" '\n                            + 'xmlns:plus=\"http://schemas.android.com/apk/lib/com.google.android.gms.plus\" '\n                            + 'xmlns:ext=\"http://www.gettyimages.com/xsltExtension/1.0\" '\n                            + 'xmlns:exif=\"http://ns.adobe.com/exif/1.0/\" '\n                            + 'xmlns:stEvt=\"http://ns.adobe.com/xap/1.0/sType/ResourceEvent#\" '\n                            + 'xmlns:stRef=\"http://ns.adobe.com/xap/1.0/sType/ResourceRef#\" '\n                            + 'xmlns:crs=\"http://ns.adobe.com/camera-raw-settings/1.0/\" '\n                            + 'xmlns:xapGImg=\"http://ns.adobe.com/xap/1.0/g/img/\" '\n                            + 'xmlns:Iptc4xmpExt=\"http://iptc.org/std/Iptc4xmpExt/2008-02-29/\" '\n                            + xmpString.slice(indexOfXmp)\n\n                var domDocument = dom.parseFromString( xmpString, 'text/xml' );\n                return xml2Object(domDocument);\n            } else{\n             offset++;\n            }\n        }\n    }\n\n    function xml2json(xml) {\n        var json = {};\n      \n        if (xml.nodeType == 1) { // element node\n          if (xml.attributes.length > 0) {\n            json['@attributes'] = {};\n            for (var j = 0; j < xml.attributes.length; j++) {\n              var attribute = xml.attributes.item(j);\n              json['@attributes'][attribute.nodeName] = attribute.nodeValue;\n            }\n          }\n        } else if (xml.nodeType == 3) { // text node\n          return xml.nodeValue;\n        }\n      \n        // deal with children\n        if (xml.hasChildNodes()) {\n          for(var i = 0; i < xml.childNodes.length; i++) {\n            var child = xml.childNodes.item(i);\n            var nodeName = child.nodeName;\n            if (json[nodeName] == null) {\n              json[nodeName] = xml2json(child);\n            } else {\n              if (json[nodeName].push == null) {\n                var old = json[nodeName];\n                json[nodeName] = [];\n                json[nodeName].push(old);\n              }\n              json[nodeName].push(xml2json(child));\n            }\n          }\n        }\n        \n        return json;\n    }\n\n    function xml2Object(xml) {\n        try {\n            var obj = {};\n            if (xml.children.length > 0) {\n              for (var i = 0; i < xml.children.length; i++) {\n                var item = xml.children.item(i);\n                var attributes = item.attributes;\n                for(var idx in attributes) {\n                    var itemAtt = attributes[idx];\n                    var dataKey = itemAtt.nodeName;\n                    var dataValue = itemAtt.nodeValue;\n\n                    if(dataKey !== undefined) {\n                        obj[dataKey] = dataValue;\n                    }\n                }\n                var nodeName = item.nodeName;\n\n                if (typeof (obj[nodeName]) == \"undefined\") {\n                  obj[nodeName] = xml2json(item);\n                } else {\n                  if (typeof (obj[nodeName].push) == \"undefined\") {\n                    var old = obj[nodeName];\n\n                    obj[nodeName] = [];\n                    obj[nodeName].push(old);\n                  }\n                  obj[nodeName].push(xml2json(item));\n                }\n              }\n            } else {\n              obj = xml.textContent;\n            }\n            return obj;\n          } catch (e) {\n              console.log(e.message);\n          }\n    }\n\n    EXIF.enableXmp = function() {\n        EXIF.isXmpEnabled = true;\n    }\n\n    EXIF.disableXmp = function() {\n        EXIF.isXmpEnabled = false;\n    }\n\n    EXIF.getData = function(img, callback) {\n        if (((self.Image && img instanceof self.Image)\n            || (self.HTMLImageElement && img instanceof self.HTMLImageElement))\n            && !img.complete)\n            return false;\n\n        if (!imageHasData(img)) {\n            getImageData(img, callback);\n        } else {\n            if (callback) {\n                callback.call(img);\n            }\n        }\n        return true;\n    }\n\n    EXIF.getTag = function(img, tag) {\n        if (!imageHasData(img)) return;\n        return img.exifdata[tag];\n    }\n    \n    EXIF.getIptcTag = function(img, tag) {\n        if (!imageHasData(img)) return;\n        return img.iptcdata[tag];\n    }\n\n    EXIF.getAllTags = function(img) {\n        if (!imageHasData(img)) return {};\n        var a,\n            data = img.exifdata,\n            tags = {};\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                tags[a] = data[a];\n            }\n        }\n        return tags;\n    }\n    \n    EXIF.getAllIptcTags = function(img) {\n        if (!imageHasData(img)) return {};\n        var a,\n            data = img.iptcdata,\n            tags = {};\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                tags[a] = data[a];\n            }\n        }\n        return tags;\n    }\n\n    EXIF.pretty = function(img) {\n        if (!imageHasData(img)) return \"\";\n        var a,\n            data = img.exifdata,\n            strPretty = \"\";\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                if (typeof data[a] == \"object\") {\n                    if (data[a] instanceof Number) {\n                        strPretty += a + \" : \" + data[a] + \" [\" + data[a].numerator + \"/\" + data[a].denominator + \"]\\r\\n\";\n                    } else {\n                        strPretty += a + \" : [\" + data[a].length + \" values]\\r\\n\";\n                    }\n                } else {\n                    strPretty += a + \" : \" + data[a] + \"\\r\\n\";\n                }\n            }\n        }\n        return strPretty;\n    }\n\n    EXIF.readFromBinaryFile = function(file) {\n        return findEXIFinJPEG(file);\n    }\n\n    if (typeof define === 'function' && define.amd) {\n        define('exif-js', [], function() {\n            return EXIF;\n        });\n    }\n}.call(this));\n\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"upload-wrap\"},[_c('cube-upload',{attrs:{\"max\":1,\"auto\":false,\"multiple\":false,\"accept\":\"image/jpg, image/jpeg, image/png\",\"processFile\":_vm.processFile,\"simultaneous-uploads\":1},on:{\"file-submitted\":_vm.onFileSubmitted,\"file-removed\":_vm.onFileRemoved,\"files-added\":_vm.onFilesAdded},model:{value:(_vm.value),callback:function ($$v) {_vm.value=$$v},expression:\"value\"}}),_c('cube-loading',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.loading),expression:\"loading\"}],staticClass:\"loading\"})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import Exif from 'exif-js';\n\nconst uploadFix = {\n  rotateImg(img, direction, canvas) {\n    // 最小与最大旋转方向，图片旋转4次后回到原方向\n    const minStep = 0;\n    const maxStep = 3;\n    if (img == null) return;\n    // img的高度和宽度不能在img元素隐藏后获取，否则会出错\n    const height = img.height;\n    const width = img.width;\n    let step = 2;\n    if (step == null) {\n      step = minStep;\n    }\n    if (direction === 'right') {\n      step++;\n      // 旋转到原位置，即超过最大值\n      step > maxStep && (step = minStep);\n    } else if (direction === 'right2') {\n      step = 2;\n    } else {\n      step--;\n      step < minStep && (step = maxStep);\n    }\n    // 旋转角度以弧度值为参数\n    const degree = step * 90 * Math.PI / 180;\n    const ctx = canvas.getContext('2d');\n    switch (step) {\n      case 0:\n        canvas.width = width;\n        canvas.height = height;\n        ctx.drawImage(img, 0, 0);\n        break;\n      case 1:\n        canvas.width = height;\n        canvas.height = width;\n        ctx.rotate(degree);\n        ctx.drawImage(img, 0, -height);\n        break;\n      case 2:\n        canvas.width = width;\n        canvas.height = height;\n        ctx.rotate(degree);\n        ctx.drawImage(img, -width, -height);\n        break;\n      case 3:\n        canvas.width = height;\n        canvas.height = width;\n        ctx.rotate(degree);\n        ctx.drawImage(img, -width, 0);\n        break;\n      default:\n        break;\n    }\n  },\n  compress(img, orientation) {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    // 瓦片canvas\n    const tCanvas = document.createElement('canvas');\n    const tctx = tCanvas.getContext('2d');\n    let width = img.width;\n    let height = img.height;\n    // 如果图片大于四百万像素，计算压缩比并将大小压至400万以下\n    let ratio = width * height / 4000000;\n    if (ratio > 1) {\n      console.log('大于400万像素');\n      ratio = Math.sqrt(ratio);\n      width /= ratio;\n      height /= ratio;\n    } else {\n      ratio = 1;\n    }\n    canvas.width = width;\n    canvas.height = height;\n    // 铺底色\n    ctx.fillStyle = '#fff';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    // 如果图片像素大于100万则使用瓦片绘制\n    let count = width * height / 1000000;\n    if (count > 1) {\n      console.log('超过100W像素');\n      // 计算要分成多少块瓦片\n      count = ~~(Math.sqrt(count) + 1);\n      // 计算每块瓦片的宽和高\n      const nw = ~~(width / count);\n      const nh = ~~(height / count);\n      tCanvas.width = nw;\n      tCanvas.height = nh;\n      for (let i = 0; i < count; i++) {\n        for (let j = 0; j < count; j++) {\n          tctx.drawImage(\n            img,\n            i * nw * ratio,\n            j * nh * ratio,\n            nw * ratio,\n            nh * ratio,\n            0,\n            0,\n            nw,\n            nh,\n          );\n          ctx.drawImage(tCanvas, i * nw, j * nh, nw, nh);\n        }\n      }\n    } else {\n      ctx.drawImage(img, 0, 0, width, height);\n    }\n    // 修复ios上传图片的时候 被旋转的问题\n    if (orientation !== '' && orientation !== 1) {\n      switch (orientation) {\n        // 需要顺时针（向左）90度旋转\n        case 6:\n          this.rotateImg(img, 'left', canvas);\n          break;\n        // 需要逆时针（向右）90度旋转\n        case 8:\n          this.rotateImg(img, 'right', canvas);\n          break;\n        // 需要180度旋转\n        case 3:\n          this.rotateImg(img, 'right2', canvas);\n          break;\n        default:\n          break;\n      }\n    }\n    // 进行最小压缩\n    const ndata = canvas.toDataURL('image/jpeg', 0.6);\n    tCanvas.width = tCanvas.height = canvas.width = canvas.height = 0;\n    return ndata;\n  },\n};\n\nexport function dataURLtoFile(dataurl, filename) {\n  const arr = dataurl.split(',');\n  const mime = arr[0].match(/:(.*?);/)[1];\n  const bstr = atob(arr[1]);\n  let n = bstr.length;\n  const u8arr = new Uint8Array(n);\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n  if (!/Edge/.test(navigator.userAgent)) {\n    return new File([u8arr], filename, { type: mime });\n  }\n  return new Blob([u8arr], { type: mime });\n}\n\nexport function getOrientation(file) {\n  return new Promise((resolve) => {\n    // 此处回调不能用箭头函数\n    Exif.getData(file, function getDataCallBack() {\n      const orient = Exif.getTag(this, 'Orientation');\n      resolve(orient);\n    });\n  });\n}\n\nexport default uploadFix;\n","<template>\r\n  <div class=\"upload-wrap\">\r\n    <cube-upload\r\n      v-model=\"value\"\r\n      :max=\"1\"\r\n      :auto=\"false\"\r\n      :multiple=\"false\"\r\n      accept=\"image/jpg, image/jpeg, image/png\"\r\n      :processFile=\"processFile\"\r\n      :simultaneous-uploads=\"1\"\r\n      @file-submitted=\"onFileSubmitted\"\r\n      @file-removed=\"onFileRemoved\"\r\n      @files-added=\"onFilesAdded\" />\r\n    <cube-loading class=\"loading\" v-show=\"loading\"></cube-loading>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport uploadFix, { getOrientation } from '../utils/uploadFix';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: false,\r\n    };\r\n  },\r\n  props: {\r\n    value: {\r\n      type: Array,\r\n      default: () => [],\r\n    },\r\n    fileSubmitted: {\r\n      type: Function,\r\n      default: () => {},\r\n    },\r\n    fileRemoved: {\r\n      type: Function,\r\n      default: () => {},\r\n    },\r\n    filesAdded: {\r\n      type: Function,\r\n      default: () => {},\r\n    },\r\n  },\r\n  methods: {\r\n    onFileSubmitted(file) {\r\n      this.loading = false;\r\n      this.$emit('fileSubmitted', file);\r\n    },\r\n    onFileRemoved(file) {\r\n      this.$emit('fileRemoved', file);\r\n    },\r\n    onFilesAdded(file) {\r\n      this.loading = true;\r\n      this.$emit('filesAdded', file);\r\n    },\r\n    processFile(file, next) {\r\n      getOrientation(file).then((orientation) => {\r\n        const needRotate = orientation && orientation !== 1;\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          if (needRotate) {\r\n            const img = new Image();\r\n            img.src = e.target.result;\r\n            img.onload = () => {\r\n              const data = uploadFix.compress(img, orientation);\r\n              file.base64 = data;\r\n              next(file);\r\n            };\r\n          } else {\r\n            file.base64 = e.target.result;\r\n            next(file);\r\n          }\r\n        };\r\n        reader.readAsDataURL(file);\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\r\n  @import \"../assets/styles/common.styl\";\r\n// 上传图片样式\r\n  .upload-wrap {\r\n    width: 98px;\r\n    height: 98px;\r\n    position: relative;\r\n    >>> .cube-upload-btn-def {\r\n      width: 98px;\r\n      height: 98px;\r\n      border:1px dashed $border-color2;\r\n      border-radius:5px;\r\n      &:after {\r\n        border: none;\r\n      }\r\n    }\r\n\r\n    >>> .cube-upload-file-def {\r\n      width: 98px;\r\n      height: 98px;\r\n    }\r\n\r\n    >>> .cube-upload-btn-def {\r\n      background: transparent;\r\n    }\r\n\r\n    >>> .cube-upload-file-state {\r\n      width: 98px;\r\n      height: 98px;\r\n    }\r\n\r\n    >>> .cube-upload-btn-def > i::before,  >>> .cube-upload-btn-def > i::after{\r\n      width: 30px;\r\n    }\r\n\r\n  }\r\n\r\n  .white >>> .cube-upload-btn-def {\r\n    border-color: $color-white;\r\n  }\r\n  .white >>> .cube-upload-btn-def > i::before,.white >>> .cube-upload-btn-def > i::after {\r\n    background-color: $color-white;\r\n  }\r\n  .white >>> .cube-upload-file-def {\r\n    background-color: transparent;\r\n  }\r\n\r\n  .loading {\r\n    position: absolute;\r\n    display: flex;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??ref--16-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./U-Upload.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??ref--16-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./U-Upload.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./U-Upload.vue?vue&type=template&id=e6d83566&scoped=true&\"\nimport script from \"./U-Upload.vue?vue&type=script&lang=js&\"\nexport * from \"./U-Upload.vue?vue&type=script&lang=js&\"\nimport style0 from \"./U-Upload.vue?vue&type=style&index=0&id=e6d83566&lang=stylus&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"e6d83566\",\n  null\n  \n)\n\ncomponent.options.__file = \"U-Upload.vue\"\nexport default component.exports","// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\n\nmodule.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {\n  var O = toObject(this);\n  var len = toLength(O.length);\n  var to = toAbsoluteIndex(target, len);\n  var from = toAbsoluteIndex(start, len);\n  var end = arguments.length > 2 ? arguments[2] : undefined;\n  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);\n  var inc = 1;\n  if (from < to && to < from + count) {\n    inc = -1;\n    from += count - 1;\n    to += count - 1;\n  }\n  while (count-- > 0) {\n    if (from in O) O[to] = O[from];\n    else delete O[to];\n    to += inc;\n    from += inc;\n  } return O;\n};\n","'use strict';\nif (require('./_descriptors')) {\n  var LIBRARY = require('./_library');\n  var global = require('./_global');\n  var fails = require('./_fails');\n  var $export = require('./_export');\n  var $typed = require('./_typed');\n  var $buffer = require('./_typed-buffer');\n  var ctx = require('./_ctx');\n  var anInstance = require('./_an-instance');\n  var propertyDesc = require('./_property-desc');\n  var hide = require('./_hide');\n  var redefineAll = require('./_redefine-all');\n  var toInteger = require('./_to-integer');\n  var toLength = require('./_to-length');\n  var toIndex = require('./_to-index');\n  var toAbsoluteIndex = require('./_to-absolute-index');\n  var toPrimitive = require('./_to-primitive');\n  var has = require('./_has');\n  var classof = require('./_classof');\n  var isObject = require('./_is-object');\n  var toObject = require('./_to-object');\n  var isArrayIter = require('./_is-array-iter');\n  var create = require('./_object-create');\n  var getPrototypeOf = require('./_object-gpo');\n  var gOPN = require('./_object-gopn').f;\n  var getIterFn = require('./core.get-iterator-method');\n  var uid = require('./_uid');\n  var wks = require('./_wks');\n  var createArrayMethod = require('./_array-methods');\n  var createArrayIncludes = require('./_array-includes');\n  var speciesConstructor = require('./_species-constructor');\n  var ArrayIterators = require('./es6.array.iterator');\n  var Iterators = require('./_iterators');\n  var $iterDetect = require('./_iter-detect');\n  var setSpecies = require('./_set-species');\n  var arrayFill = require('./_array-fill');\n  var arrayCopyWithin = require('./_array-copy-within');\n  var $DP = require('./_object-dp');\n  var $GOPD = require('./_object-gopd');\n  var dP = $DP.f;\n  var gOPD = $GOPD.f;\n  var RangeError = global.RangeError;\n  var TypeError = global.TypeError;\n  var Uint8Array = global.Uint8Array;\n  var ARRAY_BUFFER = 'ArrayBuffer';\n  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;\n  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';\n  var PROTOTYPE = 'prototype';\n  var ArrayProto = Array[PROTOTYPE];\n  var $ArrayBuffer = $buffer.ArrayBuffer;\n  var $DataView = $buffer.DataView;\n  var arrayForEach = createArrayMethod(0);\n  var arrayFilter = createArrayMethod(2);\n  var arraySome = createArrayMethod(3);\n  var arrayEvery = createArrayMethod(4);\n  var arrayFind = createArrayMethod(5);\n  var arrayFindIndex = createArrayMethod(6);\n  var arrayIncludes = createArrayIncludes(true);\n  var arrayIndexOf = createArrayIncludes(false);\n  var arrayValues = ArrayIterators.values;\n  var arrayKeys = ArrayIterators.keys;\n  var arrayEntries = ArrayIterators.entries;\n  var arrayLastIndexOf = ArrayProto.lastIndexOf;\n  var arrayReduce = ArrayProto.reduce;\n  var arrayReduceRight = ArrayProto.reduceRight;\n  var arrayJoin = ArrayProto.join;\n  var arraySort = ArrayProto.sort;\n  var arraySlice = ArrayProto.slice;\n  var arrayToString = ArrayProto.toString;\n  var arrayToLocaleString = ArrayProto.toLocaleString;\n  var ITERATOR = wks('iterator');\n  var TAG = wks('toStringTag');\n  var TYPED_CONSTRUCTOR = uid('typed_constructor');\n  var DEF_CONSTRUCTOR = uid('def_constructor');\n  var ALL_CONSTRUCTORS = $typed.CONSTR;\n  var TYPED_ARRAY = $typed.TYPED;\n  var VIEW = $typed.VIEW;\n  var WRONG_LENGTH = 'Wrong length!';\n\n  var $map = createArrayMethod(1, function (O, length) {\n    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);\n  });\n\n  var LITTLE_ENDIAN = fails(function () {\n    // eslint-disable-next-line no-undef\n    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;\n  });\n\n  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {\n    new Uint8Array(1).set({});\n  });\n\n  var toOffset = function (it, BYTES) {\n    var offset = toInteger(it);\n    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');\n    return offset;\n  };\n\n  var validate = function (it) {\n    if (isObject(it) && TYPED_ARRAY in it) return it;\n    throw TypeError(it + ' is not a typed array!');\n  };\n\n  var allocate = function (C, length) {\n    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {\n      throw TypeError('It is not a typed array constructor!');\n    } return new C(length);\n  };\n\n  var speciesFromList = function (O, list) {\n    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);\n  };\n\n  var fromList = function (C, list) {\n    var index = 0;\n    var length = list.length;\n    var result = allocate(C, length);\n    while (length > index) result[index] = list[index++];\n    return result;\n  };\n\n  var addGetter = function (it, key, internal) {\n    dP(it, key, { get: function () { return this._d[internal]; } });\n  };\n\n  var $from = function from(source /* , mapfn, thisArg */) {\n    var O = toObject(source);\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var iterFn = getIterFn(O);\n    var i, length, values, result, step, iterator;\n    if (iterFn != undefined && !isArrayIter(iterFn)) {\n      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {\n        values.push(step.value);\n      } O = values;\n    }\n    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);\n    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {\n      result[i] = mapping ? mapfn(O[i], i) : O[i];\n    }\n    return result;\n  };\n\n  var $of = function of(/* ...items */) {\n    var index = 0;\n    var length = arguments.length;\n    var result = allocate(this, length);\n    while (length > index) result[index] = arguments[index++];\n    return result;\n  };\n\n  // iOS Safari 6.x fails here\n  var TO_LOCALE_BUG = !!Uint8Array && fails(function () { arrayToLocaleString.call(new Uint8Array(1)); });\n\n  var $toLocaleString = function toLocaleString() {\n    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);\n  };\n\n  var proto = {\n    copyWithin: function copyWithin(target, start /* , end */) {\n      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    every: function every(callbackfn /* , thisArg */) {\n      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    fill: function fill(value /* , start, end */) { // eslint-disable-line no-unused-vars\n      return arrayFill.apply(validate(this), arguments);\n    },\n    filter: function filter(callbackfn /* , thisArg */) {\n      return speciesFromList(this, arrayFilter(validate(this), callbackfn,\n        arguments.length > 1 ? arguments[1] : undefined));\n    },\n    find: function find(predicate /* , thisArg */) {\n      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    findIndex: function findIndex(predicate /* , thisArg */) {\n      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    forEach: function forEach(callbackfn /* , thisArg */) {\n      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    indexOf: function indexOf(searchElement /* , fromIndex */) {\n      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    includes: function includes(searchElement /* , fromIndex */) {\n      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    join: function join(separator) { // eslint-disable-line no-unused-vars\n      return arrayJoin.apply(validate(this), arguments);\n    },\n    lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) { // eslint-disable-line no-unused-vars\n      return arrayLastIndexOf.apply(validate(this), arguments);\n    },\n    map: function map(mapfn /* , thisArg */) {\n      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    reduce: function reduce(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars\n      return arrayReduce.apply(validate(this), arguments);\n    },\n    reduceRight: function reduceRight(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars\n      return arrayReduceRight.apply(validate(this), arguments);\n    },\n    reverse: function reverse() {\n      var that = this;\n      var length = validate(that).length;\n      var middle = Math.floor(length / 2);\n      var index = 0;\n      var value;\n      while (index < middle) {\n        value = that[index];\n        that[index++] = that[--length];\n        that[length] = value;\n      } return that;\n    },\n    some: function some(callbackfn /* , thisArg */) {\n      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    sort: function sort(comparefn) {\n      return arraySort.call(validate(this), comparefn);\n    },\n    subarray: function subarray(begin, end) {\n      var O = validate(this);\n      var length = O.length;\n      var $begin = toAbsoluteIndex(begin, length);\n      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(\n        O.buffer,\n        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,\n        toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin)\n      );\n    }\n  };\n\n  var $slice = function slice(start, end) {\n    return speciesFromList(this, arraySlice.call(validate(this), start, end));\n  };\n\n  var $set = function set(arrayLike /* , offset */) {\n    validate(this);\n    var offset = toOffset(arguments[1], 1);\n    var length = this.length;\n    var src = toObject(arrayLike);\n    var len = toLength(src.length);\n    var index = 0;\n    if (len + offset > length) throw RangeError(WRONG_LENGTH);\n    while (index < len) this[offset + index] = src[index++];\n  };\n\n  var $iterators = {\n    entries: function entries() {\n      return arrayEntries.call(validate(this));\n    },\n    keys: function keys() {\n      return arrayKeys.call(validate(this));\n    },\n    values: function values() {\n      return arrayValues.call(validate(this));\n    }\n  };\n\n  var isTAIndex = function (target, key) {\n    return isObject(target)\n      && target[TYPED_ARRAY]\n      && typeof key != 'symbol'\n      && key in target\n      && String(+key) == String(key);\n  };\n  var $getDesc = function getOwnPropertyDescriptor(target, key) {\n    return isTAIndex(target, key = toPrimitive(key, true))\n      ? propertyDesc(2, target[key])\n      : gOPD(target, key);\n  };\n  var $setDesc = function defineProperty(target, key, desc) {\n    if (isTAIndex(target, key = toPrimitive(key, true))\n      && isObject(desc)\n      && has(desc, 'value')\n      && !has(desc, 'get')\n      && !has(desc, 'set')\n      // TODO: add validation descriptor w/o calling accessors\n      && !desc.configurable\n      && (!has(desc, 'writable') || desc.writable)\n      && (!has(desc, 'enumerable') || desc.enumerable)\n    ) {\n      target[key] = desc.value;\n      return target;\n    } return dP(target, key, desc);\n  };\n\n  if (!ALL_CONSTRUCTORS) {\n    $GOPD.f = $getDesc;\n    $DP.f = $setDesc;\n  }\n\n  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {\n    getOwnPropertyDescriptor: $getDesc,\n    defineProperty: $setDesc\n  });\n\n  if (fails(function () { arrayToString.call({}); })) {\n    arrayToString = arrayToLocaleString = function toString() {\n      return arrayJoin.call(this);\n    };\n  }\n\n  var $TypedArrayPrototype$ = redefineAll({}, proto);\n  redefineAll($TypedArrayPrototype$, $iterators);\n  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);\n  redefineAll($TypedArrayPrototype$, {\n    slice: $slice,\n    set: $set,\n    constructor: function () { /* noop */ },\n    toString: arrayToString,\n    toLocaleString: $toLocaleString\n  });\n  addGetter($TypedArrayPrototype$, 'buffer', 'b');\n  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');\n  addGetter($TypedArrayPrototype$, 'byteLength', 'l');\n  addGetter($TypedArrayPrototype$, 'length', 'e');\n  dP($TypedArrayPrototype$, TAG, {\n    get: function () { return this[TYPED_ARRAY]; }\n  });\n\n  // eslint-disable-next-line max-statements\n  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {\n    CLAMPED = !!CLAMPED;\n    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';\n    var GETTER = 'get' + KEY;\n    var SETTER = 'set' + KEY;\n    var TypedArray = global[NAME];\n    var Base = TypedArray || {};\n    var TAC = TypedArray && getPrototypeOf(TypedArray);\n    var FORCED = !TypedArray || !$typed.ABV;\n    var O = {};\n    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];\n    var getter = function (that, index) {\n      var data = that._d;\n      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);\n    };\n    var setter = function (that, index, value) {\n      var data = that._d;\n      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;\n      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);\n    };\n    var addElement = function (that, index) {\n      dP(that, index, {\n        get: function () {\n          return getter(this, index);\n        },\n        set: function (value) {\n          return setter(this, index, value);\n        },\n        enumerable: true\n      });\n    };\n    if (FORCED) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME, '_d');\n        var index = 0;\n        var offset = 0;\n        var buffer, byteLength, length, klass;\n        if (!isObject(data)) {\n          length = toIndex(data);\n          byteLength = length * BYTES;\n          buffer = new $ArrayBuffer(byteLength);\n        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          buffer = data;\n          offset = toOffset($offset, BYTES);\n          var $len = data.byteLength;\n          if ($length === undefined) {\n            if ($len % BYTES) throw RangeError(WRONG_LENGTH);\n            byteLength = $len - offset;\n            if (byteLength < 0) throw RangeError(WRONG_LENGTH);\n          } else {\n            byteLength = toLength($length) * BYTES;\n            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);\n          }\n          length = byteLength / BYTES;\n        } else if (TYPED_ARRAY in data) {\n          return fromList(TypedArray, data);\n        } else {\n          return $from.call(TypedArray, data);\n        }\n        hide(that, '_d', {\n          b: buffer,\n          o: offset,\n          l: byteLength,\n          e: length,\n          v: new $DataView(buffer)\n        });\n        while (index < length) addElement(that, index++);\n      });\n      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);\n      hide(TypedArrayPrototype, 'constructor', TypedArray);\n    } else if (!fails(function () {\n      TypedArray(1);\n    }) || !fails(function () {\n      new TypedArray(-1); // eslint-disable-line no-new\n    }) || !$iterDetect(function (iter) {\n      new TypedArray(); // eslint-disable-line no-new\n      new TypedArray(null); // eslint-disable-line no-new\n      new TypedArray(1.5); // eslint-disable-line no-new\n      new TypedArray(iter); // eslint-disable-line no-new\n    }, true)) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME);\n        var klass;\n        // `ws` module bug, temporarily remove validation length for Uint8Array\n        // https://github.com/websockets/ws/pull/645\n        if (!isObject(data)) return new Base(toIndex(data));\n        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          return $length !== undefined\n            ? new Base(data, toOffset($offset, BYTES), $length)\n            : $offset !== undefined\n              ? new Base(data, toOffset($offset, BYTES))\n              : new Base(data);\n        }\n        if (TYPED_ARRAY in data) return fromList(TypedArray, data);\n        return $from.call(TypedArray, data);\n      });\n      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {\n        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);\n      });\n      TypedArray[PROTOTYPE] = TypedArrayPrototype;\n      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;\n    }\n    var $nativeIterator = TypedArrayPrototype[ITERATOR];\n    var CORRECT_ITER_NAME = !!$nativeIterator\n      && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);\n    var $iterator = $iterators.values;\n    hide(TypedArray, TYPED_CONSTRUCTOR, true);\n    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);\n    hide(TypedArrayPrototype, VIEW, true);\n    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);\n\n    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {\n      dP(TypedArrayPrototype, TAG, {\n        get: function () { return NAME; }\n      });\n    }\n\n    O[NAME] = TypedArray;\n\n    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);\n\n    $export($export.S, NAME, {\n      BYTES_PER_ELEMENT: BYTES\n    });\n\n    $export($export.S + $export.F * fails(function () { Base.of.call(TypedArray, 1); }), NAME, {\n      from: $from,\n      of: $of\n    });\n\n    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);\n\n    $export($export.P, NAME, proto);\n\n    setSpecies(NAME);\n\n    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });\n\n    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);\n\n    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;\n\n    $export($export.P + $export.F * fails(function () {\n      new TypedArray(1).slice();\n    }), NAME, { slice: $slice });\n\n    $export($export.P + $export.F * (fails(function () {\n      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();\n    }) || !fails(function () {\n      TypedArrayPrototype.toLocaleString.call([1, 2]);\n    })), NAME, { toLocaleString: $toLocaleString });\n\n    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;\n    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);\n  };\n} else module.exports = function () { /* empty */ };\n","'use strict';\nvar global = require('./_global');\nvar DESCRIPTORS = require('./_descriptors');\nvar LIBRARY = require('./_library');\nvar $typed = require('./_typed');\nvar hide = require('./_hide');\nvar redefineAll = require('./_redefine-all');\nvar fails = require('./_fails');\nvar anInstance = require('./_an-instance');\nvar toInteger = require('./_to-integer');\nvar toLength = require('./_to-length');\nvar toIndex = require('./_to-index');\nvar gOPN = require('./_object-gopn').f;\nvar dP = require('./_object-dp').f;\nvar arrayFill = require('./_array-fill');\nvar setToStringTag = require('./_set-to-string-tag');\nvar ARRAY_BUFFER = 'ArrayBuffer';\nvar DATA_VIEW = 'DataView';\nvar PROTOTYPE = 'prototype';\nvar WRONG_LENGTH = 'Wrong length!';\nvar WRONG_INDEX = 'Wrong index!';\nvar $ArrayBuffer = global[ARRAY_BUFFER];\nvar $DataView = global[DATA_VIEW];\nvar Math = global.Math;\nvar RangeError = global.RangeError;\n// eslint-disable-next-line no-shadow-restricted-names\nvar Infinity = global.Infinity;\nvar BaseBuffer = $ArrayBuffer;\nvar abs = Math.abs;\nvar pow = Math.pow;\nvar floor = Math.floor;\nvar log = Math.log;\nvar LN2 = Math.LN2;\nvar BUFFER = 'buffer';\nvar BYTE_LENGTH = 'byteLength';\nvar BYTE_OFFSET = 'byteOffset';\nvar $BUFFER = DESCRIPTORS ? '_b' : BUFFER;\nvar $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;\nvar $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;\n\n// IEEE754 conversions based on https://github.com/feross/ieee754\nfunction packIEEE754(value, mLen, nBytes) {\n  var buffer = new Array(nBytes);\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;\n  var i = 0;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  var e, m, c;\n  value = abs(value);\n  // eslint-disable-next-line no-self-compare\n  if (value != value || value === Infinity) {\n    // eslint-disable-next-line no-self-compare\n    m = value != value ? 1 : 0;\n    e = eMax;\n  } else {\n    e = floor(log(value) / LN2);\n    if (value * (c = pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * pow(2, eBias - 1) * pow(2, mLen);\n      e = 0;\n    }\n  }\n  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);\n  e = e << mLen | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);\n  buffer[--i] |= s * 128;\n  return buffer;\n}\nfunction unpackIEEE754(buffer, mLen, nBytes) {\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = eLen - 7;\n  var i = nBytes - 1;\n  var s = buffer[i--];\n  var e = s & 127;\n  var m;\n  s >>= 7;\n  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : s ? -Infinity : Infinity;\n  } else {\n    m = m + pow(2, mLen);\n    e = e - eBias;\n  } return (s ? -1 : 1) * m * pow(2, e - mLen);\n}\n\nfunction unpackI32(bytes) {\n  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];\n}\nfunction packI8(it) {\n  return [it & 0xff];\n}\nfunction packI16(it) {\n  return [it & 0xff, it >> 8 & 0xff];\n}\nfunction packI32(it) {\n  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];\n}\nfunction packF64(it) {\n  return packIEEE754(it, 52, 8);\n}\nfunction packF32(it) {\n  return packIEEE754(it, 23, 4);\n}\n\nfunction addGetter(C, key, internal) {\n  dP(C[PROTOTYPE], key, { get: function () { return this[internal]; } });\n}\n\nfunction get(view, bytes, index, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = store.slice(start, start + bytes);\n  return isLittleEndian ? pack : pack.reverse();\n}\nfunction set(view, bytes, index, conversion, value, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = conversion(+value);\n  for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];\n}\n\nif (!$typed.ABV) {\n  $ArrayBuffer = function ArrayBuffer(length) {\n    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);\n    var byteLength = toIndex(length);\n    this._b = arrayFill.call(new Array(byteLength), 0);\n    this[$LENGTH] = byteLength;\n  };\n\n  $DataView = function DataView(buffer, byteOffset, byteLength) {\n    anInstance(this, $DataView, DATA_VIEW);\n    anInstance(buffer, $ArrayBuffer, DATA_VIEW);\n    var bufferLength = buffer[$LENGTH];\n    var offset = toInteger(byteOffset);\n    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');\n    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);\n    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);\n    this[$BUFFER] = buffer;\n    this[$OFFSET] = offset;\n    this[$LENGTH] = byteLength;\n  };\n\n  if (DESCRIPTORS) {\n    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');\n    addGetter($DataView, BUFFER, '_b');\n    addGetter($DataView, BYTE_LENGTH, '_l');\n    addGetter($DataView, BYTE_OFFSET, '_o');\n  }\n\n  redefineAll($DataView[PROTOTYPE], {\n    getInt8: function getInt8(byteOffset) {\n      return get(this, 1, byteOffset)[0] << 24 >> 24;\n    },\n    getUint8: function getUint8(byteOffset) {\n      return get(this, 1, byteOffset)[0];\n    },\n    getInt16: function getInt16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;\n    },\n    getUint16: function getUint16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return bytes[1] << 8 | bytes[0];\n    },\n    getInt32: function getInt32(byteOffset /* , littleEndian */) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1]));\n    },\n    getUint32: function getUint32(byteOffset /* , littleEndian */) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;\n    },\n    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);\n    },\n    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);\n    },\n    setInt8: function setInt8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packF32, value, arguments[2]);\n    },\n    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {\n      set(this, 8, byteOffset, packF64, value, arguments[2]);\n    }\n  });\n} else {\n  if (!fails(function () {\n    $ArrayBuffer(1);\n  }) || !fails(function () {\n    new $ArrayBuffer(-1); // eslint-disable-line no-new\n  }) || fails(function () {\n    new $ArrayBuffer(); // eslint-disable-line no-new\n    new $ArrayBuffer(1.5); // eslint-disable-line no-new\n    new $ArrayBuffer(NaN); // eslint-disable-line no-new\n    return $ArrayBuffer.name != ARRAY_BUFFER;\n  })) {\n    $ArrayBuffer = function ArrayBuffer(length) {\n      anInstance(this, $ArrayBuffer);\n      return new BaseBuffer(toIndex(length));\n    };\n    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];\n    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {\n      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);\n    }\n    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;\n  }\n  // iOS Safari 7.x bug\n  var view = new $DataView(new $ArrayBuffer(2));\n  var $setInt8 = $DataView[PROTOTYPE].setInt8;\n  view.setInt8(0, 2147483648);\n  view.setInt8(1, 2147483649);\n  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {\n    setInt8: function setInt8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    }\n  }, true);\n}\nsetToStringTag($ArrayBuffer, ARRAY_BUFFER);\nsetToStringTag($DataView, DATA_VIEW);\nhide($DataView[PROTOTYPE], $typed.VIEW, true);\nexports[ARRAY_BUFFER] = $ArrayBuffer;\nexports[DATA_VIEW] = $DataView;\n"],"sourceRoot":""}